(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2422669,      55376]
NotebookOptionsPosition[   2390678,      54819]
NotebookOutlinePosition[   2391253,      54839]
CellTagsIndexPosition[   2391210,      54836]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Super\[FlLigature]occinaucinihilipili\[FiLigature]cation", "Title",
 CellChangeTimes->{{3.868444186162155*^9, 3.868444200257654*^9}, 
   3.877080457062428*^9},ExpressionUUID->"34c9f9d6-9bb6-4bb7-9a72-\
86a97261ffd3"],

Cell["Andrew Gomes, Maximillian Ruhdorfer and Joseph Tooby-Smith", "Subtitle",
 CellChangeTimes->{{3.868444227119707*^9, 3.86844422764599*^9}, {
  3.868444270307102*^9, 
  3.8684442865275927`*^9}},ExpressionUUID->"812d105f-96bb-4733-8c7b-\
87bdf50ae786"],

Cell[BoxData[
 RowBox[{"<<", "CompiledFunctionTools`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868975992537374*^9, 3.868976032698842*^9}, {
  3.8691403041649637`*^9, 3.869140311452075*^9}, {3.870356807644167*^9, 
  3.8703568078956347`*^9}, {3.872234817102892*^9, 3.8722348192609653`*^9}, {
  3.8750862363888187`*^9, 3.875086236791738*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5295c5ae-18e4-4ab7-a1e5-22316e4759ed"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Notebooks", "[", "\"\<SuperFlocci.nb\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", " ", "Automatic"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770804013822117`*^9, 3.877080403545703*^9}},
 CellLabel->
  "In[754]:=",ExpressionUUID->"b0780866-b7b4-4a47-903a-818b7cc6339c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<SuperFlocci V1.0.0.\\nAndrew Gomes, Maximillian Ruhdorfer and Joseph \
Tooby-Smith\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877080635903591*^9, 3.8770806393558407`*^9}, {
  3.877080677021791*^9, 3.877080706197925*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6addd6f7-ea3a-4053-a02a-d80c3a2a03bb"],

Cell[BoxData[
 FormBox["\<\"SuperFlocci V1.0.0.\\nAndrew Gomes, Maximillian Ruhdorfer and \
Joseph Tooby-Smith\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{
  3.877080706562703*^9, 3.877096805210897*^9, 3.877097576341942*^9, 
   3.877154487065353*^9, 3.8771565534944563`*^9, 3.877414060275857*^9, 
   3.8774154131364613`*^9, 3.8774156869086523`*^9, 3.877416013175269*^9, 
   3.8774178146947947`*^9, 3.87741808659755*^9, 3.877420417825808*^9, 
   3.877420813799469*^9, 3.877421139463225*^9, 3.877421459558632*^9, 
   3.877767940573888*^9, 3.877768050533559*^9, 3.877768208318425*^9, 
   3.877768338579265*^9, 3.877768425754661*^9, 3.877768524619707*^9, 
   3.8777700014865*^9, 3.8780249941998997`*^9, 3.878025423478176*^9, 
   3.8780297115594873`*^9, 3.878030177546699*^9, 3.87805176602111*^9, 
   3.878052267770493*^9, 3.8780542807558413`*^9, 3.8780544194670887`*^9, 
   3.87898847092496*^9, {3.879322051927821*^9, 3.879322061487294*^9}, 
   3.879327136565201*^9, 3.879329720664604*^9, 3.879833037641035*^9, 
   3.879835060583353*^9, 3.879848513406466*^9, 3.8798487737967167`*^9, 
   3.879849705176387*^9, 3.879849769798546*^9, 3.8798498366200657`*^9, 
   3.8798499642843122`*^9, 3.879850110300383*^9, 3.879851459881029*^9, 
   3.879857814800028*^9, 3.8798586991594143`*^9, 3.879859084672204*^9, 
   3.879863687783165*^9, 3.879938229847526*^9, 3.8799493514024267`*^9, 
   3.879951163737371*^9, 3.879951267131481*^9, 3.8799538259636106`*^9, 
   3.8801896499922333`*^9, 3.8802130538636627`*^9, 3.880213137518256*^9, 
   3.881486060531868*^9, 3.88149249905331*^9, 3.8814926471561127`*^9, 
   3.8814931428372498`*^9, 3.881493274308375*^9, 3.8814941165612288`*^9, 
   3.88252096165928*^9, 3.8825395282113543`*^9, 3.882541698031682*^9, 
   3.8828570907648907`*^9, 3.882858188786767*^9, 3.8830666966263647`*^9, 
   3.8907284595385437`*^9, 3.890728602642972*^9, 3.890804224755444*^9, 
   3.890804345615863*^9, 3.890804545630127*^9, 3.890804865538286*^9, 
   3.890811766752812*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b84124fa-9bfe-47b6-9ab1-7dd8306b04ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary of program", "Section",
 CellChangeTimes->{{3.8751655780283613`*^9, 
  3.8751655880806828`*^9}},ExpressionUUID->"bed908e3-49fc-4c2e-863a-\
c5eb73a70441"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FunctionListAdd", "[", "str_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Flocci$FunctionList", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"Flocci$FunctionList", ",", "str"}], "]"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FunctionListAdd", "[", "str_List", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"Flocci$FunctionListAdd", ",", "str"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"name_", ",", 
     RowBox[{"{", 
      RowBox[{
      "tagT_", ",", "inputT_", ",", "outputT_", ",", "descriptionT_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$FunctionListAdd", "[", 
       RowBox[{"{", "name", "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<tag\>\""}], "]"}], ",", "tagT"}], "]"}], 
          ",", "HoldFirst"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<input\>\""}], "]"}], ",", "inputT"}], 
           "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<output\>\""}], "]"}], ",", "outputT"}], 
           "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<description\>\""}], "]"}], ",", 
            "descriptionT"}], "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"name_", ",", 
     RowBox[{"{", 
      RowBox[{
      "tagT_", ",", "inputT_", ",", "outputT_", ",", "descriptionT_", ",", 
       "clearType_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$FunctionListAdd", "[", 
       RowBox[{"{", "name", "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<tag\>\""}], "]"}], ",", "tagT"}], "]"}], 
          ",", "HoldFirst"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<input\>\""}], "]"}], ",", "inputT"}], 
           "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<output\>\""}], "]"}], ",", "outputT"}], 
           "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<description\>\""}], "]"}], ",", 
            "descriptionT"}], "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"name", ",", "InputForm", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{"MessageName", "[", 
             RowBox[{"x", ",", "\"\<clear\>\""}], "]"}], ",", "clearType"}], 
           "]"}], ",", "HoldFirst"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8751685684555397`*^9, 3.8751685748683558`*^9}, {
  3.875174763712303*^9, 3.87517478680951*^9}, {3.8771576120464573`*^9, 
  3.877157612326796*^9}, {3.877418669984394*^9, 3.8774186995496597`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6519a534-132e-4e14-9fb0-78cc543eb868"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Outputs", " ", "those", " ", "functions", " ", "where", " ", "we", " ", 
    "have", " ", "not", " ", "yet", " ", "completed", " ", "the", " ", 
    "description"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$IncompleteDescription", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dependencies", ",", "downvalues", ",", "tagLabels", ",", "subvalues",
          ",", "dependenciesStrings", ",", " ", "inputLabels", ",", 
         "outputLabels", ",", "usageLabels", ",", "colouredNames", ",", 
         "tagsAndColors", ",", "out", ",", "list"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"downvalues", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"DownValues", "[", "x", "]"}], ",", "HoldFirst"}], 
               "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"subvalues", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"SubValues", "[", "x", "]"}], ",", "HoldFirst"}], 
               "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"dependenciesStrings", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
             "downvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
             "subvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "downvalues", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"dependencies", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"Flocci$FunctionList", ",", 
               RowBox[{
                RowBox[{"StringContainsQ", "[", 
                 RowBox[{
                  RowBox[{
                  "dependenciesStrings", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", "#"}], "]"}], "&"}]}], 
              "]"}], ",", 
             RowBox[{
             "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "downvalues", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"inputLabels", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"MessageName", "[", 
                 RowBox[{"x", ",", "\"\<input\>\""}], "]"}], ",", 
                "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", 
           "Flocci$FunctionList"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outputLabels", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"MessageName", "[", 
                 RowBox[{"x", ",", "\"\<output\>\""}], "]"}], ",", 
                "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", 
           "Flocci$FunctionList"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"usageLabels", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"MessageName", "[", 
                 RowBox[{"x", ",", "\"\<description\>\""}], "]"}], ",", 
                "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", 
           "Flocci$FunctionList"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tagLabels", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"x", ",", 
                RowBox[{"MessageName", "[", 
                 RowBox[{"x", ",", "\"\<tag\>\""}], "]"}], ",", "HoldFirst"}],
                "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"tagsAndColors", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Timing\>\"", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<LieAlg\>\"", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Aut\>\"", ",", "Magenta"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Weights\>\"", ",", "Pink"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Commu\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.2", ",", ".80", ",", "0"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Embed\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
              "0.0166444751115018", ",", "0.6509488401588792", ",", 
               "0.30562910859103076"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<U1\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.2", ",", "0.1", ",", "0.8"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<UpDirec\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.1", ",", ".50", ",", ".40"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<DownDirec\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.0", ",", ".50", ",", ".50"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Meta\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
              "0.8120432376740452", ",", "0.021464239426141507", ",", 
               "0.2194375543596434"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<User\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
              "0.36271103959560413", ",", "0.06903524415261963", ",", 
               "0.13369153399639733"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Global\>\"", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
              "0.656008479235596", ",", "0.38026308109304674", ",", 
               "0.5970982706807448"}], "]"}]}], "}"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"colouredNames", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"out", "=", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
               "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", "Bold", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "===", 
                 RowBox[{
                 "tagLabels", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"out", "=", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Bold", ",", 
                    RowBox[{
                    "t", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tagsAndColors"}], "}"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "out"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "Flocci$FunctionList", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
           "colouredNames", ",", "inputLabels", ",", "outputLabels", ",", 
            "usageLabels"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "\[Equal]", "MessageName"}], "||", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "]"}], "\[Equal]", "MessageName"}], "||", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              "]"}], "\[Equal]", "MessageName"}]}], "&"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "Flocci$IncompleteDescription"}]}]], "Input",
 CellChangeTimes->{{3.879322126700727*^9, 3.879322136679809*^9}, {
  3.8793221686942043`*^9, 3.879322233567539*^9}, {3.879322268819998*^9, 
  3.879322347024181*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"0d066eef-d921-4a38-bf7d-228472d8fdfe"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      StyleBox["\<\"Flocci$AlgAss\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"Flocci$AlgAss", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$AlgAss", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$AlgAss", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$AlgStandard\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"Flocci$AlgStandard", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$AlgStandard", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$AlgStandard", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$ExtractDominantWeights\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"Flocci$ExtractDominantWeights", "::", "input"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ExtractDominantWeights", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ExtractDominantWeights", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$ExtractHighestWeights\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"Flocci$ExtractHighestWeights", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ExtractHighestWeights", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ExtractHighestWeights", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$HighestWeightMultiplicity\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicity", "::", "input"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicity", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicity", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$ProjectionMatrixExtendableQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      StyleBox[
       RowBox[{"Flocci$ProjectionMatrixExtendableQ", "::", "input"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ProjectionMatrixExtendableQ", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ProjectionMatrixExtendableQ", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$UnorderedTuples\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.1, 0.5, 
         0.4]], "\<\"len) An integer\\n max) An integer\"\>", "\<\"A list of \
all vectors of length len, with numbers 1-max in decending order.\"\>", 
      StyleBox[
       RowBox[{"Flocci$UnorderedTuples", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$RaggedToFlat\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.1, 0.5, 
         0.4]], "\<\"A ragged list e.g. {{{1,2},{1,2}},{{3,4}}}\"\>", "\<\"A \
pair of the input flattened at 1 level e.g. {{1,2},{1,2},{3,4}}, and the \
length of each ragged part e.g. {2,1}\"\>", 
      StyleBox[
       RowBox[{"Flocci$RaggedToFlat", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$SublistQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$SublistQ", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$SublistQ", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$SublistQ", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$SelectByMemberQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$SelectByMemberQ", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$SelectByMemberQ", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$SelectByMemberQ", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$NonnegativeMatrixQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$NonnegativeMatrixQ", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$NonnegativeMatrixQ", "::", "output"}], "MessageName"], 
      
      StyleBox[
       RowBox[{"Flocci$NonnegativeMatrixQ", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$HighestWeightMultiplicityId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicityId", "::", "input"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicityId", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$HighestWeightMultiplicityId", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$MakeParentNodes\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$MakeParentNodes", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$MakeParentNodes", "::", "output"}], 
       "MessageName"], "\<\"Given a node (tg,t\[Beta],t\[Alpha]) and a \
minimal sup-algebra (g,\[CapitalLambda]\[Rho]). This functions finds all \
valid-triples (g,\[Beta],\[Alpha]) with a morphism down to (tg,t\[Beta],t\
\[Alpha]) through \[Rho].\"\>"},
     {
      StyleBox["\<\"Flocci$ShowIntermediateGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$ShowIntermediateGraph", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ShowIntermediateGraph", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ShowIntermediateGraph", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$GenerateGraphUpwards\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphUpwards", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphUpwards", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphUpwards", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$SpawnU1Nodes\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      StyleBox[
       RowBox[{"Flocci$SpawnU1Nodes", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$SpawnU1Nodes", "::", "output"}], 
       "MessageName"], "\<\"\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateGraphDownwards\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphDownwards", "::", "input"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphDownwards", "::", "output"}], 
       "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraphDownwards", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$ShowFinalGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      StyleBox[
       RowBox[{"Flocci$ShowFinalGraph", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ShowFinalGraph", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$ShowFinalGraph", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"Flocci$InitializeInputData\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FrontFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       BackFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       GraphicsColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434]], 
      StyleBox[
       RowBox[{"Flocci$InitializeInputData", "::", "input"}], "MessageName"], 
      
      StyleBox[
       RowBox[{"Flocci$InitializeInputData", "::", "output"}], 
       "MessageName"], "\<\"Need to change input to maximallist \
function.\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FrontFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       BackFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       GraphicsColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434]], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraph", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraph", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$GenerateGraph", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$MaxMinOutputReorder\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox[
       RowBox[{"Flocci$MaxMinOutputReorder", "::", "input"}], "MessageName"], 
      
      StyleBox[
       RowBox[{"Flocci$MaxMinOutputReorder", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$MaxMinOutputReorder", "::", "description"}], 
       "MessageName"]},
     {
      StyleBox["\<\"Flocci$PrintLie\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox[
       RowBox[{"Flocci$PrintLie", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$PrintLie", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"Flocci$PrintLie", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"FlocciDisplay\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox[
       RowBox[{"FlocciDisplay", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"FlocciDisplay", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"FlocciDisplay", "::", "description"}], "MessageName"]},
     {
      StyleBox["\<\"SuperFlocci\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FrontFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       BackFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       GraphicsColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`]], 
      StyleBox[
       RowBox[{"SuperFlocci", "::", "input"}], "MessageName"], 
      StyleBox[
       RowBox[{"SuperFlocci", "::", "output"}], "MessageName"], 
      StyleBox[
       RowBox[{"SuperFlocci", "::", "description"}], "MessageName"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.879322177681095*^9, 3.87932221089538*^9, {3.879322282333022*^9, 
   3.879322307400318*^9}, 3.8793223507619057`*^9},
 CellLabel->
  "Out[822]=",ExpressionUUID->"e6e43196-ccbc-4daa-bfd5-18363d275943"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionsPrint", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dependencies", ",", "downvalues", ",", "tagLabels", ",", "subvalues", 
       ",", "dependenciesStrings", ",", " ", "inputLabels", ",", 
       "outputLabels", ",", "usageLabels", ",", "colouredNames", ",", 
       "tagsAndColors", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"downvalues", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"DownValues", "[", "x", "]"}], ",", "HoldFirst"}], 
             "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"subvalues", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"SubValues", "[", "x", "]"}], ",", "HoldFirst"}], 
             "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dependenciesStrings", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{
           "downvalues", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], "]"}], "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
           "subvalues", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "downvalues", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dependencies", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"Flocci$FunctionList", ",", 
             RowBox[{
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
                RowBox[{
                "dependenciesStrings", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ",", "#"}], "]"}], "&"}]}], "]"}],
            ",", 
           RowBox[{
           "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "downvalues", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"inputLabels", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"MessageName", "[", 
               RowBox[{"x", ",", "\"\<input\>\""}], "]"}], ",", "HoldFirst"}],
              "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"outputLabels", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"MessageName", "[", 
               RowBox[{"x", ",", "\"\<output\>\""}], "]"}], ",", 
              "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", 
         "Flocci$FunctionList"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"usageLabels", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"MessageName", "[", 
               RowBox[{"x", ",", "\"\<description\>\""}], "]"}], ",", 
              "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", 
         "Flocci$FunctionList"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tagLabels", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"#", ",", "InputForm", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"MessageName", "[", 
               RowBox[{"x", ",", "\"\<tag\>\""}], "]"}], ",", "HoldFirst"}], 
             "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"tagsAndColors", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Timing\>\"", ",", "Blue"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<LieAlg\>\"", ",", "Red"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Aut\>\"", ",", "Magenta"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Weights\>\"", ",", "Pink"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Commu\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.2", ",", ".80", ",", "0"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Embed\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.0166444751115018", ",", "0.6509488401588792", ",", 
             "0.30562910859103076"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<U1\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.2", ",", "0.1", ",", "0.8"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<UpDirec\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.1", ",", ".50", ",", ".40"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<DownDirec\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.0", ",", ".50", ",", ".50"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Meta\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.8120432376740452", ",", "0.021464239426141507", ",", 
             "0.2194375543596434"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<User\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.36271103959560413", ",", "0.06903524415261963", ",", 
             "0.13369153399639733"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Global\>\"", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
            "0.656008479235596", ",", "0.38026308109304674", ",", 
             "0.5970982706807448"}], "]"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"colouredNames", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"out", "=", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
             "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "Bold", "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "===", 
               RowBox[{
               "tagLabels", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"out", "=", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{
                 "Flocci$FunctionList", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Bold", ",", 
                   RowBox[{
                   "t", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "tagsAndColors"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "out"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "Flocci$FunctionList", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Function Name\>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Dependencies\>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Input\>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Output\>\"", ",", "Bold"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Description\>\"", ",", "Bold"}], "]"}]}], "}"}], 
           "}"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
            "colouredNames", ",", "dependencies", ",", "inputLabels", ",", 
             "outputLabels", ",", "usageLabels"}], "}"}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", "Flocci$FunctionsPrint"}], "Input",
 CellChangeTimes->{{3.875174051210142*^9, 3.875174072825574*^9}, {
   3.875174108650462*^9, 3.8751741280230913`*^9}, {3.8751742272239637`*^9, 
   3.8751742373041162`*^9}, {3.875174512296604*^9, 3.875174585060094*^9}, {
   3.875174641091798*^9, 3.875174645456377*^9}, {3.875175663046371*^9, 
   3.875175691587503*^9}, {3.875175738288412*^9, 3.875175968003557*^9}, {
   3.875176060700164*^9, 3.8751761278087177`*^9}, {3.8751761671610413`*^9, 
   3.875176204513945*^9}, {3.875176422992323*^9, 3.875176465260474*^9}, {
   3.875176709625284*^9, 3.8751767173868*^9}, {3.875177776420356*^9, 
   3.875177776810246*^9}, {3.875250085674762*^9, 3.8752500960407887`*^9}, {
   3.87525256483638*^9, 3.8752525992092543`*^9}, {3.8752809387974854`*^9, 
   3.875280939368764*^9}, {3.875337406316865*^9, 3.875337541145063*^9}, {
   3.875337644261835*^9, 3.8753376508306713`*^9}, {3.8753393049925537`*^9, 
   3.875339312148314*^9}, {3.87533993016409*^9, 3.87533993259689*^9}, {
   3.875339981554092*^9, 3.8753400553191843`*^9}, {3.87534013151478*^9, 
   3.875340171971006*^9}, {3.87534029422701*^9, 3.87534041619761*^9}, {
   3.875341046227725*^9, 3.875341095101777*^9}, {3.875595562193921*^9, 
   3.875595599996879*^9}, {3.875604974744635*^9, 3.8756050246954393`*^9}, {
   3.875609395888623*^9, 3.8756096715097437`*^9}, {3.875609804750278*^9, 
   3.87560982990696*^9}, {3.87560994744201*^9, 3.8756100470970097`*^9}, 
   3.875610087596685*^9, 3.875610132673257*^9, 3.875610170141677*^9, {
   3.87561030102437*^9, 3.875610302354013*^9}, {3.875610807962441*^9, 
   3.875610812842437*^9}, {3.875610862756199*^9, 3.8756108905164213`*^9}, 
   3.875610939953231*^9, {3.875610994421042*^9, 3.875611020074277*^9}, {
   3.8757715432696133`*^9, 3.8757715511257477`*^9}, {3.877014104440752*^9, 
   3.8770141379078903`*^9}, {3.877014216582518*^9, 3.877014294900085*^9}, {
   3.877170891300076*^9, 3.877170891926621*^9}},
 CellLabel->
  "In[775]:=",ExpressionUUID->"70f398e1-4fd0-4cb5-9e00-9e0c972a580a"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"Function Name\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"Dependencies\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"Input\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"Output\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"Description\"\>",
       StripOnInput->False,
       FontWeight->Bold]},
     {
      StyleBox["\<\"Flocci$TimeAssociation\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An association map.\"\>", "\<\"Contains a \
map with strings as keys, and {time,number of times called} as values for \
each string.\"\>"},
     {
      StyleBox["\<\"Flocci$Timing\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
      "{", "\<\"Flocci$TimeAssociation\"\>", 
       "}"}], "\<\"str) A string\"\>", "\<\"A function\"\>", "\<\"Ues as \
<stuff> //Timing //Flocci$Timing[str].  Adds {time,1} to \
Flocci$TimeAssociation[str] and creates it if need be. Output is the output \
of  <stuff>, so does not change the working of the function.\"\>"},
     {
      StyleBox["\<\"Flocci$TimingReset\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"-\"\>", "\<\"Puts \
Flocci$TimeAssociation=<||>;\"\>"},
     {
      StyleBox["\<\"Flocci$TimingPrint\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"-\"\>", "\<\"Turns Flocci$TimeAssociation \
into a list.\"\>"},
     {
      StyleBox["\<\"Flocci$AlgAss\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An association map\"\>", "\<\"Assocaites \
algebra type A with 1, B with 2, ..., G with 7, and U1 with 0.\"\>"},
     {
      StyleBox["\<\"Flocci$AlgStandard\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgAss\"\>", 
       "}"}], "\<\"s) A simple Lie algebra, as a string, or a varible with or \
without LieArt.\"\>", "\<\"A pair of integers e.g. {1,2}\"\>", \
"\<\"Standardizes the form of our algebras. The first number (1) is the type \
of algebra, and the second number (2) is the rank.  \"\>"},
     {
      StyleBox["\<\"Flocci$Rank\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgStandard\"\>", 
       "}"}], "\<\"i) A simple Lie algebra e.g. A1. ii) A semi-simple Lie \
algebra {A1,A2}.\"\>", "\<\"i) The rank e.g. 1. ii) The list of ranks e.g. \
{1,2}.\"\>", "\<\"-\"\>"},
     {
      StyleBox["\<\"Flocci$TypeAQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgStandard\"\>", 
       "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", "\<\
\"Outputs True if algebra is of type A or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeBQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgStandard\"\>", 
       "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", "\<\
\"Outputs True if algebra is of type B or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeCQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgStandard\"\>", 
       "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", "\<\
\"Outputs True if algebra is of type C or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeDQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$AlgStandard\"\>", 
       "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", "\<\
\"Outputs True if algebra is of type D or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$classicalQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$TypeAQ\"\>", ",", "\<\"Flocci$TypeBQ\"\>", 
        ",", "\<\"Flocci$TypeCQ\"\>", ",", "\<\"Flocci$TypeDQ\"\>"}], 
       "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", "\<\
\"Outputs True if algebra is of type A, B, C or D, or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeG2Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type G2 or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeF4Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type F4 or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeE6Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type E6 or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeE7Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type E7 or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeE8Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type E8 or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$TypeU1Q\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"s) A simple Lie algebra\"\>", "\<\"True or False\"\>", \
"\<\"Outputs True if algebra is of type U(1) or False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$CartanMatrix\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>"}], 
       "}"}], "\<\"s: simple Lie algebra, e.g. A4\"\>", "\<\"Cartan matrix \
for s.\"\>", "\<\"Returns Cartan matrix for s.\"\>"},
     {
      StyleBox["\<\"Flocci$MetricTensor\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>"}], 
       "}"}], "\<\"s: simple Lie algebra, e.g. A4\"\>", "\<\"Metric tensor \
for s.\"\>", "\<\"Returns Metric tensor for s.\"\>"},
     {
      StyleBox["\<\"Flocci$PositiveRootsSB\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$PositiveRoots\"\>"}], 
       "}"}], "\<\"s: simple Lie algebra, e.g. A4\"\>", "\<\"Positive roots \
in simple root basis.\"\>", "\<\"Returns positive roots in simple root basis \
{{a1,a2,a3},{a1p,a2p,a3p},...} where {a1,a2,a3} stands for \
\[IndentingNewLine]           a1*\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(1\\)]\\) + a2*\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(2\\)]\\) + \
a3*\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(3\\)]\\) with \
\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(i\\)]\\) being simple roots.\"\>"},
     {
      StyleBox["\<\"Flocci$PositiveRoots\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$CartanMatrix\"\>", 
        ",", "\<\"Flocci$PositiveRootsSB\"\>"}], 
       "}"}], "\<\"s: simple Lie algebra, e.g. A4\"\>", "\<\"Positive roots \
in fundamental weight basis.\"\>", "\<\"Returns positive roots in fundamental \
weight basis given by \
Flocci$PositiveRootsSB[s].Flocci$CartanMatrix[s].\"\>"},
     {
      StyleBox["\<\"Flocci$Roots\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$PositiveRoots\"\>"}], 
       "}"}], "\<\"g: Lie algebra in the format {s1,s2,...}, e.g. {A4}\"\>", \
"\<\"All roots in fundamental weight basis.\"\>", "\<\"Returns all roots in \
fundamental weight basis for the Lie algebra g.\"\>"},
     {
      StyleBox["\<\"Flocci$ScalarProduct\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$MetricTensor\"\>", 
       "}"}], "\<\"s: simple Lie algebra, e.g. A4. \[Lambda]1,\[Lambda]2: \
weights\"\>", "\<\"Scalar product of \[Lambda]1 and \[Lambda]2 using \
Flocci$MetricTensor[s].\"\>", "\<\"Returns the scalar product of \[Lambda]1 \
and \[Lambda]2.\"\>"},
     {
      StyleBox["\<\"Flocci$Dim\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$DimAn\"\>", ",", "\<\"Flocci$DimBn\"\>", 
        ",", "\<\"Flocci$DimCn\"\>", ",", "\<\"Flocci$DimDn\"\>", 
        ",", "\<\"Flocci$DimG2\"\>", ",", "\<\"Flocci$DimE6\"\>", 
        ",", "\<\"Flocci$DimE7\"\>", ",", "\<\"Flocci$DimE8\"\>", 
        ",", "\<\"Flocci$DimF4\"\>"}], 
       "}"}], "\<\"s) A simple lie algebra or a semi-simple Lie algebra.\\n\
\[Lambda]) The hw of s.\"\>", "\<\"The dimension of the irrep of s defined by \
\[Lambda].\"\>", "\<\"-\"\>"},
     {
      StyleBox["\<\"Flocci$DimAn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"s: simple A-type Lie algebra, e.g. A4.\"\>", "\<\"Function \
which takes in heighest weight in returns dimensionality of representation.\"\
\>", "\<\"Generates analytic function for dimensionality formula of s \
representations.\"\>"},
     {
      StyleBox["\<\"Flocci$DimBn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"s: simple B-type Lie algebra, e.g. B4.\"\>", "\<\"Function \
which takes in heighest weight in returns dimensionality of representation.\"\
\>", "\<\"Generates analytic function for dimensionality formula of s \
representations.\"\>"},
     {
      StyleBox["\<\"Flocci$DimCn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"s: simple C-type Lie algebra, e.g. C4.\"\>", "\<\"Function \
which takes in heighest weight in returns dimensionality of representation.\"\
\>", "\<\"Generates analytic function for dimensionality formula of s \
representations.\"\>"},
     {
      StyleBox["\<\"Flocci$DimDn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"s: simple D-type Lie algebra, e.g. D4.\"\>", "\<\"Function \
which takes in heighest weight in returns dimensionality of representation.\"\
\>", "\<\"Generates analytic function for dimensionality formula of s \
representations.\"\>"},
     {
      StyleBox["\<\"Flocci$DimG2\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$Dim\"\>", 
       "}"}], "\<\"a1,a2: highest weight of G2 representation.\"\>", \
"\<\"Dimension of G2 representation with highest weight {a1,a2}.\"\>", \
"\<\"Returns dimenions of G2 representation with highest weight {a1,a2}.\"\>"},
     {
      StyleBox["\<\"Flocci$DimE6\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$Dim\"\>", 
       "}"}], "\<\"a1,a2,a3,a4,a5,a6: highest weight of E6 \
representation.\"\>", "\<\"Dimension of E6 representation with highest weight \
{a1,a2,a3,a4,a5,a6}.\"\>", "\<\"Returns dimenions of E6 representation with \
highest weight {a1,a2,a3,a4,a5,a6}.\"\>"},
     {
      StyleBox["\<\"Flocci$DimE7\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$Dim\"\>", 
       "}"}], "\<\"a1,a2,a3,a4,a5,a6,a7: highest weight of E7 representation.\
\"\>", "\<\"Dimension of E7 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7}.\"\>", "\<\"Returns dimenions of E7 representation \
with highest weight {a1,a2,a3,a4,a5,a6,a7}.\"\>"},
     {
      StyleBox["\<\"Flocci$DimE8\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$Dim\"\>", 
       "}"}], "\<\"a1,a2,a3,a4,a5,a6,a7,a8: highest weight of E8 \
representation.\"\>", "\<\"Dimension of E8 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7,a8}.\"\>", "\<\"Returns dimenions of E8 representation \
with highest weight {a1,a2,a3,a4,a5,a6,a7,a8}.\"\>"},
     {
      StyleBox["\<\"Flocci$DimF4\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$Dim\"\>", 
       "}"}], "\<\"a1,a2,a3,a4: highest weight of F4 representation.\"\>", \
"\<\"Dimension of F4 representation with highest weight {a1,a2,a3,a4}.\"\>", \
"\<\"Returns dimenions of F4 representation with highest weight \
{a1,a2,a3,a4}.\"\>"},
     {
      StyleBox["\<\"Flocci$Order\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$PositiveRoots\"\>"}], 
       "}"}], "\<\"s)A simple Lie algebra.\"\>", "\<\"An integer.\"\>", \
"\<\"Outputs the dimension of the adjoint irrep.\"\>"},
     {
      StyleBox["\<\"Flocci$DynkinIndex\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$PositiveRoots\"\>", 
        ",", "\<\"Flocci$ScalarProduct\"\>", ",", "\<\"Flocci$Dim\"\>", 
        ",", "\<\"Flocci$Order\"\>"}], 
       "}"}], "\<\"s)A simple Lie algebra.\\n \[Lambda]) The highest weight \
of an irrep \"\>", "\<\"An integer.\"\>", "\<\"Outputs the dimension of the \
adjoint irrep.\"\>"},
     {
      StyleBox["\<\"Flocci$InverseTransposeCartanMatrix\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{
      "{", "\<\"Flocci$CartanMatrix\"\>", 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\"\>", "\<\"Inversed, \
transposed Cartan matrix\"\>", "\<\"Inversed, transposed Cartan matrix\"\>"},
     {
      StyleBox["\<\"Flocci$SingleDominantWeightSystem\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$PositiveRoots\"\>", 
        ",", "\<\"Flocci$InverseTransposeCartanMatrix\"\>"}], 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\\nhw: a highest weight, \
e.g. {1,0,0,0}\"\>", "\<\"The dominant weight system without multiplicities, \
for the highest weight of a simple Lie algebra\"\>", "\<\"Works by \
recursively subtracting positive roots from the highest weight, deleting \
duplicates\"\>"},
     {
      StyleBox["\<\"Flocci$XisAndMul\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$CartanMatrix\"\>", 
        ",", "\<\"Flocci$MetricTensor\"\>", 
        ",", "\<\"Flocci$PositiveRoots\"\>", 
        ",", "\<\"Flocci$PartialOrbit\"\>"}], 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\\nt: vector of positions \
specifying a partial orbit\"\>", "\<\"List of pairs of the form {partial \
orbit representative, orbit size factor}\"\>", "\<\"Modified from a LieART \
function\"\>"},
     {
      StyleBox["\<\"Flocci$PartialOrbit\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{
      "{", "\<\"Flocci$Reflect\"\>", 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\\nweight: a \
weight\\nsimpleRoots: a subset of the simple roots of g\"\>", "\<\"A list of \
weights\"\>", "\<\"Finds the orbit of a weight generated by a set of simple \
roots. Reflects recursively.\"\>"},
     {
      StyleBox["\<\"Flocci$Reflect\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{
      "{", "\<\"Flocci$ScalarProduct\"\>", 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\\nweight: a weight\\nroot: \
a root of g\"\>", "\<\"A weight\"\>", "\<\"Reflects the weight about the root\
\"\>"},
     {
      StyleBox["\<\"Flocci$ReflectToDominantWeight\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$CartanMatrix\"\>", ",", "\<\"Flocci$Reflect\"\>"}],
        "}"}], "\<\"g: simple Lie algebra, e.g. A4\\nweight: a weight\"\>", "\
\<\"A dominant weight\"\>", "\<\"Recursively reflect about simple roots until \
a dominant weight is obtained\"\>"},
     {
      StyleBox["\<\"Flocci$DominantWeightMultiplicities\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$ScalarProduct\"\>", 
        ",", "\<\"Flocci$XisAndMul\"\>", ",", "\<\"Flocci$Reflect\"\>", 
        ",", "\<\"Flocci$ReflectToDominantWeight\"\>"}], 
       "}"}], "\<\"g: simple Lie algebra, e.g. A4\\ndominantWeights: list of \
dominant weights\"\>", "\<\"a list of pairs {dominant weight, multiplicity}\"\
\>", "\<\"Modified from a LieART function. See the Modified Freundenthal's \
formula in Graaf Lie Algebras Theory and Algorithms for description.\"\>"},
     {
      StyleBox["\<\"Flocci$WeightSystem\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$CartanMatrix\"\>", 
        ",", "\<\"Flocci$InverseTransposeCartanMatrix\"\>", 
        ",", "\<\"Flocci$SingleDominantWeightSystem\"\>", 
        ",", "\<\"Flocci$PartialOrbit\"\>", 
        ",", "\<\"Flocci$DominantWeightMultiplicities\"\>"}], 
       "}"}], "\<\"g: simple or semi-simple Lie algebra\\nhw/hws: a highest \
weight or a list of them if semi-simple\"\>", "\<\"A list of weights, in \
general with duplicates\"\>", "\<\"Produces the full weight system of a Lie \
algebra. First by producing the dominant weight system without \
multiplicities, then calculating multiplicities, and finally reflecting to \
produce the whole weight system.\"\>"},
     {
      StyleBox["\<\"Flocci$WeightSystemFromFlat\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$WeightSystem\"\>"}], 
       "}"}], "\<\"g: semi-simple Lie algebra, e.g. {A4,A1}\\nhw: a single \
semi-simple highest weight (with commensurate ordering), e.g. \
{1,0,0,0,1}\"\>", "\<\"A list of weights, in general with duplicates\"\>", \
"\<\"Produces the full weight system of a Lie algebra. First by producing the \
dominant weight system without multiplicities, then calculating \
multiplicities, and finally reflecting to produce the whole weight \
system.\"\>"},
     {
      StyleBox["\<\"Flocci$WeightSystemSorted\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemFromFlat\"\>"}], 
       "}"}], "\<\"g: semi-simple Lie algebra\"\>", "\<\"A weight \
system\"\>", "\<\"Sorts the weight system produced by \
Flocci$WeightSystemFromFlat\"\>"},
     {
      StyleBox["\<\"Flocci$ExtractDominantWeights\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"list) An integer 2-tensor.\"\>", "\<\"An integer \
2-tensor\"\>", "\<\"Outputs the rows of list which have non-negative entries.\
\"\>"},
     {
      StyleBox["\<\"Flocci$WeightSystemU1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{
      "{", "\<\"Flocci$WeightSystem\"\>", 
       "}"}], "\<\"g: simple or semi-simple Lie algebra OR U1\\nhw: a highest \
weight or a list of them if semi-simple\"\>", "\<\"A list of weights, in \
general with duplicates\"\>", "\<\"Returns highest weight if U1, otherwise \
call Flocci$WeightSystem\"\>"},
     {
      StyleBox["\<\"Flocci$WeightSystemFromFlatU1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0.5, 0.5],
       FrontFaceColor->RGBColor[1, 0.5, 0.5],
       BackFaceColor->RGBColor[1, 0.5, 0.5],
       GraphicsColor->RGBColor[1, 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemFromFlat\"\>", 
        ",", "\<\"Flocci$WeightSystemU1\"\>"}], 
       "}"}], "\<\"g: list of algebras, can accommodate U1 factors\\nhw: a \
flattened highest weight\"\>", "\<\"A list of weights, in general with \
duplicates\"\>", "\<\"See Flocci$WeightSystemFromFlat and \
Flocci$WeightSystemU1\"\>"},
     {
      StyleBox["\<\"Flocci$ExtractHighestWeights\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$MetricTensor\"\>", 
        ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemFromFlat\"\>", 
        ",", "\<\"Flocci$WeightSystemFromFlatU1\"\>"}], 
       "}"}], "\<\"g) A reductive Lie algebra (with U1's at the end).\\n \
\[CapitalPhi]t) A integer 2-tensor of weights.\"\>", "\<\"False or an Integer \
2-tensor of highest weights\"\>", "\<\"If \[CapitalPhi]t is a valid weight \
system of g, then it outputs the highest weights. Else outputs False.\"\>"},
     {
      StyleBox["\<\"Flocci$HighestWeightMultiplicity\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"projWSIn) A weight system of the parent projected \
under \[CapitalLambda].\\ndelta)Flocci$SSNode$DeltaCoprime of the child.\\n\
\[Beta]multIn)Flocci$SSNode$HWsMult of the child.\\n\[Beta]uniFlat) \
Flocci$SSNode$UniHWs of the child.\\n\[Beta]uniWSFlat) \
Flocci$SSNode$UniIrrepDominFlat of the child.\\nrange) \
Flocci$SSNode$UniIrrepDominRange of the child.\"\>", "\<\"A integer 1-tensor.\
\"\>", "\<\"The multiplicities of each hw in Flocci$SSNode$UniHWs within the \
rep projWS. If projWS does not branch correctly, we output \
{-1,-1,...}.\"\>"},
     {
      StyleBox["\<\"Flocci$TensorProduct\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemFromFlat\"\>", 
        ",", "\<\"Flocci$ExtractHighestWeights\"\>"}], 
       "}"}], "\<\"g) A semi-simple Lie algebra.\\n \[Lambda]1) The highest \
weight of a single irrep of g.\\n \[Lambda]2) The highest weight of a single \
irrep of g.\"\>", "\<\"A 2-tensor of integers.\"\>", "\<\"Outputs the highest \
weights of the tensor product rep of \[Lambda]1 and \[Lambda]2.\"\>"},
     {
      StyleBox["\<\"Flocci$ACCs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>", 
        ",", "\<\"Flocci$DynkinIndex\"\>"}], 
       "}"}], "\<\"g) A semi-simple Lie algebra.\\n hws) A list of highest \
weights of  g.\\n abstractU1s) A 2-tensor, where each row is a U(1) charge.\"\
\>", "\<\"A 1-vector\"\>", "\<\"Outputs the anomaly cancleation conditions \
for g+u(1)+...+u(1) with the given (possibly abstract) u(1) charges.\"\>"},
     {
      StyleBox["\<\"Flocci$AnomalyFreeSemiSimple\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemSorted\"\>", 
        ",", "\<\"Flocci$AnomCoeffCompiled\"\>"}], 
       "}"}], "\<\"g) A semi-simple Lie algebra.\\n hws) A list of highest \
weights of  g.\"\>", "\<\"A 1-vector\"\>", "\<\"Outputs the values of the \
anomaly equations for the semi-simple repesentation determined by the highest \
weights hws.\"\>"},
     {
      StyleBox["\<\"Flocci$AnomalyFreeCheck\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeU1Q\"\>", 
        ",", "\<\"Flocci$ACCs\"\>", 
        ",", "\<\"Flocci$AnomalyFreeSemiSimple\"\>"}], 
       "}"}], "\<\"g) A reductive Lie algebra.\\n hws) A 2-integer tensor of \
highest weights of  g.\"\>", "\<\"True or False\"\>", "\<\"Outputs True if \
the rep determined by hws is free of local anomalies, outputs false \
otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$AnomCoeffCompiled\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "}"}], "\<\"hws: highest weights. dims: dimensions of \
representations with heighest weights in hws.\"\>", "\<\"anomaly coefficient.\
\"\>", "\<\"Returns anomaly coefficient for representation with heighest \
weight in hws with dimensions in dims.\"\>"},
     {
      StyleBox["\<\"Flocci$SimpleIrrepsWithDim\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"alg: A simple Lie algebra.\\nmaxDim: An natural number \
representating the maximum dimension.\"\>", "\<\"A list of hws of reps of alg \
of dimension<maxDim.\"\>", "\<\"Finds the highest weights of representations \
of g of dimension less then maxDim.\"\>"},
     {
      StyleBox["\<\"Flocci$IrrepSimplePower\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{
      "{", "\<\"Flocci$SimpleIrrepsWithDim\"\>", 
       "}"}], "\<\"g: A simple Lie algebra\\nn: An natural number \
representating the the power of that simple factor.\\ndim: Natural number \
representing dimension\\nlocalA1Dim: Natural number indicating the total \
dimension of reps that are non-trivial only under A1 factors for the problem \
at hand (12 in SM+rh\[Nu])\"\>", "\<\"A list of hws of reps of g^n of \
dimension<dim.\"\>", "\<\"Finds the highest weights of representations of g^n \
of dimension less then dim.\"\>"},
     {
      StyleBox["\<\"Flocci$IrrepsLessThenOrEqualDim\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", 
        ",", "\<\"Flocci$IrrepSimplePower\"\>"}], 
       "}"}], "\<\"g: A semi-simple Lie algebra e.g. {A1,A10}.\\ndim: An \
natural number representating the dimension.\\nlocalA1Dim: Natural number \
indicating the total dimension of reps that are non-trivial only under A1 \
factors for the problem at hand (12 in SM+rh\[Nu])\"\>", "\<\"A list of hws \
of reps of g of dimension<dim.\"\>", "\<\"Finds the highest weights of \
representations of g of dimension less then dim.\"\>"},
     {
      StyleBox["\<\"Flocci$biE6\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"The matrix: \
{{1,0,0,0,0,0},{1,1,0,0,0,0},{0,1,1,1,0,0},{0,0,0,1,1,0},{0,0,0,0,1,0},{0,0,1,\
0,0,1}}\"\>", "\<\"This corresponds to the matrix bi such that for E6 the \
2-cocycle defining commutators is \[Epsilon](\[Lambda]1,\[Lambda]2)=(-1\\!\\(\
\\*SuperscriptBox[\\()\\), \\(\[Lambda]1 . \\*SuperscriptBox[\\(ga\\), \
\\(T\\)] . bi . ga . \[Lambda]2\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SimplyLacedCommutators\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeE6Q\"\>", ",", "\<\"Flocci$CartanMatrix\"\>", 
        ",", "\<\"Flocci$MetricTensor\"\>", ",", "\<\"Flocci$Roots\"\>", 
        ",", "\<\"Flocci$ScalarProduct\"\>", ",", "\<\"Flocci$biE6\"\>"}], 
       "}"}], "\<\"A simple Lie algebra s of type A, D or E.\"\>", "\<\"A \
3-tensor vauled in the integers.\"\>", "\<\"See Flocci$Commutators.\"\>"},
     {
      StyleBox["\<\"Flocci$NonSimplyLacedCommutator\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeBQ\"\>", 
        ",", "\<\"Flocci$TypeCQ\"\>", ",", "\<\"Flocci$TypeF4Q\"\>", 
        ",", "\<\"Flocci$CartanMatrix\"\>", 
        ",", "\<\"Flocci$MetricTensor\"\>", ",", "\<\"Flocci$Roots\"\>", 
        ",", "\<\"Flocci$ScalarProduct\"\>", 
        ",", "\<\"Flocci$SimplyLacedCommutators\"\>"}], 
       "}"}], "\<\"A simple Lie algebra s of type C, B or F.\"\>", "\<\"A \
3-tensor vauled in the integers.\"\>", "\<\"See Flocci$Commutators.\"\>"},
     {
      StyleBox["\<\"Flocci$CommutatorD4\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A specific integer 3-tensor.\"\>", \
"\<\"See Flocci$Commutators. Commutator of D4 using a specific \[Epsilon] \
such that the commutator of G2 can be found. See Mitzmann page 77.\"\>"},
     {
      StyleBox["\<\"Flocci$CommutatorG2\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A specific integer 3-tensor.\"\>", \
"\<\"See Flocci$Commutators. Commutator of G2. See Mitzmann page 77.\"\>"},
     {
      StyleBox["\<\"Flocci$Commutators\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.8, 0],
       FrontFaceColor->RGBColor[0.2, 0.8, 0],
       BackFaceColor->RGBColor[0.2, 0.8, 0],
       GraphicsColor->RGBColor[0.2, 0.8, 0],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.8, 0]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$TypeAQ\"\>", ",", "\<\"Flocci$TypeBQ\"\>", 
        ",", "\<\"Flocci$TypeCQ\"\>", ",", "\<\"Flocci$TypeDQ\"\>", 
        ",", "\<\"Flocci$TypeG2Q\"\>", ",", "\<\"Flocci$TypeF4Q\"\>", 
        ",", "\<\"Flocci$TypeE6Q\"\>", ",", "\<\"Flocci$TypeE7Q\"\>", 
        ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$SimplyLacedCommutators\"\>", 
        ",", "\<\"Flocci$NonSimplyLacedCommutator\"\>", 
        ",", "\<\"Flocci$CommutatorG2\"\>"}], 
       "}"}], "\<\"A simple Lie algebra s of any type.\"\>", "\<\"A 3-tensor \
vauled in the integers.\"\>", "\<\"Let \
{h_i,e_i}={h_{Flocci$CartanMatrix[s]},e_{Flocci$Roots[s]}}, in that order. \
The output is the tensor Aijk defined by [vi,vj]=Aijk vk. See \
Mitzmann.\"\>"},
     {
      StyleBox["\<\"Flocci$OuterJoin\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"n: An integer\"\>", "\<\"A compiled function.\"\>", \
"\<\"The compiled function takes in {list1, list2,...,listn} and finds \
Flatten[Outer[Join,list1,list2,...,listn,1],n-1]\"\>"},
     {
      StyleBox["\<\"Flocci$OuterAutomorphismsSingleType\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"Let g=s+s+s..+s.\\nlist: a list with two entries list\
\[LeftDoubleBracket]1\[RightDoubleBracket]=no. of s in g,  list\
\[LeftDoubleBracket]2\[RightDoubleBracket]=rank of s.\\n type: 1 if s has no \
no-trivial outer outermorphisms. 2 if it is of An type, -2 if of Dn, and 6 if \
of D4.\"\>", "\<\"A list of lists\"\>", "\<\"A compiled function. Outputs the \
automorphisms of s+s...+s. See Flocci$OuterAutomorphisms.\"\>"},
     {
      StyleBox["\<\"Flocci$OuterAutomorphisms\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$TypeAQ\"\>", ",", "\<\"Flocci$TypeDQ\"\>", 
        ",", "\<\"Flocci$OuterJoin\"\>", 
        ",", "\<\"Flocci$OuterAutomorphismsSingleType\"\>"}], 
       "}"}], "\<\"g: A semi-simple Lie algebra.\"\>", "\<\"A list of lists\"\
\>", "\<\"The output are the outer automorphisms of g such that: We will \
denote an outer permutation O, by the ordered list of columns with non-zero \
entries. Supposing that p is the list of columns corresponding to O, then O.\
\[Beta]=\[Beta]\[LeftDoubleBracket]p\[RightDoubleBracket].  For \
\\!\\(TraditionalForm\\`\[CapitalLambda]O^\\(-1\\) = \\(\[CapitalLambda] . \
\\*SuperscriptBox[\\(O\\), \\(T\\)] = \
\[CapitalLambda]\[LeftDoubleBracket]All, p\[RightDoubleBracket]\\)\\).  O.i = \
Transpose[Transpose[i]\[LeftDoubleBracket]All,p\[RightDoubleBracket]]]. \
\\!\\(\\*StyleBox[\\\"(\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"Check\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\")\\\",FontColor->RGBColor[1, 0, 0]]\\) \"\>"},
     {
      StyleBox["\<\"Flocci$WeylGroup\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$PositiveRoots\"\>", 
        ",", "\<\"Flocci$ScalarProduct\"\>"}], 
       "}"}], "\<\"s: A simple Lie algebra\"\>", "\<\"A 3-tensor of integers.\
\"\>", "\<\"Outputs the Weyl group of s in the basis of fundamental \
weights.\"\>"},
     {
      StyleBox["\<\"Flocci$E7InnerAut\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A function.\"\>", "\<\"The outputed \
function takes in a projection matrix for an embedding g->E7. It outputs the \
inner-automorphisms which take \[CapitalLambda] into a unique representative \
of the equivelence class defined by inner automorphisms of E7. This function \
has the same form as Flocci$E8InnerAut. This is on delayed evaluation so it \
will only generate the function if needed.\"\>"},
     {
      StyleBox["\<\"Flocci$E8InnerAut\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A function.\"\>", "\<\"The outputed \
function takes in a projection matrix for an embedding g->E8. It outputs the \
inner-automorphisms which take \[CapitalLambda] into a unique representative \
of the equivelence class defined by inner automorphisms of E8. This function \
has the same form as Flocci$E8InnerAut. This is on delayed evaluation so it \
will only generate the function if needed.\"\>"},
     {
      StyleBox["\<\"Flocci$LinearEquivWeightSystms\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$WeightSystem\"\>"}], 
       "}"}], "\<\"s: A simple Lie algebra.\"\>", "\<\"A list of two sorted \
weight systems.\"\>", "\<\"Outputs the weightsystem of the irreps given in \
Theorem 1.3 of Dynkin's Semisimple subalgebras of semisimple Lie algebras. \
This is for tests of linear equivelence\"\>"},
     {
      StyleBox["\<\"Flocci$InnerAutThroughWeyl\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"\[CapitalLambda]: A projection matrix g'->s.\\n Weylt: \
The Weyl group of s. \\n \[CapitalPhi]t: the first weight system of \
Flocci$LinearEquivWeightSystms[s]\[LeftDoubleBracket]1\[RightDoubleBracket]\"\
\>", "\<\"A integer 3-tensor.\"\>", "\<\"Finds the inner automrophisms of s \
which take \[CapitalLambda] to a representative based on equivelence classes \
defined by inner-automorphisms of s.\"\>"},
     {
      StyleBox["\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple\
\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$classicalQ\"\>", 
        ",", "\<\"Flocci$TypeG2Q\"\>", ",", "\<\"Flocci$TypeF4Q\"\>", 
        ",", "\<\"Flocci$TypeE6Q\"\>", ",", "\<\"Flocci$TypeE7Q\"\>", 
        ",", "\<\"Flocci$TypeE8Q\"\>", ",", "\<\"Flocci$WeylGroup\"\>", 
        ",", "\<\"Flocci$E7InnerAut\"\>", ",", "\<\"Flocci$E8InnerAut\"\>", 
        ",", "\<\"Flocci$LinearEquivWeightSystms\"\>", 
        ",", "\<\"Flocci$InnerAutThroughWeyl\"\>", 
        ",", "\<\"Flocci$TransposeLinearSolvePermu\"\>", 
        ",", "\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentative\"\>"}], 
       "}"}], "\<\"s: A simple Lie algebra.\\n \[CapitalLambda]: a projection \
matrix g'->s.\"\>", "\<\"A integer 3-tensor.\"\>", "\<\"Finds the inner \
automrophisms of s which take \[CapitalLambda] to a representative based on \
equivelence classes defined by inner-automorphisms of s.\"\>"},
     {
      StyleBox["\<\"Flocci$TransposeLinearSolvePermu\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"\[CapitalPhi]) A  weight \
system.\\nallowedPermutations) A list of permutations.\"\>", "\<\"A 3-tensor \
of integers.\"\>", "\<\"Finds the solution to P^T.\[CapitalPhi]=\[CapitalPhi]\
\[LeftDoubleBracket]\[Sigma]\[RightDoubleBracket] for every \[Sigma] in \
allowedPermutations. \"\>"},
     {
      StyleBox["\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentative\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple\"\
\>"}], "}"}], "\<\"g: A semi-simple Lie algebra.\\n \[CapitalLambda]: a \
projection matrix g'->g.\"\>", "\<\"A integer 3-tensor.\"\>", "\<\"Finds the \
inner automrophisms of g which take \[CapitalLambda] to a representative \
based on equivelence classes defined by inner-automorphisms of g.\"\>"},
     {
      StyleBox["\<\"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{
      "{", "}"}], "\<\"out: The outer-autmorphisms of g.\\n \[CapitalPhi]: A \
weight system of g.\"\>", "\<\"A pair {or,out\[Beta]} where or is a list of \
integers, and out\[Beta] is a list of lists of integers.\"\>", "\<\"or is an \
outer automorphrism which takes \[CapitalPhi] to its minimum form (after \
sorting). out\[Beta] is the group of outer automorphisms which perserve \
\[CapitalPhi]\[LeftDoubleBracket]All,or\[RightDoubleBracket] (not \
point-wise). \"\>"},
     {
      StyleBox["\<\"Flocci$ProjectionMatricesUniqueForm\"\>",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 1],
       FrontFaceColor->RGBColor[1, 0, 1],
       BackFaceColor->RGBColor[1, 0, 1],
       GraphicsColor->RGBColor[1, 0, 1],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$LinearEquivWeightSystms\"\>", 
        ",", "\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentative\"\>"}], 
       "}"}], "\<\"\[CapitalLambda]\[Alpha]sub: The projection matrix of the \
child algebra to the input.\\n \[CapitalLambda]\[Rho]in:The projection matrix \
from the parent to the child.\\n out) Outer-automorphisms which preserve \
\[Beta] of the parent.\\ng) The parent algebra.\\nAutIn) The group of \
automorphisms which preserves \[CapitalLambda]\[Alpha]t.\"\>", "\<\"A \
quadruple.\\n 1) The projection matrix \[CapitalLambda]\[Alpha] of the parent \
in a unique form.\\n 2) The morphisms \[CapitalLambda]\[Rho] in a unique \
form.\\n 3) The group of automorphisms which preserve \
\[CapitalLambda]\[Alpha]. \\n 4) The automorphism used to change \
\[CapitalLambda]\[Alpha]'s form.\"\>", "\<\"This takes in \[CapitalLambda]\
\[Alpha]t, \[CapitalLambda]\[Rho], the list of outerautomorphisms of g which \
preserve \[Beta], and the list of automorphisms which preserves \
\[CapitalLambda]\[Alpha]t. It outputs a unique represenative of the \
equivelence class \[LeftDoubleBracket]\[CapitalLambda]\[Alpha]\
\[RightDoubleBracket]\\ndefined by automorphism of g. And a unique \
represenative of \[LeftDoubleBracket]\[CapitalLambda]\[Rho]\
\[RightDoubleBracket] defined by automorphisms of gt and g, such that the \
relation \[CapitalLambda]\[Alpha]t.\[CapitalLambda]\[Rho]=\[CapitalLambda]\
\[Alpha] is preserved.\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingAn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent A algebra as an integer, e.g. \
4 for A4\"\>", "\<\"List of non semi-simple regular embeddings (without U(1)) \
into \\!\\(\\*SubscriptBox[\\(A\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(A\\), \
\\(rank\\)]\\),{\\!\\(\\*SubscriptBox[\\(A\\), \
\\(child1\\)]\\),...},projection Matrix},...}\"\>", "\<\"Returns all non \
semi-simple regular embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\\(A\
\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingBn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent B algebra as an integer, e.g. \
4 for B4\"\>", "\<\"List of non semi-simple regular embeddings (without U(1)) \
into \\!\\(\\*SubscriptBox[\\(B\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(B\\), \
\\(rank\\)]\\),{child1,...},projection Matrix},...}\"\>", "\<\"Returns all \
non semi-simple regular embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\
\\(B\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingCn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent C algebra as an integer, e.g. \
4 for C4\"\>", "\<\"List of non semi-simple regular embeddings (without U(1)) \
into \\!\\(\\*SubscriptBox[\\(C\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(C\\), \
\\(rank\\)]\\),{child1,...},projection Matrix},...}\"\>", "\<\"Returns all \
non semi-simple regular embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\
\\(C\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingDn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent D algebra as an integer, e.g. \
4 for D4\"\>", "\<\"List of non semi-simple regular embeddings (without U(1)) \
into \\!\\(\\*SubscriptBox[\\(D\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(D\\), \
\\(rank\\)]\\),{child1,...},projection Matrix},...}\"\>", "\<\"Returns all \
non semi-simple regular embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\
\\(D\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingE6\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of non semi-simple regular \
embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\\(E\\), \\(6\\)]\\) \
with one representative projection matrix in the format \
{{\\!\\(\\*SubscriptBox[\\(E\\), \\(6\\)]\\),{child1,...},projection \
Matrix},...}\"\>", "\<\"Returns all non semi-simple regular embeddings \
(without U(1)) into \\!\\(\\*SubscriptBox[\\(E\\), \\(6\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$NonSSEmbeddingE7\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of non semi-simple regular \
embeddings (without U(1)) into \\!\\(\\*SubscriptBox[\\(E\\), \\(7\\)]\\) \
with one representative projection matrix in the format \
{{\\!\\(\\*SubscriptBox[\\(E\\), \\(7\\)]\\),{child1,...},projection \
Matrix},...}\"\>", "\<\"Returns all non semi-simple regular embeddings \
(without U(1)) into \\!\\(\\*SubscriptBox[\\(E\\), \\(7\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingBn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent B algebra as an integer, e.g. \
4 for B4\"\>", "\<\"List of semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(B\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(B\\), \
\\(rank\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \
\\(1\\)]\\),...},projection Matrix},...}\"\>", "\<\"Returns all semi-simple \
regular embeddings into \\!\\(\\*SubscriptBox[\\(B\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingCn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent C algebra as an integer, e.g. \
4 for C4\"\>", "\<\"List of semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(C\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(C\\), \
\\(rank\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \
\\(1\\)]\\),...},projection Matrix},...}\"\>", "\<\"Returns all semi-simple \
regular embeddings into \\!\\(\\*SubscriptBox[\\(C\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingDn\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"rank: rank of the parent D algebra as an integer, e.g. \
4 for D4\"\>", "\<\"List of semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(D\\), \\(rank\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(D\\), \
\\(rank\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \
\\(1\\)]\\),...},projection Matrix},...}\"\>", "\<\"Returns all semi-simple \
regular embeddings into \\!\\(\\*SubscriptBox[\\(D\\), \\(rank\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingE6\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of semi-simple regular embeddings \
into \\!\\(\\*SubscriptBox[\\(E\\), \\(6\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(E\\), \
\\(6\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \\(1\\)]\\),...},projection \
Matrix},...}\"\>", "\<\"Returns all semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(E\\), \\(6\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingE7\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of semi-simple regular embeddings \
into \\!\\(\\*SubscriptBox[\\(E\\), \\(7\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(E\\), \
\\(7\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \\(1\\)]\\),...},projection \
Matrix},...}\"\>", "\<\"Returns all semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(E\\), \\(7\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingE8\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of semi-simple regular embeddings \
into \\!\\(\\*SubscriptBox[\\(E\\), \\(8\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(E\\), \
\\(8\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \\(1\\)]\\),...},projection \
Matrix},...}\"\>", "\<\"Returns all semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(E\\), \\(8\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingG2\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of semi-simple regular embeddings \
into \\!\\(\\*SubscriptBox[\\(G\\), \\(2\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(G\\), \
\\(2\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \\(1\\)]\\),...},projection \
Matrix},...}\"\>", "\<\"Returns all semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(G\\), \\(2\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$SSEmbeddingF4\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"List of semi-simple regular embeddings \
into \\!\\(\\*SubscriptBox[\\(F\\), \\(4\\)]\\) with one representative \
projection matrix in the format {{\\!\\(\\*SubscriptBox[\\(F\\), \
\\(4\\)]\\),{\\!\\(\\*SubscriptBox[\\(child\\), \\(1\\)]\\),...},projection \
Matrix},...}\"\>", "\<\"Returns all semi-simple regular embeddings into \
\\!\\(\\*SubscriptBox[\\(F\\), \\(4\\)]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$FindProjMatrix\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$Dim\"\>", ",", "\<\"Flocci$WeightSystem\"\>"}], 
       "}"}], "\<\"parent: parent algebra, e.g. A7. child: child algebra in \
the format {alg}, e.g. {D4} or {A1,A3}. repChild: representation of child \
algebra that embedds into parent in the format {rep1,rep2,...}, e.g. \
{{1,0,0,0}} for D4 or {{1},{1,0,0}} for {A1,A3}. repParent:(optional) \
representation into which the embedding occurs in the format {rep}. The \
default is the fundamental representation, i.e. {{1,0,...}}.\"\>", \
"\<\"projection matrix.\"\>", "\<\"Returns one representative projection \
matrix for the special embedding child->parent through given representations.\
\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddings\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$TypeAQ\"\>", ",", "\<\"Flocci$TypeBQ\"\>", 
        ",", "\<\"Flocci$TypeCQ\"\>", ",", "\<\"Flocci$TypeDQ\"\>", 
        ",", "\<\"Flocci$TypeG2Q\"\>", ",", "\<\"Flocci$TypeF4Q\"\>", 
        ",", "\<\"Flocci$TypeE6Q\"\>", ",", "\<\"Flocci$TypeE7Q\"\>", 
        ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$SimpleIrrepsWithDim\"\>", 
        ",", "\<\"Flocci$FindProjMatrix\"\>", 
        ",", "\<\"Flocci$CheckAlgebraEmbedding\"\>"}], 
       "}"}], "\<\"userWS: weightsystem in format \
{weight1,weight2,...}.\"\>", "\<\"list of special embeddings in the format \
{{parent,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns all \
maximal special embeddings into parent algebras whose lowest dimensional \
non-anomalous representation has dimension \[LessEqual] dim(userWS). \
Embeddings are only added to the list if they satisfy the constraints of \
Flocci$checkAlgebraEmbedding.\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddG2\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"list of special embeddings into G2 in the \
format {{G2,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns \
all maximal special embeddings into G2.\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddF4\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"list of special embeddings into F4 in the \
format {{F4,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns \
all maximal special embeddings into F4.\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddE6\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"list of special embeddings into E6 in the \
format {{E6,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns \
all maximal special embeddings into E6.\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddE7\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"list of special embeddings into E7 in the \
format {{E7,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns \
all maximal special embeddings into E7.\"\>"},
     {
      StyleBox["\<\"Flocci$SpecialEmbeddE8\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"list of special embeddings into E8 in the \
format {{E8,{child1,child2,...},projection matrix},...}.\"\>", "\<\"Returns \
all maximal special embeddings into E8.\"\>"},
     {
      StyleBox["\<\"Flocci$Unique\[CapitalLambda]\[Rho]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$OuterAutomorphisms\"\>", 
        ",", "\<\"Flocci$LinearEquivWeightSystms\"\>", 
        ",", "\<\"Flocci$innerAutsMap\[CapitalLambda]ToRepresentative\"\>"}], 
       "}"}], "\<\"g: parent algebra in format {alg1,alg2,...}. \
\[CapitalLambda]\[Rho]: projection matrix\"\>", "\<\"unique projection \
matrix.\"\>", "\<\"Returns unique form of the projection matrix.\"\>"},
     {
      StyleBox["\<\"Flocci$ApplyChildOutAutomorphisms\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$OuterAutomorphisms\"\>", 
        ",", "\<\"Flocci$Unique\[CapitalLambda]\[Rho]\"\>"}], 
       "}"}], "\<\"embedding: embedding of the form \
{parent,{child},projection matrix}.\"\>", "\<\"unique projection \
matrix.\"\>", "\<\"Applies all child outer automorphisms to projection \
matrix.\"\>"},
     {
      StyleBox["\<\"Flocci$MaximalRegularEmbeddings\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingAn\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingBn\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingCn\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingDn\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingE6\"\>", 
        ",", "\<\"Flocci$NonSSEmbeddingE7\"\>", 
        ",", "\<\"Flocci$SSEmbeddingBn\"\>", 
        ",", "\<\"Flocci$SSEmbeddingCn\"\>", 
        ",", "\<\"Flocci$SSEmbeddingDn\"\>", 
        ",", "\<\"Flocci$SSEmbeddingE6\"\>", 
        ",", "\<\"Flocci$SSEmbeddingE7\"\>", 
        ",", "\<\"Flocci$SSEmbeddingE8\"\>", 
        ",", "\<\"Flocci$SSEmbeddingG2\"\>", 
        ",", "\<\"Flocci$SSEmbeddingF4\"\>", 
        ",", "\<\"Flocci$ApplyChildOutAutomorphisms\"\>"}], 
       "}"}], "\<\"s: simple Lie algebra, e.g. A5.\"\>", "\<\"list of \
embeddings of the form {{parent,{child},projection matrix},...}.\"\>", \
"\<\"Returns all maximal regular embeddings into s including ones obtained by \
outer automorphisms on the child algebra.\"\>"},
     {
      StyleBox["\<\"Flocci$FindPairs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"ws: weightsystem in format \
{weight1,weight2,...}.\"\>", "\<\"number of weight pairs.\"\>", "\<\"Returns \
number of (weight,-weight) pairs in weightsystem, including identical pairs, \
but excluding zero weight vectors.\"\>"},
     {
      StyleBox["\<\"Flocci$FindUniquePairs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "}"}], "\<\"ws: weightsystem in format \
{weight1,weight2,...}.\"\>", "\<\"number of unique weight pairs.\"\>", \
"\<\"Returns number of unique (weight,-weight) pairs in weightsystem, \
excluding zero weight vectors.\"\>"},
     {
      StyleBox["\<\"Flocci$CheckAlgebraEmbedding\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$SimpleIrrepsWithDim\"\>", 
        ",", "\<\"Flocci$FindPairs\"\>", 
        ",", "\<\"Flocci$FindUniquePairs\"\>"}], 
       "}"}], "\<\"alg: algebra. userWs: user specified weightsystem in \
format {weight1,weight2,...}.\"\>", "\<\"True or False.\"\>", "\<\"Checks if \
the algebra alg contains irreps with dimension \[LessEqual] dim(userWS)/3 or \
dim(userWS) \[GreaterEqual] dimension \[GreaterEqual] dim(userWS)/3 and \
corresponding weightsystem has  # unique pairs \[LessEqual] pairs in \
userWS.\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateMaxEmbeddingList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddings\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddG2\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddF4\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE6\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE7\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE8\"\>", 
        ",", "\<\"Flocci$ApplyChildOutAutomorphisms\"\>", 
        ",", "\<\"Flocci$MaximalRegularEmbeddings\"\>", 
        ",", "\<\"Flocci$CheckAlgebraEmbedding\"\>"}], 
       "}"}], "\<\"userWs: user specified weightsystem in format \
{weight1,weight2,...}.\"\>", "\<\"list of maximal embeddings of the form \
{{parent,{child},projection matrix},...}.\"\>", "\<\"Generates list of \
independent maximal embeddings for parent algebras with lowest dimensional \
irrep \[LessEqual] dim.\"\>"},
     {
      StyleBox["\<\"Flocci$MaximalSubAlgebraSimple\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$classicalQ\"\>", 
        ",", "\<\"Flocci$TypeG2Q\"\>", ",", "\<\"Flocci$TypeF4Q\"\>", 
        ",", "\<\"Flocci$TypeE6Q\"\>", ",", "\<\"Flocci$TypeE7Q\"\>", 
        ",", "\<\"Flocci$TypeE8Q\"\>", ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddings\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddG2\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddF4\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE6\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE7\"\>", 
        ",", "\<\"Flocci$SpecialEmbeddE8\"\>", 
        ",", "\<\"Flocci$ApplyChildOutAutomorphisms\"\>", 
        ",", "\<\"Flocci$MaximalRegularEmbeddings\"\>"}], 
       "}"}], "\<\"parentAlg: simple Lie algebra s.\"\>", "\<\"list of \
inequivalent maximal subalgebras of s with projection matrix in the format \
{{s,{child1,child2,...},Projection matrix},...}.\"\>", "\<\"Returns a list of \
inequivalent maximal subalgebras of s with projection matrices.\"\>"},
     {
      StyleBox["\<\"Flocci$MaximalSubAlgebraSS\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$ApplyChildOutAutomorphisms\"\>", 
        ",", "\<\"Flocci$MaximalSubAlgebraSimple\"\>", 
        ",", "\<\"Flocci$CanonicalizeEmbedding\"\>"}], 
       "}"}], "\<\"parentAlg: semi-simple Lie algebra {s1,s2,...}.\"\>", \
"\<\"list of inequivalent maximal subalgebras of s with projection matrix in \
the format {{{s1,s2,...},{child1,child2,...},Projection matrix},...}.\"\>", "\
\<\"Returns a list of inequivalent maximal subalgebras of {s1,s2,...} with \
projection matrices.\"\>"},
     {
      StyleBox["\<\"Flocci$CanonicalizeEmbedding\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "\<\"Flocci$Rank\"\>", 
       "}"}], "\<\"embedd: embedding of the form \
{parentAlg,{child1,child2,...},projection matrix}.\"\>", \
"\<\"{parentAlg,{child1,child2,...},projection matrix} with child algebra \
lexicographically sorted and projection matrix adjusted.\"\>", "\<\"Sorts the \
child algebras lexicographically and adjusts the projection matrix \
accordingly.\"\>"},
     {
      StyleBox["\<\"Flocci$MinimalSupAlgebras\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FrontFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       BackFaceColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       GraphicsColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.0166444751115018, 0.6509488401588792, 0.30562910859103076`]], 
      RowBox[{
      "{", "\<\"Flocci$Rank\"\>", 
       "}"}], "\<\"gt: algebra in format {s1,s2,...}.\"\>", "\<\"list of \
minimal superalgebras and projection matrix in the format {{parent,projection \
matrix},...}.\"\>", "\<\"This takes in a gt, and a list of maximal embeddings \
into simple Lie algebras. It outputs the corresponding list of minimal \
super-algebras of gt.\"\>"},
     {
      StyleBox["\<\"Flocci$PartitionsWithinBlocks\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{
      "{", "}"}], "\<\"vecIn: A lexicographically sorted 2-tensor e.g. \
{{1,-1},{2,-3},{4,-6}}.\\nblockParent: A 1-tensor e.g. {1,1,1}. \
\\nchildBlock: A 1-tensor e.g. {2,1}. \\nchildBlockRange: A 2-tensor e.g. \
{{1,2},{3,3}}.\"\>", "\<\"A 1-tensor of a stream of charges: \
{1,-1,2,-3,2,-3,1,-1,4,-6,8,2}\"\>", "\<\"Finds inequivelent partitions \
within blocks. \\nInequivelent permutations of vecIn are found within each \
childBlock. Permutations within blockParent are considered equivelent. The \
output is a stream of charges where permutations within each childBlock are \
placed next to each other.\"\>"},
     {
      StyleBox["\<\"Flocci$PermutationsWithinBlocks\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{
      "{", "}"}], "\<\"cList) A 3-Tensor of charges where each element is a \
list Transpose[{c1,c2,...,cn}] e.g. { {{1,-1},{2,-3},{4,-6}}, \
{{2,-3},{1,-1},{4,-6}} }.\\nblockParent) A 1-tensor with lists of sizes of \
blocks e.g. {2,1}. \\nprependcharges) A 3-vector of charges to prepend e.g. \
{{{0,0}},{{1,1}}} of the same length as cList or {}.\"\>", "\<\"A 3-tensor of \
integeres. For the example in the input: \
\\!\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\
\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"0\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"0\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"1\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"2\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"3\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"4\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"6\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"0\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"0\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"2\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"-\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"3\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"1\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"4\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"6\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"2\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"3\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"{\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"-\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"1\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"{\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"4\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\",\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"-\\\",FontColor->GrayLevel[0.5]]\\)\\!\
\\(\\*StyleBox[\\\"6\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\
\\\",FontColor->GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->\
GrayLevel[0.5]]\\)\\!\\(\\*StyleBox[\\\"}\\\",FontColor->GrayLevel[0.5]]\\)\"\
\>", "\<\"For each Ei in cList permutations in each block in blockParent are \
found. The charges in prependCharges are prepended to each \
permutation.\"\>"},
     {
      StyleBox["\<\"Flocci$OuterPlus\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{
      "{", "}"}], "\<\"l: A 3-tensor of integers.\\np: A 2-tensor of \
integers. \\nf: A 2-tensor of integers.\"\>", "\<\"A 2-tensor of integer \
positions.\"\>", "\<\"Position[Outer[Plus,Take[l,p\[LeftDoubleBracket]1\
\[RightDoubleBracket]],Take[l,p\[LeftDoubleBracket]2\[RightDoubleBracket]],...\
,],f]. \\!\\(\\*StyleBox[\\\"This\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"somehow\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"needs\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"generalizing\\\",FontColor->RGBColor[1, 0, 0]]\\)\
\\!\\(\\*StyleBox[\\\".\\\",FontColor->RGBColor[1, 0, 0]]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$anomalyFreeU1Addition\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{
      "{", "}"}], "\<\"childCharges) A 3-tensor of integers where each entry \
is a set of charges Transpose[{c1,c2,...cn}].\\nchild\[CapitalPhi]) The \
weight system of the child algebra.\\nparent\[CapitalPhi]) The weight system \
of the parent algebra.\\n\[CapitalLambda]\[Rho]) The projection matrix from \
the parent to the child.\"\>", "\<\"A 3-tensor of charges.\"\>", \
"\<\"childCharges are the charges which work frm the child algebra. Considers \
all permutations of charges in childCharges within childblocks. Charges \
related by perumtations within parentblocks are considered equivelent, and \
only a representative is formed. Let c be such a set of charges. Then we \
output if Tr[XiXjck]=0 for all Xi, Xj and ck. \
\\!\\(\\*StyleBox[\\\"Should\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"also\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"do\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\" \\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"Tr\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"[\\\",FontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*StyleBox[\\\"Xicjck\\\",FontColor->RGBColor[1, 0, 0]]\\)\\!\\(\
\\*StyleBox[\\\"]\\\",FontColor->RGBColor[1, 0, 0]]\\)\\!\\(\\*StyleBox[\\\".\
\\\",FontColor->RGBColor[1, 0, 0]]\\)\"\>"},
     {
      StyleBox["\<\"Flocci$chargeAlignmentComplied\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{
      "{", "}"}], "\<\"There is only one algebra at play here\\nchargeList) \
The charges which pass the anomaly free condition.\\n parent\[CapitalPhi]) \
The weight system of the algebra. \\n \[Beta]) The highst weights of the \
algebra.. \\n \[CapitalLambda]\[Alpha]) The projection matrix for the parent \
algebra.\\n Flocci$User$IrrepWeightLocation) See there.\\n repList) A list of \
integers indicating which irrep each weight comes from.\"\>", "\<\"A 3-tensor \
of integers.\"\>", "\<\"Outputs those charges which align correctly with \
irreps of the algebra, after taking account of permutations within identical \
blocks of weights in parent\[CapitalPhi].\"\>"},
     {
      StyleBox["\<\"Flocci$chargeAlignment\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemSorted\"\>", 
        ",", "\<\"Flocci$chargeAlignmentComplied\"\>", 
        ",", "\<\"Flocci$User$IrrepWeightLocation\"\>"}], 
       "}"}], "\<\"There is only one algebra at play here\\nchargeList) The \
charges which pass the anomaly free condition.\\n parent\[CapitalPhi]) The \
weight system of the algebra. \\n \[Beta]) The highst weights of the algebra.\
\\n parentg) The algebra. \\n \[CapitalLambda]\[Alpha]) The projection matrix \
for the parent algebra.\\n Flocci$User$IrrepWeightLocation) See there.\"\>", \
"\<\"A 3-tensor of integers.\"\>", "\<\"Outputs those charges which align \
correctly with irreps of the algebra, after taking account of permutations \
within identical blocks of weights in parent\[CapitalPhi].\"\>"},
     {
      StyleBox["\<\"Flocci$U1Find\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemSorted\"\>", 
        ",", "\<\"Flocci$chargeAlignmentComplied\"\>", 
        ",", "\<\"Flocci$chargeAlignment\"\>", 
        ",", "\<\"Flocci$User$IrrepWeightLocation\"\>"}], 
       "}"}], "\<\"There is only one algebra at play here\\nchargeList) The \
charges which pass the anomaly free condition.\\n parent\[CapitalPhi]) The \
weight system of the algebra. \\n \[Beta]) The highst weights of the \
algebra.. \\n \[CapitalLambda]\[Alpha]) The projection matrix for the parent \
algebra.\\n Flocci$User$IrrepWeightLocation) See there.\"\>", "\<\"A 3-tensor \
of integers.\"\>", "\<\"Outputs those charges allowed which sit in the parent \
algebra. This uses a LinearSolve method.\"\>"},
     {
      StyleBox["\<\"Flocci$ProjectionMatrixNonEmpty\[CapitalGamma]sQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Roots\"\>", ",", "\<\"Flocci$User$RootList\"\>"}], 
       "}"}], "\<\"g) A semi-simple Lie algebra.\\n \[CapitalLambda]\[Alpha]) \
A projection matrix, containing U(1) rows.\"\>", "\<\"True or False.\"\>", \
"\<\"Tests that for each root  r  in Flocci$User$RootList the subset of \
Flocci$Roots[g] in roots which land on r under \[CapitalLambda]\[Alpha] is \
non-zero.\"\>"},
     {
      StyleBox["\<\"Flocci$ProjectionMatrixExtendableSimpleQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$Roots\"\>", 
        ",", "\<\"Flocci$Commutators\"\>"}], 
       "}"}], "\<\"g1) A semi-simple Lie algebra.\\nsb) A simple Lie algebra.\
\\n\[CapitalLambda]\[Alpha]) A projection matrix from sb to g1+u(1)^n.\"\>", \
"\<\"True or false.\"\>", "\<\"Tests whether or not a full embedding \[Alpha] \
can be made from \[CapitalLambda]\[Alpha]. This uses a Groebner Basis, which \
can be slow.\"\>"},
     {
      StyleBox["\<\"Flocci$ProjectionMatrixExtendableQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.2, 0.1, 0.8],
       FrontFaceColor->RGBColor[0.2, 0.1, 0.8],
       BackFaceColor->RGBColor[0.2, 0.1, 0.8],
       GraphicsColor->RGBColor[0.2, 0.1, 0.8],
       FontWeight->Bold,
       FontColor->RGBColor[0.2, 0.1, 0.8]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$ProjectionMatrixExtendableSimpleQ\"\>"}], 
       "}"}], "\<\"g1) A semi-simple Lie algebra.\\ng) A semi-simple Lie \
algebra.\\n\[CapitalLambda]\[Alpha]) A projection matrix from sb to \
g1+u(1)^n.\"\>", "\<\"True or false.\"\>", "\<\"Tests whether or not a full \
embedding \[Alpha] can be made from \[CapitalLambda]\[Alpha].\"\>"},
     {
      StyleBox["\<\"Flocci$FrobeniusSimSolve\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"level03: A list of non-negative integer vectors e.g. \
{{0,1},{1,0}}.\\ncountCompare: A non-negative integer vector e.g. {1,1}. \
\"\>", "\<\"A 2-tensor of non-negative integer vectors, the first of which is \
{0,0}, and subsiqunet of which are solutions {a_i} to \\\\sum a_i \
level03_i=countCompare, for a_i>=0.\"\>", "\<\"The vectors in level03 are \
multiplicites of hws in irreps. The vector countCompare is the multiplicity \
that we want to get. This function tells us all the ways we can combine types \
of irreps so that they branch correctly. \"\>"},
     {
      StyleBox["\<\"Flocci$VertexAssocAppend\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "\<\"Flocci$SSNode$MaxId\"\>", 
       "}"}], "\<\"SSdata: the list {parent algebra, sorted parent highest \
weights, projection matrix}\"\>", "\<\"{Node ID, bool}\"\>", "\<\"Input \
uniquely specifies a node in the graph. If parent node exists, return ID and \
False. If not, create node and return ID and True\"\>"},
     {
      StyleBox["\<\"Flocci$EdgeAssocAppend\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "\<\"Flocci$SSEdge$MaxId\"\>", 
       "}"}], "\<\"SEdata: the list {Parent node ID -> Child node ID, \
projection matrix}\"\>", "\<\"{Edge ID, bool}\"\>", "\<\"Input uniquely \
specifies an edge in the graph. If exists, return ID and False. If not, \
create edge and return ID and True\"\>"},
     {
      StyleBox["\<\"Flocci$UnorderedTuples\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"len) An integer\\n max) An integer\"\>", "\<\"A \
integer 2-tensor\"\>", "\<\"A list of all vectors of length len, with numbers \
1-max in decending order.\"\>"},
     {
      StyleBox["\<\"Flocci$RaggedToFlat\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"A ragged list e.g. {{{1,2},{1,2}},{{3,4}}}\"\>", \
"\<\"A pair of the input flattened at 1 level e.g. {{1,2},{1,2},{3,4}}, and \
the length of each ragged part e.g. {2,1}\"\>", "\<\"Flattens the 1st level \
of a ragged list, and records the length, so that the ragged list can be \
reconstructed.\"\>"},
     {
      StyleBox["\<\"Flocci$SublistQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"FullList) An Integer 2-tensor\\nSubList) An Integer \
2-Tensor\"\>", "\<\"True or False.\"\>", "\<\"Outputs True if SubList is a \
sublist (accounting for multiplicities) of FullList.\"\>"},
     {
      StyleBox["\<\"Flocci$SelectByMemberQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"hw2) A integer 2-tensor.\\n \[CapitalLambda]) A \
matrix.\\n \[CapitalPhi]t) An integer 2-tensor\"\>", "\<\"An \
integer-2tensor\"\>", "\<\"Selects those elements of hw2 by weather \
\[CapitalLambda].# is in \[CapitalPhi]t.\"\>"},
     {
      StyleBox["\<\"Flocci$NonnegativeMatrixQ\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"\[CapitalLambda]) An integer 2-tensor\"\>", "\<\"True \
or False\"\>", "\<\"Outputs True if all elements of \[CapitalLambda] are \
non-negative. Otherwise outputs False.\"\>"},
     {
      StyleBox["\<\"Flocci$HighestWeightMultiplicityId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", 
        ",", "\<\"Flocci$HighestWeightMultiplicity\"\>", 
        ",", "\<\"Flocci$SSNode$HWs\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDomin\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominFlat\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominRange\"\>", 
        ",", "\<\"Flocci$SSNode$UniHWs\"\>", 
        ",", "\<\"Flocci$SSNode$HWsMult\"\>", 
        ",", "\<\"Flocci$SSNode$Delta\"\>", 
        ",", "\<\"Flocci$SSNode$DeltaCoprime\"\>"}], 
       "}"}], "\<\"inId) The id of a child node.\\n irrep) The projected ws \
of a parent node.\"\>", "\<\"A 1-integer tensor or multiplicities.\"\>", \
"\<\"Runs Flocci$HighestWeightMultiplicity with the child node specified by \
inID.\"\>"},
     {
      StyleBox["\<\"Flocci$MakeParentNodes\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$Rank\"\>", 
        ",", "\<\"Flocci$TypeAQ\"\>", ",", "\<\"Flocci$MetricTensor\"\>", 
        ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemSorted\"\>", 
        ",", "\<\"Flocci$ExtractDominantWeights\"\>", 
        ",", "\<\"Flocci$HighestWeightMultiplicity\"\>", 
        ",", "\<\"Flocci$AnomCoeffCompiled\"\>", 
        ",", "\<\"Flocci$IrrepsLessThenOrEqualDim\"\>", 
        ",", "\<\"Flocci$OuterAutomorphisms\"\>", 
        ",", "\<\"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin\"\>", 
        ",", "\<\"Flocci$ProjectionMatricesUniqueForm\"\>", 
        ",", "\<\"Flocci$anomalyFreeU1Addition\"\>", 
        ",", "\<\"Flocci$chargeAlignment\"\>", 
        ",", "\<\"Flocci$FrobeniusSimSolve\"\>", 
        ",", "\<\"Flocci$VertexAssocAppend\"\>", 
        ",", "\<\"Flocci$EdgeAssocAppend\"\>", 
        ",", "\<\"Flocci$UnorderedTuples\"\>", 
        ",", "\<\"Flocci$RaggedToFlat\"\>", ",", "\<\"Flocci$SublistQ\"\>", 
        ",", "\<\"Flocci$SelectByMemberQ\"\>", 
        ",", "\<\"Flocci$NonnegativeMatrixQ\"\>", 
        ",", "\<\"Flocci$HighestWeightMultiplicityId\"\>", 
        ",", "\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$SSNode$HWs\"\>", ",", "\<\"Flocci$SSNode$WS\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDomin\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominFlat\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominRange\"\>", 
        ",", "\<\"Flocci$SSNode$UniHWs\"\>", 
        ",", "\<\"Flocci$SSNode$HWsMult\"\>", 
        ",", "\<\"Flocci$SSNode$Delta\"\>", 
        ",", "\<\"Flocci$SSNode$DeltaCoprime\"\>", 
        ",", "\<\"Flocci$SSNode$\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AnomFreeCharges\"\>", 
        ",", "\<\"Flocci$SSEdge$Edge\"\>", 
        ",", "\<\"Flocci$SSEdge$\[CapitalLambda]\[Rho]\"\>", 
        ",", "\<\"Flocci$User$A1Dim\"\>", 
        ",", "\<\"Flocci$User$U1sPresentBool\"\>", 
        ",", "\<\"Flocci$User$IrrepWeightLocation\"\>"}], 
       "}"}], "\<\"inID) The id of the child node to be considered.\\n g)A \
semi-simple Lie algebra \\n \[CapitalLambda]) A projection matrix such that \
(g,\[CapitalLambda]) define a minimal sup algebra of inID.\"\>", "\<\"None.\"\
\>", "\<\"Finds all parent nodes in the UpDirec graph of the child node inID.\
\"\>"},
     {
      StyleBox["\<\"Flocci$ShowIntermediateGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A graph\"\>", "\<\"Outputs the graph \
after the Updirec has been done. This is not the final graph of the \
program.\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateGraphUpwards\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0.1, 0.5, 0.4],
       FrontFaceColor->RGBColor[0.1, 0.5, 0.4],
       BackFaceColor->RGBColor[0.1, 0.5, 0.4],
       GraphicsColor->RGBColor[0.1, 0.5, 0.4],
       FontWeight->Bold,
       FontColor->RGBColor[0.1, 0.5, 0.4]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"None.\"\>", "\<\"This is the main code \
for generaing the graph upwards. In particular it runs Flocci$MakeParentNodes \
recursively.\"\>"},
     {
      StyleBox["\<\"Flocci$SpawnU1Nodes\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$U1Find\"\>", 
        ",", "\<\"Flocci$ProjectionMatrixNonEmpty\[CapitalGamma]sQ\"\>", 
        ",", "\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$SSNode$HWs\"\>", ",", "\<\"Flocci$SSNode$WS\"\>", 
        ",", "\<\"Flocci$SSNode$\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AnomFreeCharges\"\>", 
        ",", "\<\"Flocci$SSEdge$Edge\"\>", 
        ",", "\<\"Flocci$SSEdge$EdgeList\"\>", 
        ",", "\<\"Flocci$RRNode$MaxId\"\>", 
        ",", "\<\"Flocci$RRNode$CorSSid\"\>", 
        ",", "\<\"Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows\"\>", 
        ",", "\<\"Flocci$RRNode$U1EquivelenceClasses\"\>", 
        ",", "\<\"Flocci$RREdge$MaxId\"\>", ",", "\<\"Flocci$RREdge$Edge\"\>",
         ",", "\<\"Flocci$RREdge$\[CapitalLambda]\[Rho]\"\>", 
        ",", "\<\"Flocci$User$IrrepWeightLocation\"\>", 
        ",", "\<\"Flocci$U1Progress\"\>", 
        ",", "\<\"Flocci$U1ProgressCounter\"\>", 
        ",", "\<\"Flocci$PrintLie\"\>"}], 
       "}"}], "\<\"idIn) The id of the node of the UpDirec graph to consider.\
\"\>", "\<\"Either inId or Nothing.\"\>", "\<\"Generarates the nodes in the \
RR graph based on the nodes of the SS graph. If a given idIn does not lead to \
any RR nodes, we output inID else Nothing.\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateGraphDownwards\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$ProjectionMatrixExtendableQ\"\>", 
        ",", "\<\"Flocci$SpawnU1Nodes\"\>", 
        ",", "\<\"Flocci$SSNode$MaxId\"\>", 
        ",", "\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$SSEdge$MaxId\"\>", ",", "\<\"Flocci$SSEdge$Edge\"\>",
         ",", "\<\"Flocci$RRNode$MaxId\"\>", 
        ",", "\<\"Flocci$RRNode$Algebra\"\>", 
        ",", "\<\"Flocci$RRNode$\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$RREdge$MaxId\"\>", ",", "\<\"Flocci$RREdge$Edge\"\>",
         ",", "\<\"Flocci$U1Progress\"\>", 
        ",", "\<\"Flocci$U1ProgressCounter\"\>", 
        ",", "\<\"Flocci$GenerateGraph\"\>"}], 
       "}"}], "\<\"UserAlgebra) The inputed user algebra.\\nUserHW)The \
inputted user weight system. \"\>", "\<\"Nothing.\"\>", "\<\"Works through \
the SS graph to create the RR graph. Then it performs the checks on extending \
\[CapitalLambda]\[Alpha] to \[Alpha].\"\>"},
     {
      StyleBox["\<\"Flocci$ShowFinalGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0., 0.5, 0.5],
       FrontFaceColor->RGBColor[0., 0.5, 0.5],
       BackFaceColor->RGBColor[0., 0.5, 0.5],
       GraphicsColor->RGBColor[0., 0.5, 0.5],
       FontWeight->Bold,
       FontColor->RGBColor[0., 0.5, 0.5]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A graph\"\>", "\<\"Generates the final RR \
graph.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$currentSSid\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"Integer\"\>", "\<\"The current child node \
we are looking at. This will be less then Flocci$SSNode$MaxId.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$MaxId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"Integer\"\>", "\<\"The number of SS nodes \
generated.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$Algebra\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"A semi-simple algebra\"\>", \
"\<\"The algebra associated with SS node i.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$HWs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensor.\"\>", \
"\<\"The heighest weights associated with SS node i.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$WS\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensor.\"\>", \
"\<\"The weight system of Flocci$SSNode$HWs[i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$UniIrrepDomin\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"A ragged list of 2-tensors.\
\"\>", "\<\"The dominant weights of unique irreps appearing in \
Flocci$SSNode$HWs[i]. Could be un-globalized.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$UniIrrepDominFlat\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensors.\"\>", \
"\<\"A flattened version of Flocci$SSNode$UniIrrepDomin[i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$UniIrrepDominRange\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensors.\"\>", \
"\<\"The ranges between which each 2-tensor in  \
Flocci$SSNode$UniIrrepDomin[i] appears in the flattened version \
Flocci$SSNode$UniIrrepDominFlat[i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$UniHWs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensors.\"\>", \
"\<\"The highest weights associated with SS node i with duplicates deleted.\"\
\>"},
     {
      StyleBox["\<\"Flocci$SSNode$HWsMult\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 1-tensors.\"\>", \
"\<\"The multiplicity of each unique type of weight in Flocci$SSNode$HWs[i] \
in an order matching Flocci$SSNode$UniHWs[i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$Delta\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An 1-tensors.\"\>", "\<\"A \
concontatination of the vectors formed by applying the metric tensor of each \
simple ideal in Flocci$SSNode$Algebra[i] to the constant vector of 1s.Could \
be un-globalized. \"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$DeltaCoprime\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 1-tensors.\"\>", \
"\<\"A constant multiple of Flocci$SSNode$Delta such that all entries are \
integer.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$\[CapitalLambda]\[Alpha]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 2-tensors.\"\>", \
"\<\"The projection matrix down to the semi-simple part of the user input \
algebra associated with the SS node i.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An  list of integer \
2-tensors.\"\>", "\<\"The automorphisms of Flocci$SSNode$Algebra[i] which \
preserve the weight system and \
Flocci$SSNode$\[CapitalLambda]\[Alpha][i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$AnomFreeCharges\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1\"\>", "\<\"An integer 3-tensors.\"\>", \
"\<\"Charge assigments matching the weightsystem which pass anomaly free \
checks. Permutations amonst equal weights are not repeated.\"\>"},
     {
      StyleBox["\<\"Flocci$SSNode$AlgebraList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A list of triples.\"\>", "\<\"Outputs the \
list of all {Flocci$SSNode$Algebra[i],Flocci$SSNode$HWs[i],Flocci$SSNode$\
\[CapitalLambda]\[Alpha][i]}\"\>"},
     {
      StyleBox["\<\"Flocci$SSEdge$MaxId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An Integer.\"\>", "\<\"The number of SS \
edges generated.\"\>"},
     {
      StyleBox["\<\"Flocci$SSEdge$Edge\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1 and <= Flocci$SSEdge$MaxId\"\>", \
"\<\"A Rule[...,...]\"\>", "\<\"The rule will be j1->j2 indicating that j1 is \
a parent node of j2.\"\>"},
     {
      StyleBox["\<\"Flocci$SSEdge$\[CapitalLambda]\[Rho]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1 and <= Flocci$SSEdge$MaxId\"\>", \
"\<\"A 2-integer.\"\>", "\<\"The projection matrix associated with the edge \
Flocci$SSEdge$Edge[i].\"\>"},
     {
      StyleBox["\<\"Flocci$SSEdge$EdgeList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A list of pairs.\"\>", "\<\"Outputs the \
list of all \
Flocci$SSEdge$Edge[i],Flocci$SSEdge$\[CapitalLambda]\[Rho][i]\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$MaxId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An Integer.\"\>", "\<\"The number of RR \
edges generated.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$CorSSid\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) An Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\
\"An Integer.\"\>", "\<\"The id of the SS node this RR node spawned \
from.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) An Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\
\"An Integer 2-tensor.\"\>", "\<\"The rows of \[CapitalLambda]\[Alpha] \
associated with U(1)'s.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$U1EquivelenceClasses\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) An Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\
\"An Integer 3-tensor.\"\>", "\<\"The connected elements of Flocci$RRNode$U1\
\[CapitalLambda]\[Alpha]Rows[i] under the action of  Flocci$SSNode$AutPres\
\[CapitalLambda]\[Alpha][inID].\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$Algebra\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$RRNode$CorSSid\"\>"}], 
       "}"}], "\<\"i) Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\"A \
semi-simple algebra\"\>", "\<\"The algebra associated with RR node i.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$HWs\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$SSNode$HWs\"\>", 
        ",", "\<\"Flocci$RRNode$CorSSid\"\>"}], 
       "}"}], "\<\"i) Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\"An \
integer 2-tensor.\"\>", "\<\"The heighest weights associated with RR node \
i.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$WS\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$SSNode$WS\"\>", 
        ",", "\<\"Flocci$RRNode$CorSSid\"\>"}], 
       "}"}], "\<\"i) Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\"An \
integer 2-tensor.\"\>", "\<\"The weight system of \
Flocci$RRNode$HWs[i].\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$\[CapitalLambda]\[Alpha]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$SSNode$\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$RRNode$CorSSid\"\>", 
        ",", "\<\"Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows\"\>"}], 
       "}"}], "\<\"i) Integer >= 1 and <=Flocci$RRNode$MaxId\"\>", "\<\"An \
integer 2-tensors.\"\>", "\<\"The projection matrix down to the user input \
algebra associated with the RR node i.\"\>"},
     {
      StyleBox["\<\"Flocci$RRNode$AlgebraList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A list of triples.\"\>", "\<\"Outputs the \
list of all {Flocci$RRNode$Algebra[id],Flocci$RRNode$HWs[id],Flocci$RRNode$\
\[CapitalLambda]\[Alpha][id]}\"\>"},
     {
      StyleBox["\<\"Flocci$RREdge$MaxId\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An Integer.\"\>", "\<\"The number of RR \
edges generated.\"\>"},
     {
      StyleBox["\<\"Flocci$RREdge$Edge\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1 and <= Flocci$RREdge$MaxId\"\>", \
"\<\"A Rule[...,...]\"\>", "\<\"The rule will be j1->j2 indicating that j1 is \
a parent node of j2.\"\>"},
     {
      StyleBox["\<\"Flocci$RREdge$\[CapitalLambda]\[Rho]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"i) Integer >= 1 and <= Flocci$RREdge$MaxId\"\>", \
"\<\"A 2-integer.\"\>", "\<\"The projection matrix associated with the edge \
Flocci$RREdge$Edge[i].\"\>"},
     {
      StyleBox["\<\"Flocci$RREdge$EdgeList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A list of pairs.\"\>", "\<\"Outputs the \
list of all {Flocci$RREdge$Edge[id],Flocci$RREdge$\[CapitalLambda]\[Rho][id]}\
\"\>"},
     {
      StyleBox["\<\"Flocci$User$A1Dim\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An Integer.\"\>", "\<\"The dimension of \
all reps that are tirivial under all non-A1 factors.\"\>"},
     {
      StyleBox["\<\"Flocci$User$U1sPresentBool\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"True or False\"\>", "\<\"True if the user \
algebra contains U(1)'s, False otherwise.\"\>"},
     {
      StyleBox["\<\"Flocci$User$RootList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A Integer 2-Tensor\"\>", "\<\"A list of \
the roots for the user algebra, with 0's for U(1) factors.\"\>"},
     {
      StyleBox["\<\"Flocci$User$IrrepWeightLocation\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A Integer 2-Tensor\"\>", "\<\"Contains a \
list based on the user algebra e.g. {{31, 32}, {1, 2}, {3, 4}, {7, 8}, {25, \
26}, {27, 28}, {-1, -1}, {17, 20}, {9, 12}, {21, 24}, {-1, -1}, {29, 30}, {5, \
6}, {-1, -1}, {13, 16}}. The {-1,-1} splits distinict irreps. The first \
number e.g. {31,32} is the location of the highest weight. The numbers which \
follow are the positions of the other weights for that representation (in no \
real order).\"\>"},
     {
      StyleBox["\<\"Flocci$User$MaxAlgList\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A list of triples containing 1) The \
simple parent algebra. 2) The semi-simple child algebra. 3) The projection \
matrix.\"\>", "\<\"Contains the dynamically generated list of maximal \
embeddings\"\>"},
     {
      StyleBox["\<\"Flocci$User$GraphPoints\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A 2-tensor\"\>", "\<\"Used for plotting \
the progress graph on running the code.\"\>"},
     {
      StyleBox["\<\"Flocci$U1Progress\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"A string\"\>", "\<\"Used to monitor the \
progress in the downward direction.\"\>"},
     {
      StyleBox["\<\"Flocci$U1ProgressCounter\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FrontFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       BackFaceColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       GraphicsColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.656008479235596, 0.38026308109304674`, 0.5970982706807448]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"An Integer\"\>", "\<\"Used to monitor the \
progress in the downward direction.\"\>"},
     {
      StyleBox["\<\"Flocci$InitializeInputData\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FrontFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       BackFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       GraphicsColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$TimingReset\"\>", 
        ",", "\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$MetricTensor\"\>", 
        ",", "\<\"Flocci$Roots\"\>", ",", "\<\"Flocci$Dim\"\>", 
        ",", "\<\"Flocci$WeightSystem\"\>", 
        ",", "\<\"Flocci$WeightSystemSorted\"\>", 
        ",", "\<\"Flocci$ExtractDominantWeights\"\>", 
        ",", "\<\"Flocci$GenerateMaxEmbeddingList\"\>", 
        ",", "\<\"Flocci$RaggedToFlat\"\>", 
        ",", "\<\"Flocci$SSNode$currentSSid\"\>", 
        ",", "\<\"Flocci$SSNode$MaxId\"\>", 
        ",", "\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$SSNode$HWs\"\>", ",", "\<\"Flocci$SSNode$WS\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDomin\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominFlat\"\>", 
        ",", "\<\"Flocci$SSNode$UniIrrepDominRange\"\>", 
        ",", "\<\"Flocci$SSNode$UniHWs\"\>", 
        ",", "\<\"Flocci$SSNode$HWsMult\"\>", 
        ",", "\<\"Flocci$SSNode$Delta\"\>", 
        ",", "\<\"Flocci$SSNode$DeltaCoprime\"\>", 
        ",", "\<\"Flocci$SSNode$\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]\"\>", 
        ",", "\<\"Flocci$SSNode$AnomFreeCharges\"\>", 
        ",", "\<\"Flocci$SSEdge$MaxId\"\>", ",", "\<\"Flocci$User$A1Dim\"\>", 
        ",", "\<\"Flocci$User$U1sPresentBool\"\>", 
        ",", "\<\"Flocci$User$RootList\"\>", 
        ",", "\<\"Flocci$User$IrrepWeightLocation\"\>", 
        ",", "\<\"Flocci$User$MaxAlgList\"\>", 
        ",", "\<\"Flocci$ClearSavedData\"\>"}], 
       "}"}], "\<\"UserAlgbra) The User algebra.\\n UserHW) The User highest \
weights.\"\>", "\<\"None.\"\>", "\<\"Sets global varibles, and the first node \
of the SS graph. Runs Flocci$GenerateMaxEmbeddingList.\"\>"},
     {
      StyleBox["\<\"Flocci$ClearSavedData\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FrontFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       BackFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       GraphicsColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434]], 
      RowBox[{
      "{", "}"}], "\<\"-\"\>", "\<\"-\"\>", "\<\"Clears data stored during \
the running of the code. This uses function::clear to determine what to do \
with a specific function.\"\>"},
     {
      StyleBox["\<\"Flocci$GenerateGraph\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FrontFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       BackFaceColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       GraphicsColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.8120432376740452, 0.021464239426141507`, 0.2194375543596434]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$GenerateGraphUpwards\"\>", 
        ",", "\<\"Flocci$GenerateGraphDownwards\"\>", 
        ",", "\<\"Flocci$User$U1sPresentBool\"\>"}], 
       "}"}], "\<\"UserAlgebra) The User algebra.\\n fermionicReps) The \
inputed highest weights.\"\>", "\<\"None\"\>", "\<\"Runs the code to generate \
the graph upwards and downwards.\"\>"},
     {
      StyleBox["\<\"Flocci$MaxMinOutputReorder\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{
      "{", "}"}], "\<\"ouput) The output of SuperFlocci\"\>", "\<\"A list of: \
\\n algListRe)The algebra list reordered.\\n edgeListRe) The edge list \
adjusted for the reordring\\n The number of max algebras. \\n The number of \
min Algebras.\"\>", "\<\"Reorders the output of SuperFlocci, so that the max \
and min algebras come first.\"\>"},
     {
      StyleBox["\<\"Flocci$PrintLie\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$TypeU1Q\"\>"}], 
       "}"}], "\<\"g) A semi-simple lie algebra.\"\>", "\<\"A string\"\>", \
"\<\"Outputs g in a nice form for display in mathematica.\"\>"},
     {
      StyleBox["\<\"Flocci$PrintWeights\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeU1Q\"\>", 
        ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"g) A semi-simple lie algebra.\\n hw) A list of \
weights\"\>", "\<\"A list of strings and quantities to display\"\>", \
"\<\"Gives the backbone of the structure needed to display hw in a nice form.\
\"\>"},
     {
      StyleBox["\<\"Flocci$MathematicaDisplay\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$MaxMinOutputReorder\"\>", 
        ",", "\<\"Flocci$PrintLie\"\>", ",", "\<\"Flocci$PrintWeights\"\>", 
        ",", "\<\"SuperFlocci\"\>"}], 
       "}"}], "\<\"output) The output of SuperFlocci.\"\>", "\<\"-\"\>", \
"\<\"Prints the output in mathematica.\"\>"},
     {
      StyleBox["\<\"Flocci$LieAlgebraLatex\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeBQ\"\>", ",", "\<\"Flocci$TypeCQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeG2Q\"\>", 
        ",", "\<\"Flocci$TypeF4Q\"\>", ",", "\<\"Flocci$TypeE6Q\"\>", 
        ",", "\<\"Flocci$TypeE7Q\"\>", ",", "\<\"Flocci$TypeE8Q\"\>", 
        ",", "\<\"Flocci$TypeU1Q\"\>"}], 
       "}"}], "\<\"simple Lie algebra s or semi-simple Lie algebra \
{s1,s2,...}.\"\>", "\<\"Lie algebra formatted in Latex.\"\>", "\<\"Formats \
Lie algebra in Latex\"\>"},
     {
      StyleBox["\<\"Flocci$IrrepLatex\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$TypeAQ\"\>", 
        ",", "\<\"Flocci$TypeDQ\"\>", ",", "\<\"Flocci$TypeU1Q\"\>", 
        ",", "\<\"Flocci$Dim\"\>"}], 
       "}"}], "\<\"g: Lie algebra in the form {s1,s2,...} \\nhw: highest \
weights in the format {hw1,hw2,...}.\"\>", "\<\"Irreps formatted in Latex in \
the form (dim1,dim2,...)\[ImplicitPlus].\"\>", "\<\"Formats irreps in Latex \
in terms of their dimension.\"\>"},
     {
      StyleBox["\<\"Flocci$TableLatex\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$LieAlgebraLatex\"\>", 
        ",", "\<\"Flocci$IrrepLatex\"\>"}], 
       "}"}], "\<\"heading: heading for the table as string. If it is a list \
it assumes it is a composite table. \\ntableData: Lie algebras and \
representations in output format {{{s1,s2,...},{hw1,hw2,...},projection \
matrix},...}. \\ncaption: String of Latex code for table caption. \\nlabel: \
String label for hyperlinks in the pdf file.\"\>", "\<\"String of Latex code \
to generate Table.\"\>", "\<\"Generates Latex code for table of Lie Algebras \
and Irreps.\"\>"},
     {
      StyleBox["\<\"FlocciOutput\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FrontFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       BackFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       GraphicsColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$MaxMinOutputReorder\"\>", 
        ",", "\<\"Flocci$MathematicaDisplay\"\>", 
        ",", "\<\"Flocci$LieAlgebraLatex\"\>", 
        ",", "\<\"Flocci$IrrepLatex\"\>", ",", "\<\"Flocci$TableLatex\"\>"}], 
       "}"}], "\<\"output: output of SuperFlocci\\nOptional Arguments: \
\\n-display (False): True or False, visualization of SuperFlocci output. \
\\n-save (False): True or False, save mathematica output. \\n-filename \
(\\\"auto\\\"): string, filename for mathematica and/or Latex output relative \
to notebook directory.\\n-labelrep (\\\"auto\\\"): replacement rules, string \
labels for user representations in the format \
{{1,0,0,...}->\\\"label1\\\",...}. \\n-latex (False): if not false produces \
Latex summary with inputs specified as String as e.g. latex->{\\\"maxtables\\\
\"}\\n----\\\"maxtables\\\": table with all maximal \
algebras\\n----\\\"mintables\\\": table with all minimal \
algebras\\n----\\\"alltables\\\": tables with all \
algebras\\n----\\\"embeddingsdetail\\\": detailed overview of all embeddings.\
\\n----\\\"tensorproduct\\\": gives all bilinear tensorproducts of \
representations (only in combination with \
\\\"embeddingsdetail\\\")\\n----\\\"onlymaxminembeddings\\\": restricts \
embeddingsdetail to maximal and minimal embeddings (only in combination with \
\\\"embeddingsdetail\\\")\\n----\\\"projectiontree\\\": outputs projection \
matrices between algebras on same branch of tree (only in combination with \\\
\"embeddingsdetail\\\" and is neglected for \
\\\"onlymaxminembeddings\\\")\"\>", "\<\"Visualisation of output and option \
Latex or data file.\"\>", "\<\"Outputs and saves data generated by \
SuperFlocci\"\>"},
     {
      StyleBox["\<\"SuperFlocci\"\>",
       StripOnInput->False,
       LineColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FrontFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       BackFaceColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       GraphicsColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`],
       FontWeight->Bold,
       FontColor->RGBColor[
        0.36271103959560413`, 0.06903524415261963, 0.13369153399639733`]], 
      RowBox[{"{", 
       RowBox[{"\<\"Flocci$Timing\"\>", ",", "\<\"Flocci$TimingPrint\"\>", 
        ",", "\<\"Flocci$Rank\"\>", ",", "\<\"Flocci$SSNode$Algebra\"\>", 
        ",", "\<\"Flocci$SSNode$AlgebraList\"\>", 
        ",", "\<\"Flocci$SSEdge$Edge\"\>", 
        ",", "\<\"Flocci$SSEdge$EdgeList\"\>", 
        ",", "\<\"Flocci$RRNode$Algebra\"\>", 
        ",", "\<\"Flocci$RRNode$AlgebraList\"\>", 
        ",", "\<\"Flocci$RREdge$Edge\"\>", 
        ",", "\<\"Flocci$RREdge$EdgeList\"\>", 
        ",", "\<\"Flocci$User$U1sPresentBool\"\>", 
        ",", "\<\"Flocci$InitializeInputData\"\>", 
        ",", "\<\"Flocci$GenerateGraph\"\>", ",", "\<\"FlocciOutput\"\>"}], 
       "}"}], "\<\"userg) A reductive Lie algebra e.g. {A2,A1,U1}.\\nuser\
\[CapitalPhi]) The weight system of the fermionic representations.\"\>", \
"\<\"A list containing:\\n The inputed Lie algebra\\n The inputed fermonic \
reps \\n The list of semi-simple extensions \\n The list of edges between \
these extensions \\n A collection of timing data \\n The date and time that \
the function was generated.\"\>", "\<\"The main function of our program. This \
takes the user input, and generates the output data.\"\>"}
    },
    AutoDelete->False,
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{3.877079337955803*^9, 3.87715860430785*^9, 
  3.877170810045692*^9, 3.877170897103133*^9, 3.877414179935835*^9, 
  3.877416031506317*^9, 3.877417835067177*^9, 3.879322115189706*^9, 
  3.879327109284979*^9, 3.87932716022992*^9},
 CellLabel->
  "Out[776]=",ExpressionUUID->"2f4b12bc-be45-487d-a3e2-8d40c19eff65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Timing ", "Section",
 CellChangeTimes->{{3.8690294156134663`*^9, 3.869029418162663*^9}, {
  3.869141387990512*^9, 3.8691413946517887`*^9}, {3.8753413236791973`*^9, 
  3.875341326715218*^9}},ExpressionUUID->"ae452f62-6dda-408b-a4b2-\
d2b33eadb694"],

Cell["This code helps with optimization.", "Text",
 CellChangeTimes->{{3.8691403994208717`*^9, 
  3.869140412668436*^9}},ExpressionUUID->"b661bc1a-adaf-4baf-9fd0-\
5b16687c04bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$TimeAssociation\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Timing\>\"", ",", "\"\<-\>\"", ",", "\"\<An association map.\>\"", 
      ",", "\"\<Contains a map with strings as keys, and {time,number of \
times called} as values for each string.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$Timing\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Timing\>\"", ",", "\"\<str) A string\>\"", ",", "\"\<A function\>\"",
      ",", "\"\<Ues as <stuff> //Timing //Flocci$Timing[str].  Adds {time,1} \
to Flocci$TimeAssociation[str] and creates it if need be. Output is the \
output of  <stuff>, so does not change the working of the function.\>\"", 
     ",", "\"\<3\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$TimingReset\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Timing\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
     "\"\<Puts Flocci$TimeAssociation=<||>;\>\""}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$TimingPrint\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Timing\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
      "\"\<Turns Flocci$TimeAssociation into a list.\>\""}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$TimeAssociation", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Timing", "[", "str_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$Timing", "[", "str", "]"}], "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"x", "//", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Lookup", "[", 
                RowBox[{"Flocci$TimeAssociation", ",", "str", ",", "False"}], 
                "]"}], "===", " ", "False"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{
             "Flocci$TimeAssociation", "\[LeftDoubleBracket]", "str", 
              "\[RightDoubleBracket]"}], "+=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], ",", "1"}], "}"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"Flocci$TimeAssociation", ",", 
              RowBox[{"str", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"First", "[", "#", "]"}], ",", "1"}], "}"}]}]}], 
             "]"}]}], "]"}], ";", " ", 
          RowBox[{"Last", "[", "#", "]"}]}], ")"}], "&"}]}]}], "]"}]}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$TimingReset", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Flocci$TimeAssociation", "=", 
      RowBox[{"<|", "|>"}]}], ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$TimingPrint", ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Keys", "[", "Flocci$TimeAssociation", "]"}], ",", 
      RowBox[{"Values", "[", "Flocci$TimeAssociation", "]"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8774146396313667`*^9, 3.877414739574321*^9}, {
   3.8774148251889*^9, 3.877414851380589*^9}, {3.877414946403873*^9, 
   3.87741494988727*^9}, {3.877415007789269*^9, 3.8774150570813293`*^9}, {
   3.877415118441296*^9, 3.877415149974247*^9}, {3.877415218232987*^9, 
   3.8774152230398903`*^9}, {3.877415270773306*^9, 3.877415275991891*^9}, 
   3.877415391149831*^9, {3.877415572898065*^9, 3.877415622832919*^9}, {
   3.87741577390303*^9, 3.877415990543652*^9}, 3.877416109317052*^9, {
   3.877420387055388*^9, 3.877420403356596*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4e89d3ac-5d6c-4b17-b410-06921b262692"]
}, Closed]],

Cell[CellGroupData[{

Cell["The basics of Lie algebras", "Section",
 CellChangeTimes->{{3.8684433834132147`*^9, 
  3.86844339217241*^9}},ExpressionUUID->"e308b953-cb93-4f8a-8b10-\
3a2e625676b6"],

Cell[CellGroupData[{

Cell["Algebra Standardize", "Subsection",
 CellChangeTimes->{{3.875684282843072*^9, 
  3.875684290331173*^9}},ExpressionUUID->"fc6ff6fe-d668-4c91-96f8-\
b903ba7a69b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$AlgAss\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", "\"\<-\>\"", ",", "\"\<An association map\>\"", 
      ",", "\"\<Assocaites algebra type A with 1, B with 2, ..., G with 7, \
and U1 with 0.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$AlgStandard\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<s) A simple Lie algebra, as a string, or a varible with or without \
LieArt.\>\"", ",", "\"\<A pair of integers e.g. {1,2}\>\"", ",", 
      "\"\<Standardizes the form of our algebras. The first number (1) is the \
type of algebra, and the second number (2) is the rank.  \>\""}], "}"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$AlgAss", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"\"\<D\>\"", "\[Rule]", " ", "4"}], ",", 
     RowBox[{"\"\<E\>\"", "\[Rule]", " ", "5"}], ",", 
     RowBox[{"\"\<F\>\"", "\[Rule]", " ", "6"}], ",", 
     RowBox[{"\"\<G\>\"", "\[Rule]", " ", "7"}], ",", 
     RowBox[{"\"\<U\>\"", "\[Rule]", " ", "0"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$AlgStandard", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lookup", "[", 
       RowBox[{"Flocci$AlgAss", ",", 
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", "1"}], "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "//", "ToExpression"}]}], "}"}], " ", 
    "&"}], "@", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"Head", "[", "s", "]"}], "]"}], "===", "Algebra"}], ",", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"Head", "[", "s", "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "]"}], "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}]}], ",", 
     RowBox[{"ToString", "[", "s", "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQnfiw64f7gzeOJcesGT2AdIK8HhuI/pq+kRNEM/yT
4APRE4+Y84PoLp3p4iD6ns4EaRB9YN1JXRDtdGC6IVh8EbsZiGZRFAXTc5yW
WYFo2Un77UD0oo5zriC6eRqnO4iWyHLxBdEfVC0DQLSJ1fRwEL32zYlsEH3s
4c0yEF2dWbsARG+ae3wJiG7NyVsOos/0v9gEov/v/QKmzzAYvQLRJ4tvfwfR
DXJX/oP9EXqByRNILxDbKwyi7yn6ioDonoVzTUG05G43MxDNXeeQbfH8jaPM
AZMcEC1hG14MokX+mvSDaACVlp/S
  "],
 CellLabel->"In[16]:=",ExpressionUUID->"f8720a67-44d7-4fca-993b-f14561d6d1dc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rank", "Subsection",
 CellChangeTimes->{{3.868445127216309*^9, 3.86844512782333*^9}, 
   3.8756865670128613`*^9},ExpressionUUID->"bdf71aa4-700b-4622-9c0f-\
15adc9e4010b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$Rank\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$Rank", "::", "input"}], "=", 
    "\"\<i) A simple Lie algebra e.g. A1. ii) A semi-simple Lie algebra \
{A1,A2}.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "::", "output"}], "=", 
   "\"\<i) The rank e.g. 1. ii) The list of ranks e.g. {1,2}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "::", "description"}], "=", "\"\<-\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "::", "clear"}], "=", "\"\<4\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$Rank", "[", "s", "]"}], "=", 
    RowBox[{
     RowBox[{"Flocci$AlgStandard", "[", "s", "]"}], "\[LeftDoubleBracket]", 
     "2", "\[RightDoubleBracket]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Rank", "[", "g_List", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$Rank", "[", "g", "]"}], "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Flocci$Rank", ",", "g"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684451298617563`*^9, 3.868445147549108*^9}, {
  3.868449530234585*^9, 3.868449641762087*^9}, {3.8684575395184937`*^9, 
  3.868457542051426*^9}, {3.870428440061523*^9, 3.870428443655169*^9}, {
  3.875168640046653*^9, 3.87516864754956*^9}, {3.8751739564353323`*^9, 
  3.875173969579528*^9}, {3.875174683764751*^9, 3.87517470125208*^9}, {
  3.875174826635469*^9, 3.875174833190126*^9}, {3.875176251064022*^9, 
  3.8751763316431913`*^9}, {3.875176611565*^9, 3.875176668246229*^9}, {
  3.875337614518179*^9, 3.87533762806909*^9}, {3.875337681164785*^9, 
  3.875337693138186*^9}, {3.875686482003232*^9, 3.875686516398003*^9}, {
  3.877421300429236*^9, 3.8774213072204514`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"50b2943a-9dbf-402b-b8ba-7bcd17e9d78a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Type of algebra", "Subsection",
 CellChangeTimes->{{3.868457449917469*^9, 
  3.8684574542990828`*^9}},ExpressionUUID->"10658c12-1018-488c-b6cd-\
1b645dd8deec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$TypeAQ\>\"", ",", "\"\<Flocci$TypeBQ\>\"", ",", 
     "\"\<Flocci$TypeCQ\>\"", ",", "\"\<Flocci$TypeDQ\>\"", ",", 
     "\"\<Flocci$classicalQ\>\"", ",", "\"\<Flocci$TypeG2Q\>\"", ",", 
     "\"\<Flocci$TypeF4Q\>\"", ",", "\"\<Flocci$TypeE6Q\>\"", ",", 
     "\"\<Flocci$TypeE7Q\>\"", ",", "\"\<Flocci$TypeE8Q\>\"", ",", 
     "\"\<Flocci$TypeU1Q\>\""}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeAQ", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeAQ", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeAQ", "::", "output"}], "=", "\"\<True or False\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeAQ", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type A or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeBQ", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeBQ", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeBQ", "::", "output"}], "=", "\"\<True or False\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeBQ", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type B or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeCQ", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeCQ", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeCQ", "::", "output"}], "=", "\"\<True or False\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeCQ", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type C or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeDQ", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeDQ", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeDQ", "::", "output"}], "=", "\"\<True or False\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeDQ", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type D or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeG2Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeG2Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeG2Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeG2Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type G2 or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeF4Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeF4Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeF4Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeF4Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type F4 or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE6Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE6Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE6Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeE6Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type E6 or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE7Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE7Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE7Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeE7Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type E7 or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE8Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE8Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeE8Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeE8Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type E8 or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeU1Q", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeU1Q", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$TypeU1Q", "::", "output"}], "=", "\"\<True or False\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeU1Q", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type U(1) or False otherwise.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$classicalQ", "::", "tag"}], "=", "\"\<LieAlg\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$classicalQ", "::", "input"}], "=", 
   "\"\<s) A simple Lie algebra\>\""}], ";", 
  RowBox[{
   RowBox[{"Flocci$classicalQ", "::", "output"}], "=", 
   "\"\<True or False\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$classicalQ", "::", "description"}], "=", 
    "\"\<Outputs True if algebra is of type A, B, C or D, or False otherwise.\
\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeAQ", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$AlgStandard", "[", "s", "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeBQ", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$AlgStandard", "[", "s", "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[Equal]", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeCQ", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$AlgStandard", "[", "s", "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[Equal]", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TypeDQ", "[", "s_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Flocci$AlgStandard", "[", "s", "]"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "\[Equal]", "4"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$classicalQ", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], "||", 
     RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], "||", 
     RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], "||", 
     RowBox[{"Flocci$TypeDQ", "[", "s", "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeG2Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "G2"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeF4Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "F4"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE6Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "E6"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE7Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "E7"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeE8Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "E8"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TypeU1Q", "[", "s_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"s", "===", "U1"}], ")"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684575730081387`*^9, 3.868457687524815*^9}, {
   3.868457720627378*^9, 3.8684578311659*^9}, {3.868457926795171*^9, 
   3.868457931100994*^9}, {3.868458059891004*^9, 3.868458103906774*^9}, {
   3.868458166338005*^9, 3.868458212766986*^9}, {3.874997661525435*^9, 
   3.8749976617173033`*^9}, {3.8751748435172577`*^9, 3.875174928614848*^9}, {
   3.87533775639753*^9, 3.875337793674094*^9}, {3.875337905687373*^9, 
   3.875338202999997*^9}, {3.875338236638214*^9, 3.8753382498099527`*^9}, {
   3.875686582296542*^9, 3.875686588684411*^9}, {3.875686619957158*^9, 
   3.8756867618888807`*^9}, 3.875686807859256*^9, {3.876582283782275*^9, 
   3.876582285414555*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"43fad517-0ae1-43b1-8241-f6dff2d34571"]
}, Closed]],

Cell[CellGroupData[{

Cell["Change of basis matrices", "Subsection",
 CellChangeTimes->{{3.8685975682589283`*^9, 
  3.868597572997954*^9}},ExpressionUUID->"0b3cf066-6b9a-4807-a160-\
e2d6b9103bc9"],

Cell[CellGroupData[{

Cell["Cartan matrix", "Subsubsection",
 CellChangeTimes->{{3.868597576120791*^9, 
  3.868597578582501*^9}},ExpressionUUID->"b3039c9e-0992-481c-8b83-\
97d2ca305a1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$CartanMatrix\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CartanMatrix", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$CartanMatrix", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CartanMatrix", "::", "output"}], "=", 
   "\"\<Cartan matrix for s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CartanMatrix", "::", "description"}], "=", 
   "\"\<Returns Cartan matrix for s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CartanMatrix", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$CartanMatrix", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "rank", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", " ", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flocci$Rank", "[", "s", "]"}], "==", "1"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"{", "2", "}"}], "}"}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", "2"}], ",", 
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "]"}], "->", 
                 RowBox[{"-", "1"}]}], ",", 
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "1"}], "}"}], "]"}], "->", 
                 RowBox[{"-", "1"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rank", ",", "rank"}], "}"}]}], "]"}], "//", 
            "Normal"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"SparseArray", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", "2"}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "1"}], ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "+", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rank", ",", "rank"}], "}"}], "->", " ", "2"}], ",", 
               
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}], "->", 
                RowBox[{"-", "2"}]}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rank", ",", 
                  RowBox[{"rank", "-", "1"}]}], "}"}], "->", 
                RowBox[{"-", "1"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"rank", ",", "rank"}], "}"}]}], "]"}]}], "//", 
          "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flocci$Rank", "[", "s", "]"}], "==", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayFlatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"SparseArray", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", "2"}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"rank", "-", "1"}], ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", "0"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "+", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rank", ",", "rank"}], "}"}], "->", " ", "2"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}], "->", 
                  RowBox[{"-", "1"}]}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rank", ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}], "->", 
                  RowBox[{"-", "2"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"rank", ",", "rank"}], "}"}]}], "]"}]}], "//", 
            "Normal"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"SparseArray", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", "2"}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "->", 
                    RowBox[{"-", "1"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "}"}]}], "]"}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2"}], "}"}], "]"}]}], "}"}]}], "}"}], 
            "]"}], "+", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rank", ",", 
                  RowBox[{"rank", "-", "2"}]}], "}"}], "->", " ", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rank", "-", "1"}], ",", 
                  RowBox[{"rank", "-", "2"}]}], "}"}], "->", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rank", "-", "2"}], ",", 
                  RowBox[{"rank", "-", "1"}]}], "}"}], "->", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rank", "-", "2"}], ",", "rank"}], "}"}], "->", 
                RowBox[{"-", "1"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"rank", ",", "rank"}], "}"}]}], "]"}]}], "//", 
          "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "2"}], "}"}]}], 
          "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "2"}], 
            "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "2"}], "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868597667334157*^9, 3.868597723466816*^9}, {
   3.868610661116766*^9, 3.868610673490602*^9}, {3.8711353441475077`*^9, 
   3.871135421763925*^9}, {3.8711398675021267`*^9, 3.871139882793839*^9}, {
   3.873969510854598*^9, 3.873969515490054*^9}, 3.873969557098981*^9, {
   3.87517497352765*^9, 3.875174983866765*^9}, {3.875338583100884*^9, 
   3.875338602235277*^9}, {3.876824923015016*^9, 3.876824980186036*^9}, {
   3.877421258638082*^9, 3.8774212631160507`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"735e3892-48a2-4c54-a337-86cb57f08f2a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Metric tensors", "Subsubsection",
 CellChangeTimes->{{3.8685975813384037`*^9, 
  3.868597584181862*^9}},ExpressionUUID->"adc19ba7-a800-4824-8bd7-\
c1d5bf612e6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$MetricTensor\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MetricTensor", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MetricTensor", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MetricTensor", "::", "output"}], "=", 
   "\"\<Metric tensor for s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MetricTensor", "::", "description"}], "=", 
   "\"\<Returns Metric tensor for s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MetricTensor", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MetricTensor", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$MetricTensor", "[", "s", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "rank", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       StyleBox["We",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["take",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["the",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["metric",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["tensors",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["from",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["Table",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["2",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["of",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox["Dynkin",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       RowBox[{
        StyleBox["\"\<Semi-simple...\>\"",
         FontColor->RGBColor[1, 0.5, 0.5]], "."}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", " ", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "The", " ", "metric", " ", "tensor", " ", "for", " ", "An", " ", 
           "have", " ", "the", " ", 
           RowBox[{"from", ":", "\[IndentingNewLine]", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"n", "+", "1"}]], "..."}]}]}],
          FontColor->RGBColor[1, 0.5, 0.5]], "\[IndentingNewLine]", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"rank", "+", "1"}], ")"}]}], " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"Range", "[", "i", "]"}], ",", "rank", ",", "i"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "rank"}], "}"}]}], "]"}], "*", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PadLeft", "[", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"Range", "[", 
                RowBox[{"rank", "+", "1", "-", "i"}], "]"}], "]"}], ",", 
              "rank", ",", 
              RowBox[{"rank", "+", "1", "-", "i"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "*", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"ArrayFlatten", "@", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "i", "]"}], ",", 
                    RowBox[{"rank", "-", "1"}], ",", "i"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", "i", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}]}], "}"}], 
              "}"}]}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"rank", "/", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"Range", "[", "i", "]"}], ",", "rank", ",", "i"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "*", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "*", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "i", "]"}], ",", 
                    RowBox[{"rank", "-", "2"}], ",", "i"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"rank", "-", "2"}]}], "}"}]}], "]"}]}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"rank", "-", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", "i"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"rank", "-", "2"}]}], "}"}]}], "]"}], "]"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "/", "2"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "2"}], ")"}], "/", "2"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "2"}], ")"}], "/", "2"}], ",", 
                   RowBox[{"rank", "/", "2"}]}], "}"}]}], "}"}]}], "}"}]}], 
            "}"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "/", "3"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"4", "/", "3"}], ",", 
             RowBox[{"5", "/", "3"}], ",", "2", ",", 
             RowBox[{"4", "/", "3"}], ",", 
             RowBox[{"2", "/", "3"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "3"}], ",", 
             RowBox[{"10", "/", "3"}], ",", "4", ",", 
             RowBox[{"8", "/", "3"}], ",", 
             RowBox[{"4", "/", "3"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4", ",", "6", ",", "4", ",", "2", ",", "3"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"4", "/", "3"}], ",", 
             RowBox[{"8", "/", "3"}], ",", "4", ",", 
             RowBox[{"10", "/", "3"}], ",", 
             RowBox[{"5", "/", "3"}], ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "/", "3"}], ",", 
             RowBox[{"4", "/", "3"}], ",", "2", ",", 
             RowBox[{"5", "/", "3"}], ",", 
             RowBox[{"4", "/", "3"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "2"}], 
            "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "2"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "3", ",", "6", ",", "8", ",", "6", ",", "4", ",", "2", ",", "4"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "12", ",", "9", ",", "6", ",", "3", ",", 
             "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "6", ",", "9", ",", 
             RowBox[{"15", "/", "2"}], ",", "5", ",", 
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"9", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "2", ",", "3"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3", ",", 
             RowBox[{"5", "/", "2"}], ",", "2", ",", 
             RowBox[{"3", "/", "2"}], ",", 
             RowBox[{"3", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4", ",", "6", ",", 
             RowBox[{"9", "/", "2"}], ",", "3", ",", 
             RowBox[{"3", "/", "2"}], ",", 
             RowBox[{"7", "/", "2"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "4", ",", "7", ",", "10", ",", "8", ",", "6", ",", "4", ",", "2", 
             ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "7", ",", "14", ",", "20", ",", "16", ",", "12", ",", "8", ",", 
             "4", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "10", ",", "20", ",", "30", ",", "24", ",", "18", ",", "12", ",", 
             "6", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "24", ",", "20", ",", "15", ",", "10", ",", 
             "5", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "6", ",", "12", ",", "18", ",", "15", ",", "12", ",", "8", ",", 
             "4", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "12", ",", "10", ",", "8", ",", "6", ",", "3",
              ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", 
             ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "5", ",", "10", ",", "15", ",", "12", ",", "9", ",", "6", ",", 
             "3", ",", "8"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "6", ",", "4", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4", ",", "3", ",", 
             RowBox[{"3", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"3", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868597829901655*^9, 3.868597871257226*^9}, {
  3.868598161177105*^9, 3.868598258406287*^9}, {3.873969566591674*^9, 
  3.873969569326532*^9}, {3.875175033681159*^9, 3.875175036954135*^9}, {
  3.875338595038159*^9, 3.875338598537539*^9}, {3.876826089643169*^9, 
  3.8768261216501713`*^9}, {3.87742126907786*^9, 3.877421270610938*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"dbc40e1c-d026-4583-b3dd-37283d441f80"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Positive roots & Roots", "Subsection",
 CellChangeTimes->{{3.86861041639153*^9, 3.8686104181759043`*^9}, {
  3.873960862786236*^9, 
  3.873960867091131*^9}},ExpressionUUID->"9ed6d3e1-6e17-4db3-b288-\
85d77712d764"],

Cell["\<\
We write the positive roots, firstly in the simple roots basis, and then \
convert them to the fundamental weights basis.\
\>", "Text",
 CellChangeTimes->{{3.868611999785406*^9, 
  3.868612043429131*^9}},ExpressionUUID->"e9c212e2-3003-4f14-95d3-\
652f0ee8b256"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$PositiveRootsSB\>\"", ",", "\"\<Flocci$PositiveRoots\>\""}], 
    "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRootsSB", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRoots", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$PositiveRootsSB", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRootsSB", "::", "output"}], "=", 
   "\"\<Positive roots in simple root basis.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRootsSB", "::", "description"}], "=", 
   "\"\<Returns positive roots in simple root basis \
{{a1,a2,a3},{a1p,a2p,a3p},...} where {a1,a2,a3} stands for \
\[IndentingNewLine]           a1*\!\(\*SubscriptBox[\(\[Alpha]\), \(1\)]\) + \
a2*\!\(\*SubscriptBox[\(\[Alpha]\), \(2\)]\) + a3*\!\(\*SubscriptBox[\(\
\[Alpha]\), \(3\)]\) with \!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\) being \
simple roots.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$PositiveRoots", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRoots", "::", "output"}], "=", 
   "\"\<Positive roots in fundamental weight basis.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRoots", "::", "description"}], "=", 
   "\"\<Returns positive roots in fundamental weight basis given by \
Flocci$PositiveRootsSB[s].Flocci$CartanMatrix[s].\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PositiveRoots", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PositiveRootsSB", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "posRoots", ",", "rank", ",", "\[Alpha]", ",", "\[Alpha]1", ",", 
      "\[Alpha]2", ",", "\[Alpha]3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "function", " ", "returns", " ", "the", " ", "positive", 
      " ", "roots", " ", "for", " ", "the", " ", "simple", " ", "Lie", " ", 
      "algebra", " ", "s", " ", "in", " ", "the", " ", "simple", " ", "root", 
      " ", "basis", " ", "\[IndentingNewLine]", "  ", 
      RowBox[{"Input", ":", "    ", 
       RowBox[{
        RowBox[{"-", " ", "s"}], " ", "simple", " ", "Lie", " ", "algebra", 
        " ", "in", " ", "LieArt", " ", "format", " ", "of", " ", "as", " ", 
        "expression", "\[IndentingNewLine]", "Output"}], ":", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "positive"}], " ", "roots", " ", "in", " ", 
         "simple", " ", "root", " ", "basis", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a1p", ",", "a2p", ",", "a3p"}], "}"}], ",", "..."}], 
          "}"}], " ", "where", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], " ", "stands", " ", 
         "for", " ", "\[IndentingNewLine]", "           ", "a1", "*", 
         SubscriptBox["\[Alpha]", "1"]}], " ", "+", " ", 
        RowBox[{"a2", "*", 
         SubscriptBox["\[Alpha]", "2"]}], " ", "+", " ", 
        RowBox[{"a3", "*", 
         SubscriptBox["\[Alpha]", "3"], " ", "with", " ", 
         SubscriptBox["\[Alpha]", "i"], " ", "being", " ", "simple", " ", 
         "roots"}]}]}]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "initialize", " ", "list", " ", "of", " ", "positive", " ", "roots", " ",
       "and", " ", "find", " ", "rank", " ", "of", " ", "algebra"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"posRoots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rank", "=", 
      RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Return", " ", "the", " ", "corresponding", " ", "positive", " ", 
       "roots", " ", "for", " ", "the", " ", "algebra", " ", "s"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", " ", 
           "of", " ", "the", " ", "simple", " ", "roots", " ", "are", " ", 
           "of", " ", "the", " ", "form", " ", 
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "..."}], ")"}]}], ",", " ", 
          
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "..."}], ")"}], ",", " ", "...",
           ",", " ", 
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "..."}], ")"}], ",", " ", 
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "..."}], ")"}], 
          ",", "..."}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "=", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"posRoots", ",", "\[Alpha]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"posRoots", ",", "\[Alpha]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "rank"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
               " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are",
                " ", "of", " ", "the", " ", "form", " ", 
               SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"j", "-", "1"}]]}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Alpha]", "i"], "+"}], "..."}], "+", 
                 SubscriptBox["\[Alpha]", 
                  RowBox[{"j", "-", "1"}]], "+", 
                 RowBox[{"2", 
                  SubscriptBox["\[Alpha]", "j"]}], "+"}], "..."}], "+", 
               RowBox[{"2", 
                SubscriptBox["\[Alpha]", "n"], " ", "for", " ", "1"}]}], "<=",
               "i", "<", "j", "<=", 
              RowBox[{"n", "-", 
               RowBox[{"1", " ", "and", " ", 
                SubscriptBox["\[Alpha]", "i"]}], "+"}]}], "..."}], "+", 
            SubscriptBox["\[Alpha]", "n"]}], ",", " ", 
           RowBox[{"1", "<=", "i", "<", "n"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]1", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]2", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]3", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"posRoots", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"posRoots", ",", 
              RowBox[{"{", 
               RowBox[{"\[Alpha]1", ",", "\[Alpha]2", ",", "\[Alpha]3"}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]1", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\[Alpha]2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"posRoots", ",", "\[Alpha]1"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"posRoots", ",", "\[Alpha]2"}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"posRoots", ",", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rank", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
               " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are",
                " ", "of", " ", "the", " ", "form", " ", 
               SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"j", "-", "1"}]]}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"for", " ", "1"}], "<=", "i", "<", "j", "<=", 
                RowBox[{
                 RowBox[{"n", " ", "and", " ", 
                  SubscriptBox["\[Alpha]", "i"]}], "+"}]}], "..."}], "+", 
              SubscriptBox["\[Alpha]", 
               RowBox[{"j", "-", "1"}]], "+", 
              RowBox[{"2", 
               SubscriptBox["\[Alpha]", "j"]}], "+"}], "..."}], "+", 
            RowBox[{"2", 
             SubscriptBox["\[Alpha]", 
              RowBox[{"n", "-", "1"}]]}], "+", 
            SubscriptBox["\[Alpha]", "n"]}], ",", " ", 
           RowBox[{"1", "<=", "i", "<=", "j", "<=", "n"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]1", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]2", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "i", ",", 
                  RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"posRoots", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"posRoots", ",", 
              RowBox[{"{", 
               RowBox[{"\[Alpha]1", ",", "\[Alpha]2"}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]1", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\[Alpha]2", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "-", "1"}], "]"}], "]"}], "=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"posRoots", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"posRoots", ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Alpha]1", ",", "\[Alpha]2"}], "}"}]}], "]"}]}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]2", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"posRoots", ",", "\[Alpha]2"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"posRoots", ",", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rank", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
              " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are", 
              " ", "of", " ", "the", " ", "form", " ", 
              SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
           SubscriptBox["\[Alpha]", 
            RowBox[{"j", "-", "1"}]]}], ",", " ", 
          RowBox[{
           RowBox[{"for", " ", "1"}], "<=", "i", "<", "j", "<=", 
           RowBox[{
            RowBox[{"n", " ", "and", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Alpha]", "i"], "+"}], "..."}], "+", 
               SubscriptBox["\[Alpha]", "n"]}], ")"}]}], "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["\[Alpha]", "j"], "+"}], "..."}], "+", 
              SubscriptBox["\[Alpha]", "n"]}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Alpha]", 
               RowBox[{"n", "-", "1"}]], "+", 
              SubscriptBox["\[Alpha]", "n"]}], ")"}]}]}], ",", " ", 
          RowBox[{"1", "<=", "i", "<", "j", "<=", "n"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]1", "=", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Alpha]2", "=", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], 
             "]"}], "+", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "i"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
             "]"}], "-", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"rank", "-", "1"}], "->", "1"}], ",", 
                RowBox[{"rank", "->", "1"}]}], "}"}], ",", "rank"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"posRoots", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"posRoots", ",", 
             RowBox[{"{", 
              RowBox[{"\[Alpha]1", ",", "\[Alpha]2"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Alpha]1", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\[Alpha]2", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"\[Alpha]2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "-", "1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"posRoots", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"posRoots", ",", 
                RowBox[{"{", 
                 RowBox[{"\[Alpha]1", ",", "\[Alpha]2"}], "}"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "===", "G2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"posRoots", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "===", "E6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"posRoots", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"s", "===", "E7"}], ",", "\[IndentingNewLine]", 
       RowBox[{"posRoots", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "3", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "2"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"s", "===", "E8"}], ",", "\[IndentingNewLine]", 
       RowBox[{"posRoots", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "6", ",", "5", ",", "3", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "6", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "4", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "3", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "3", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "4", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "3", ",", "2", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "3", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "3", ",", "2", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "3", ",", "2", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
            ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"s", "===", "F4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"posRoots", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "4", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Normal", ",", "posRoots"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PositiveRoots", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{"Flocci$PositiveRootsSB", "[", "s", "]"}], ".", 
    RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}], 
    RowBox[{"(*", 
     RowBox[{
     "Positive", " ", "roots", " ", "in", " ", "the", " ", "fundamental", " ",
       "weights", " ", "basis"}], "*)"}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868608739405115*^9, 3.868608857169612*^9}, {
  3.8686089005514917`*^9, 3.868609078551222*^9}, {3.868609121064587*^9, 
  3.868609256705111*^9}, {3.8686093414693737`*^9, 3.868609621881824*^9}, {
  3.86860965361401*^9, 3.868609827996435*^9}, {3.868610509550837*^9, 
  3.8686105100819387`*^9}, {3.8686105978383007`*^9, 3.868610610768126*^9}, {
  3.86861100483611*^9, 3.868611005023857*^9}, {3.868611821040732*^9, 
  3.868611829953467*^9}, {3.868611934911871*^9, 3.868611955387003*^9}, {
  3.873969830163981*^9, 3.873969833328579*^9}, {3.8751750705027943`*^9, 
  3.875175094696454*^9}, {3.875338616046895*^9, 3.875338632464538*^9}, {
  3.876826174185588*^9, 3.8768262580902853`*^9}, {3.8768262936522818`*^9, 
  3.876826314721776*^9}, {3.8774213349694777`*^9, 3.877421338228603*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"8d1ff178-008c-4cb4-9fbb-894fd25af18c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$Roots\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Roots", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$Roots", "::", "input"}], "=", 
    "\"\<g: Lie algebra in the format {s1,s2,...}, e.g. {A4}\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Roots", "::", "output"}], "=", 
   "\"\<All roots in fundamental weight basis.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Roots", "::", "description"}], "=", 
   "\"\<Returns all roots in fundamental weight basis for the Lie algebra \
g.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$Roots", "[", "g_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ranklist", ",", "rootg", ",", "roots", ",", "zero", ",", "s", ",", 
      "rootT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ranklist", "=", 
      RowBox[{"Flocci$Rank", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"roots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{
         "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"zero", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", "#"}], "]"}], "}"}], "&"}], ",", "ranklist"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rootg", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"List", "@@@", 
            RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}]}], ",", 
           RowBox[{"-", 
            RowBox[{"List", "@@@", 
             RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}]}]}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zero", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", "rootg"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rootT", "=", 
         RowBox[{"Tuples", "[", "zero", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"roots", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"roots", ",", "rootT"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"Flatten", ",", "roots"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873963058737265*^9, 3.873963069580556*^9}, 
   3.873963199577526*^9, {3.8739632315213337`*^9, 3.87396324856179*^9}, {
   3.875338641187243*^9, 3.8753386734986763`*^9}, {3.8757703353355427`*^9, 
   3.875770341431244*^9}, {3.8768263356251383`*^9, 3.876826397208523*^9}, {
   3.876826429101734*^9, 3.8768264678823757`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"0d913874-6d0e-40f5-917a-3b397b73b633"]
}, Closed]],

Cell[CellGroupData[{

Cell["Scalar product", "Subsection",
 CellChangeTimes->{{3.868604040509379*^9, 
  3.868604042475849*^9}},ExpressionUUID->"816f5786-a86f-4b77-97a0-\
6a167966c706"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$ScalarProduct\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ScalarProduct", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$ScalarProduct", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A4. \[Lambda]1,\[Lambda]2: \
weights\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ScalarProduct", "::", "output"}], "=", 
   "\"\<Scalar product of \[Lambda]1 and \[Lambda]2 using \
Flocci$MetricTensor[s].\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ScalarProduct", "::", "description"}], "=", 
   "\"\<Returns the scalar product of \[Lambda]1 and \[Lambda]2.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$ScalarProduct", "[", "s_", "]"}], "[", 
    RowBox[{"\[Lambda]1_", ",", "\[Lambda]2_"}], "]"}], ":=", 
   RowBox[{"\[Lambda]1", ".", 
    RowBox[{"Flocci$MetricTensor", "[", "s", "]"}], ".", "\[Lambda]2"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868604044505217*^9, 3.868604096854322*^9}, {
  3.8751751347436543`*^9, 3.875175141529747*^9}, {3.875338679093133*^9, 
  3.875338682305086*^9}, {3.8768264918570557`*^9, 3.8768265892910643`*^9}, {
  3.876826622073926*^9, 3.876826652505039*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"ef2c6c45-f262-43af-9085-405b2cdb8e5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Dimensions", "Subsection",
 CellChangeTimes->{{3.868525020144456*^9, 3.86852503148603*^9}, {
   3.8685286178535557`*^9, 3.868528619105275*^9}, 
   3.8698403899888*^9},ExpressionUUID->"5fd41673-cd8f-467c-b315-ec7ed1f97361"],

Cell[CellGroupData[{

Cell["Irrep Dim Function", "Subsubsection",
 CellChangeTimes->{{3.8687175640499372`*^9, 3.8687175668858232`*^9}, {
  3.8687185822868834`*^9, 
  3.8687185854593477`*^9}},ExpressionUUID->"750325f1-cd9a-4ba5-a1bd-\
975c2e098c16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$Dim\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "::", "input"}], "=", 
   "\"\<s) A simple lie algebra or a semi-simple Lie algebra.\\n\[Lambda]) \
The hw of s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "::", "output"}], "=", 
   "\"\<The dimension of the irrep of s defined by \[Lambda].\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "::", "description"}], "=", "\"\<-\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "::", "clear"}], "=", "\"\<4\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Dim", "[", 
    RowBox[{"s_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$Dim", "[", 
     RowBox[{"s", ",", "\[Lambda]"}], "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "For", " ", "the", " ", "dimension", " ", "of", " ", "irreps", " ", 
        "of", " ", "simple", " ", "g"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Finds", " ", "the", " ", "dimension", " ", "of", " ", "the", " ", 
        "irrep", " ", "with", " ", "highest", " ", "weight", " ", "\[Lambda]",
         " ", "of", " ", "the", " ", "algebra", " ", "alg", 
        "\[IndentingNewLine]", "   ", 
        RowBox[{"Input", ":", "      ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "s"}], "  ", "algebra", " ", "either", " ", "in", " ",
            "LieArt", " ", "format", " ", "or", " ", "expression"}], 
          "\[IndentingNewLine]", "             ", "-", 
          RowBox[{
          "\[Lambda]", "   ", "heighest", " ", "weight", " ", "of", " ", 
           "representation", "\[IndentingNewLine]", "Output"}]}], ":", 
         "     ", 
         RowBox[{
          RowBox[{"-", " ", "dimension"}], " ", "of", " ", 
          "representation"}]}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Use", " ", "the", " ", "appropriate", " ", "dimensionality", " ", 
        "formula", " ", "for", " ", "the", " ", "algebra", " ", "alg"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Flocci$DimAn", "[", "s", "]"}], "@@", "\[Lambda]"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Flocci$DimBn", "[", "s", "]"}], "@@", "\[Lambda]"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Flocci$DimCn", "[", "s", "]"}], "@@", "\[Lambda]"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Flocci$DimDn", "[", "s", "]"}], "@@", "\[Lambda]"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Flocci$DimG2", "@@", "\[Lambda]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Flocci$DimE6", "@@", "\[Lambda]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Flocci$DimE7", "@@", "\[Lambda]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Flocci$DimE8", "@@", "\[Lambda]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Flocci$DimF4", "@@", "\[Lambda]"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Flocci$Dim", "[", 
     RowBox[{"g_List", ",", "rep_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{"Flocci$Dim", "[", 
         RowBox[{
          RowBox[{"g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
          "ir", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ir", ",", "rep"}], "}"}]}], "]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$Dim", "[", 
     RowBox[{"g_List", ",", "rep_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"rep", "==", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "0", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plus", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Times", "@@", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Flocci$Dim", ",", 
            RowBox[{"{", 
             RowBox[{"g", ",", "ir"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ir", ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"Transpose", ",", 
              RowBox[{"TakeList", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "rep", "]"}], ",", 
                RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "]"}], 
            "]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "for", " ", "the", " ", "dimension", " ", "of", " ", "representations", 
     " ", "of", " ", "semi"}], "-", 
    RowBox[{"simple", " ", "g"}]}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868718200212283*^9, 3.868718236934209*^9}, {
   3.868718419943705*^9, 3.8687184234489*^9}, {3.868718599414236*^9, 
   3.868718604407217*^9}, {3.868719822051156*^9, 3.8687198667637157`*^9}, {
   3.8687200010544786`*^9, 3.8687200015143337`*^9}, {3.8691428317488203`*^9, 
   3.869142838908822*^9}, 3.870422299578422*^9, 3.875016360125029*^9, {
   3.875175150212308*^9, 3.875175153451891*^9}, {3.875338687226131*^9, 
   3.875338764729617*^9}, {3.8753387976884527`*^9, 3.8753388043443336`*^9}, {
   3.8774206212482758`*^9, 3.877420638794599*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"58e6d47d-dce2-4339-870d-a6d2be059535"]
}, Closed]],

Cell[CellGroupData[{

Cell["Different Algebras", "Subsubsection",
 CellChangeTimes->{{3.8687185932102203`*^9, 
  3.868718596406555*^9}},ExpressionUUID->"42b6e11d-266d-4b77-951d-\
ad83af23b59e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimAn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimAn", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimAn", "::", "input"}], "=", 
    "\"\<s: simple A-type Lie algebra, e.g. A4.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimAn", "::", "output"}], "=", 
   "\"\<Function which takes in heighest weight in returns dimensionality of \
representation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimAn", "::", "description"}], "=", 
   "\"\<Generates analytic function for dimensionality formula of s \
representations.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimAn", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimAn", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$DimAn", "[", "s", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]p\[Delta]", ",", "dim", ",", "i", ",", "j", ",", "rank", ",", 
       "\[Alpha]", ",", "arg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finds", " ", "the", " ", "dimensionality", " ", "formula", " ", "for", 
       " ", "the", " ", "An", " ", "algebra", " ", "s", " ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{"Input", ":", "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "s"}], " ", "simple", " ", "An", " ", "algebra", 
          "\[IndentingNewLine]", "Output"}], "   ", "-", " ", 
         RowBox[{
         "function", " ", "with", " ", "analytic", " ", "expression", " ", 
          "of", " ", "Weyl", " ", "dimensionality", " ", "formula"}]}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "rank", " ", "of", " ", "algebra", " ", "by", " ", 
       "length", " ", "of", " ", "highest", " ", "weight"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Define", " ", "arguments", " ", "for", " ", "function", " ", "that", 
         " ", "we", " ", "return"}], ",", " ", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "general"}], " ", "highest", " ", 
         "weight", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "..."}], "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"arg", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<a\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", 
        RowBox[{"Range", "[", "rank", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"define", " ", "\[Lambda]"}], " ", "+", " ", "\[Delta]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[Delta]"}], "=", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]p\[Delta]", "=", 
       RowBox[{"arg", "+", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", "&"}], ",", "rank"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Take", " ", "product", " ", "over", " ", "all", " ", "positive", " ", 
        
        RowBox[{"roots", ".", " ", "This"}], " ", "implements", " ", "the", 
        " ", "algorithm", " ", "in", " ", "Section", " ", "8.11", " ", "of", 
        " ", 
        RowBox[{"Graaf", "'"}], "s", " ", 
        RowBox[{"book", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", " ", 
          "of", " ", "the", " ", "simple", " ", "roots", " ", "are", " ", 
          "of", " ", "the", " ", "form", " ", 
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "..."}], ")"}]}], ",", " ", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "0", ",", "..."}], ")"}], ",", " ", "...",
          ",", " ", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0", ",", "..."}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "..."}], ")"}], ",",
          "..."}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{"\[Alpha]", ".", "\[Lambda]p\[Delta]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"\[Alpha]", ".", "\[Lambda]p\[Delta]"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", ".", "\[Alpha]"}], ")"}]}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "rank"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Return", " ", "function", " ", "with", " ", "analytic", " ", "form", 
        " ", "of", " ", "dimensionality", " ", "formula"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "arg", "]"}], ",", 
        RowBox[{"Evaluate", "[", "dim", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684395224655533`*^9, 3.8684396165054197`*^9}, {
   3.8684396816429157`*^9, 3.868439779429936*^9}, {3.868439815160678*^9, 
   3.8684398306070223`*^9}, {3.868439891908572*^9, 3.868439894361271*^9}, {
   3.868439959197268*^9, 3.868440056587274*^9}, {3.868457176118595*^9, 
   3.868457469393366*^9}, {3.86852426311768*^9, 3.868524268650407*^9}, {
   3.868717074761965*^9, 3.868717164628214*^9}, {3.8687173878790283`*^9, 
   3.868717425506516*^9}, 3.8687174621784143`*^9, {3.868717687162498*^9, 
   3.868717722824991*^9}, {3.8687180598371887`*^9, 3.8687181311364098`*^9}, {
   3.8687182038941307`*^9, 3.868718204139811*^9}, {3.868718303921529*^9, 
   3.8687183065947*^9}, {3.8687186075144777`*^9, 3.8687186081099243`*^9}, {
   3.8687186892128*^9, 3.868718760929801*^9}, {3.8687188074612093`*^9, 
   3.8687188827588167`*^9}, {3.868721486131878*^9, 3.868721486456525*^9}, {
   3.875175166110708*^9, 3.875175169880198*^9}, {3.8753388247972603`*^9, 
   3.875338835522106*^9}, {3.876826712075849*^9, 3.8768268328430853`*^9}, {
   3.8774202225159807`*^9, 3.877420226336025*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"1b266a41-5821-4a6c-b3e1-6abaa9fb642e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimBn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimBn", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimBn", "::", "input"}], "=", 
    "\"\<s: simple B-type Lie algebra, e.g. B4.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimBn", "::", "output"}], "=", 
   "\"\<Function which takes in heighest weight in returns dimensionality of \
representation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimBn", "::", "description"}], "=", 
   "\"\<Generates analytic function for dimensionality formula of s \
representations.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimBn", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimBn", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$DimBn", "[", "s", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]p\[Delta]", ",", "dim", ",", "i", ",", "j", ",", "rank", ",", 
       "k1", ",", "k2", ",", "k3", ",", "k", ",", "arg", ",", "metric", ",", 
       "\[Alpha]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finds", " ", "the", " ", "dimensionality", " ", "formula", " ", "for", 
       " ", "the", " ", "Bn", " ", "algebra", " ", "s", " ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{"Input", ":", "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "s"}], " ", "simple", " ", "Bn", " ", "algebra", 
          "\[IndentingNewLine]", "Output"}], "   ", "-", " ", 
         RowBox[{
         "function", " ", "with", " ", "analytic", " ", "expression", " ", 
          "of", " ", "Weyl", " ", "dimensionality", " ", "formula"}]}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "rank", " ", "of", " ", "algebra", " ", "by", " ", 
       "length", " ", "of", " ", "highest", " ", "weight"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Define", " ", "arguments", " ", "for", " ", "function", " ", "that", 
         " ", "we", " ", "return"}], ",", " ", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "general"}], " ", "highest", " ", 
         "weight", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "..."}], "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"arg", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<a\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", 
        RowBox[{"Range", "[", "rank", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"define", " ", "\[Lambda]"}], " ", "+", " ", "\[Delta]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[Delta]"}], "=", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]p\[Delta]", "=", 
       RowBox[{"arg", "+", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", "&"}], ",", "rank"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"metric", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"2", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "rank"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Take", " ", "product", " ", "over", " ", "all", " ", "positive", " ", 
        
        RowBox[{"roots", ".", " ", "This"}], " ", "implements", " ", "the", 
        " ", "algorithm", " ", "in", " ", "Section", " ", "8.11", " ", "of", 
        " ", 
        RowBox[{"Graaf", "'"}], "s", " ", 
        RowBox[{"book", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
             " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are", 
             " ", "of", " ", "the", " ", "form", " ", 
             SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
          SubscriptBox["\[Alpha]", 
           RowBox[{"j", "-", "1"}]]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Alpha]", "i"], "+"}], "..."}], "+", 
               SubscriptBox["\[Alpha]", 
                RowBox[{"j", "-", "1"}]], "+", 
               RowBox[{"2", 
                SubscriptBox["\[Alpha]", "j"]}], "+"}], "..."}], "+", 
             RowBox[{"2", 
              SubscriptBox["\[Alpha]", "n"], " ", "for", " ", "1"}]}], "<=", 
            "i", "<", "j", "<=", 
            RowBox[{"n", "-", 
             RowBox[{"1", " ", "and", " ", 
              SubscriptBox["\[Alpha]", "i"]}], "+"}]}], "..."}], "+", 
          SubscriptBox["\[Alpha]", "n"]}], ",", " ", 
         RowBox[{"1", "<=", "i", "<", "n"}]}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{
         RowBox[{"k1", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"k2", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"2", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"k3", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k3", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k3", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"k1", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"k2", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k3", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rank", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", "=", 
       RowBox[{"dim", "*", 
        RowBox[{
         RowBox[{"k3", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
         RowBox[{"(", 
          RowBox[{"k3", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Return", " ", "function", " ", "with", " ", "analytic", " ", "form", 
        " ", "of", " ", "dimensionality", " ", "formula"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "arg", "]"}], ",", 
        RowBox[{"Evaluate", "[", "dim", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868457484906035*^9, 3.868457526474843*^9}, {
   3.8684579023248453`*^9, 3.868457991245255*^9}, {3.868458029371644*^9, 
   3.868458035728771*^9}, {3.868458225483076*^9, 3.86845824156746*^9}, {
   3.868458334777728*^9, 3.868458346803727*^9}, 3.86845846492978*^9, {
   3.868458706221538*^9, 3.868458876964591*^9}, {3.86845897488492*^9, 
   3.86845898861052*^9}, {3.8684590438819323`*^9, 3.868459210586382*^9}, {
   3.8684592563395653`*^9, 3.868459266063558*^9}, {3.868459392310124*^9, 
   3.868459408879106*^9}, {3.868459482432949*^9, 3.868459499386121*^9}, {
   3.868459542386723*^9, 3.868459567382367*^9}, {3.8684596155609426`*^9, 
   3.8684596695628777`*^9}, {3.868459920302997*^9, 3.868459976302573*^9}, {
   3.868460307593832*^9, 3.8684604274281054`*^9}, {3.868523991774398*^9, 
   3.868523994820225*^9}, 3.868524276012135*^9, {3.868718664495467*^9, 
   3.868718681857581*^9}, {3.8687187248971987`*^9, 3.8687187322557373`*^9}, 
   3.868718767442129*^9, 3.868718799567309*^9, {3.86871885606781*^9, 
   3.86871888926642*^9}, {3.8751751728208303`*^9, 3.875175175476388*^9}, {
   3.875339162790285*^9, 3.875339165529952*^9}, {3.87682684531115*^9, 
   3.8768268568205967`*^9}, {3.877420230114956*^9, 3.877420230952026*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"aed0d7d6-b999-4bcf-b180-0f419afc3e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimCn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimCn", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimCn", "::", "input"}], "=", 
    "\"\<s: simple C-type Lie algebra, e.g. C4.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimCn", "::", "output"}], "=", 
   "\"\<Function which takes in heighest weight in returns dimensionality of \
representation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimCn", "::", "description"}], "=", 
   "\"\<Generates analytic function for dimensionality formula of s \
representations.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimCn", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimCn", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$DimCn", "[", "s", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]p\[Delta]", ",", "dim", ",", "i", ",", "j", ",", "rank", ",", 
       "k1", ",", "k2", ",", "k3", ",", "k", ",", "metric", ",", "\[Alpha]", 
       ",", "arg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finds", " ", "the", " ", "dimensionality", " ", "formula", " ", "for", 
       " ", "the", " ", "Cn", " ", "algebra", " ", "s", " ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{"Input", ":", "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "s"}], " ", "simple", " ", "Cn", " ", "algebra", 
          "\[IndentingNewLine]", "Output"}], "   ", "-", " ", 
         RowBox[{
         "function", " ", "with", " ", "analytic", " ", "expression", " ", 
          "of", " ", "Weyl", " ", "dimensionality", " ", "formula"}]}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "rank", " ", "of", " ", "algebra", " ", "by", " ", 
       "length", " ", "of", " ", "highest", " ", "weight"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Define", " ", "arguments", " ", "for", " ", "function", " ", "that", 
         " ", "we", " ", "return"}], ",", " ", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "general"}], " ", "highest", " ", 
         "weight", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "..."}], "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"arg", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<a\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", 
        RowBox[{"Range", "[", "rank", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"define", " ", "\[Lambda]"}], " ", "+", " ", "\[Delta]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[Delta]"}], "=", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]p\[Delta]", "=", 
       RowBox[{"arg", "+", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", "&"}], ",", "rank"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"metric", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "rank"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Take", " ", "product", " ", "over", " ", "all", " ", "positive", " ", 
        
        RowBox[{"roots", ".", " ", "This"}], " ", "implements", " ", "the", 
        " ", "algorithm", " ", "in", " ", "Section", " ", "8.11", " ", "of", 
        " ", 
        RowBox[{"Graaf", "'"}], "s", " ", 
        RowBox[{"book", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
             " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are", 
             " ", "of", " ", "the", " ", "form", " ", 
             SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
          SubscriptBox["\[Alpha]", 
           RowBox[{"j", "-", "1"}]]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"for", " ", "1"}], "<=", "i", "<", "j", "<=", 
              RowBox[{
               RowBox[{"n", " ", "and", " ", 
                SubscriptBox["\[Alpha]", "i"]}], "+"}]}], "..."}], "+", 
            SubscriptBox["\[Alpha]", 
             RowBox[{"j", "-", "1"}]], "+", 
            RowBox[{"2", 
             SubscriptBox["\[Alpha]", "j"]}], "+"}], "..."}], "+", 
          RowBox[{"2", 
           SubscriptBox["\[Alpha]", 
            RowBox[{"n", "-", "1"}]]}], "+", 
          SubscriptBox["\[Alpha]", "n"]}], ",", " ", 
         RowBox[{"1", "<=", "i", "<=", "j", "<=", "n"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k1", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"k2", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"2", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "i", ",", 
                RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"k1", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"k2", "[", 
              RowBox[{"[", 
               RowBox[{"j", "-", "1"}], "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"k2", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
         ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k2", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rank", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", "=", 
       RowBox[{"dim", "*", 
        RowBox[{
         RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
         RowBox[{"(", 
          RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Return", " ", "function", " ", "with", " ", "analytic", " ", "form", 
        " ", "of", " ", "dimensionality", " ", "formula"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "arg", "]"}], ",", 
        RowBox[{"Evaluate", "[", "dim", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868460738232737*^9, 3.868460739301117*^9}, {
   3.868461384408681*^9, 3.868461386707615*^9}, {3.868461417328961*^9, 
   3.868461488025207*^9}, {3.868461584314246*^9, 3.868461612529999*^9}, {
   3.868461664975665*^9, 3.8684616885127163`*^9}, {3.868461792666299*^9, 
   3.868461830271183*^9}, {3.86846186844839*^9, 3.868461953030837*^9}, {
   3.86846370707257*^9, 3.868463870420309*^9}, {3.8684639151496363`*^9, 
   3.868463930395075*^9}, {3.868463983789896*^9, 3.868463984317635*^9}, {
   3.868464157898163*^9, 3.868464158367525*^9}, 3.868524281515629*^9, {
   3.868718773205562*^9, 3.8687187875379457`*^9}, {3.868718907941696*^9, 
   3.8687189364837847`*^9}, {3.875175178505377*^9, 3.875175181117173*^9}, {
   3.875339170141057*^9, 3.875339172923574*^9}, {3.876826874269136*^9, 
   3.8768268870707684`*^9}, {3.877420232828352*^9, 3.87742023389846*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"0a2d5fd7-b447-4f93-bbd9-326d93aa355b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimDn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimDn", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimDn", "::", "input"}], "=", 
    "\"\<s: simple D-type Lie algebra, e.g. D4.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimDn", "::", "output"}], "=", 
   "\"\<Function which takes in heighest weight in returns dimensionality of \
representation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimDn", "::", "description"}], "=", 
   "\"\<Generates analytic function for dimensionality formula of s \
representations.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimDn", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimDn", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$DimDn", "[", "s", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]p\[Delta]", ",", "dim", ",", "i", ",", "j", ",", "rank", ",", 
       "k1", ",", "k2", ",", "k3", ",", "k", ",", "metric", ",", "\[Alpha]", 
       ",", "arg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Finds", " ", "the", " ", "dimensionality", " ", "formula", " ", "for", 
       " ", "the", " ", "Dn", " ", "algebra", " ", "s", " ", 
       "\[IndentingNewLine]", "   ", 
       RowBox[{"Input", ":", "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "s"}], " ", "simple", " ", "Dn", " ", "algebra", 
          "\[IndentingNewLine]", "Output"}], "   ", "-", " ", 
         RowBox[{
         "function", " ", "with", " ", "analytic", " ", "expression", " ", 
          "of", " ", "Weyl", " ", "dimensionality", " ", "formula"}]}]}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "rank", " ", "of", " ", "algebra", " ", "by", " ", 
       "length", " ", "of", " ", "highest", " ", "weight"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Define", " ", "arguments", " ", "for", " ", "function", " ", "that", 
         " ", "we", " ", "return"}], ",", " ", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "general"}], " ", "highest", " ", 
         "weight", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "..."}], "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"arg", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<a\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", 
        RowBox[{"Range", "[", "rank", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"define", " ", "\[Lambda]"}], " ", "+", " ", "\[Delta]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[Delta]"}], "=", 
         RowBox[{"(", 
          RowBox[{"1", ",", "1", ",", "...", ",", "1"}], ")"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]p\[Delta]", "=", 
       RowBox[{"arg", "+", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", "&"}], ",", "rank"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"metric", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"dim", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "rank"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Take", " ", "product", " ", "over", " ", "all", " ", "positive", " ", 
        
        RowBox[{"roots", ".", " ", "This"}], " ", "implements", " ", "the", 
        " ", "algorithm", " ", "in", " ", "Section", " ", "8.11", " ", "of", 
        " ", 
        RowBox[{"Graaf", "'"}], "s", " ", 
        RowBox[{"book", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "The", " ", "positive", " ", "roots", " ", "in", " ", "terms", 
             " ", "of", " ", "the", " ", "simple", " ", "roots", " ", "are", 
             " ", "of", " ", "the", " ", "form", " ", 
             SubscriptBox["\[Alpha]", "i"]}], "+"}], "..."}], "+", 
          SubscriptBox["\[Alpha]", 
           RowBox[{"j", "-", "1"}]]}], ",", " ", 
         RowBox[{
          RowBox[{"for", " ", "1"}], "<=", "i", "<", "j", "<=", 
          RowBox[{
           RowBox[{"n", " ", "and", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["\[Alpha]", "i"], "+"}], "..."}], "+", 
              SubscriptBox["\[Alpha]", "n"]}], ")"}]}], "+", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Alpha]", "j"], "+"}], "..."}], "+", 
             SubscriptBox["\[Alpha]", "n"]}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Alpha]", 
              RowBox[{"n", "-", "1"}]], "+", 
             SubscriptBox["\[Alpha]", "n"]}], ")"}]}]}], ",", " ", 
         RowBox[{"1", "<=", "i", "<", "j", "<=", "n"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"k1", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", "->", "1"}], "}"}], ",", "rank"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"k2", "=", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", 
                 RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"1", ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "i", ",", "rank"}], "}"}]}], "]"}]}], "]"}],
            "+", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", "i"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"1", ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"i", "+", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
            "]"}], "-", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"rank", "-", "1"}], "->", "1"}], ",", 
               RowBox[{"rank", "->", "1"}]}], "}"}], ",", "rank"}], "]"}]}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"dim", "=", 
          RowBox[{"dim", "*", 
           RowBox[{
            RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
            RowBox[{"(", 
             RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"k1", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", "1"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"k2", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"k2", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "1"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k1", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k1", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"dim", "=", 
             RowBox[{"dim", "*", 
              RowBox[{
               RowBox[{"k2", ".", "metric", ".", "\[Lambda]p\[Delta]"}], "/", 
               
               RowBox[{"(", 
                RowBox[{"k2", ".", "metric", ".", "\[Alpha]"}], ")"}]}]}]}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Return", " ", "function", " ", "with", " ", "analytic", " ", "form", 
        " ", "of", " ", "dimensionality", " ", "formula"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", "arg", "]"}], ",", 
        RowBox[{"Evaluate", "[", "dim", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868463280460181*^9, 3.86846328113372*^9}, {
   3.8684633413117113`*^9, 3.8684633746234007`*^9}, 3.868463426406364*^9, {
   3.868463503915943*^9, 3.868463512016878*^9}, {3.868463901177017*^9, 
   3.868463927323401*^9}, 3.868524285398259*^9, {3.868718943075333*^9, 
   3.868718950662408*^9}, {3.868719258301216*^9, 3.868719312975909*^9}, {
   3.875175185121434*^9, 3.875175187825824*^9}, {3.875339175941289*^9, 
   3.8753391782916193`*^9}, {3.876826898344528*^9, 3.876826911101457*^9}, {
   3.87742023557835*^9, 3.877420236690034*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"cf921a80-9570-4639-936a-85655512dcad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimG2\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimG2", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimG2", "::", "input"}], "=", 
    "\"\<a1,a2: highest weight of G2 representation.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimG2", "::", "output"}], "=", 
   "\"\<Dimension of G2 representation with highest weight {a1,a2}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimG2", "::", "description"}], "=", 
    "\"\<Returns dimenions of G2 representation with highest weight \
{a1,a2}.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimG2", "[", 
   RowBox[{"a1_", ",", "a2_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a1"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   "1080"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868464594207979*^9, 3.868464595029686*^9}, {
   3.868464672353128*^9, 3.868464720548133*^9}, {3.86852072569526*^9, 
   3.868520849334462*^9}, {3.8685209706941013`*^9, 3.868521001291563*^9}, {
   3.868521034594342*^9, 3.8685210443920918`*^9}, 3.868521102090198*^9, {
   3.868521611050416*^9, 3.868521631263281*^9}, 3.868524288612997*^9, {
   3.868716956399959*^9, 3.8687169898470297`*^9}, {3.8687193044690733`*^9, 
   3.86871930471609*^9}, {3.868719563336396*^9, 3.868719571558947*^9}, {
   3.875175190891457*^9, 3.875175196786789*^9}, {3.8753391836612053`*^9, 
   3.8753391879824743`*^9}, {3.876826918860114*^9, 3.8768269993770237`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"3ed33b5e-1204-47e3-874b-db25a2914070"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimE6\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE6", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE6", "::", "input"}], "=", 
    "\"\<a1,a2,a3,a4,a5,a6: highest weight of E6 representation.\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE6", "::", "output"}], "=", 
   "\"\<Dimension of E6 representation with highest weight \
{a1,a2,a3,a4,a5,a6}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE6", "::", "description"}], "=", 
    "\"\<Returns dimenions of E6 representation with highest weight \
{a1,a2,a3,a4,a5,a6}.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimE6", "[", 
   RowBox[{
   "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "a5_", ",", "a6_"}], "]"}],
   ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a1"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a6"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   "23361421521715200000"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868521217702344*^9, 3.86852121931273*^9}, {
   3.868521462925713*^9, 3.8685214965455*^9}, {3.8685236330330877`*^9, 
   3.868523640602613*^9}, {3.868523792011248*^9, 3.8685237925944357`*^9}, 
   3.868524292178547*^9, {3.868716907204253*^9, 3.868716941056094*^9}, {
   3.868719604193384*^9, 3.868719632187393*^9}, {3.875175200256897*^9, 
   3.875175205942636*^9}, {3.875339192893671*^9, 3.875339195402858*^9}, {
   3.876827007782694*^9, 3.876827061110478*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"56c80f2e-e4bd-4ebb-99ec-e8535049626b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimE7\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE7", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE7", "::", "input"}], "=", 
    "\"\<a1,a2,a3,a4,a5,a6,a7: highest weight of E7 representation.\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE7", "::", "output"}], "=", 
   "\"\<Dimension of E7 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE7", "::", "description"}], "=", 
    "\"\<Returns dimenions of E7 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7}.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimE7", "[", 
   RowBox[{
   "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "a5_", ",", "a6_", ",", 
    "a7_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a1"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a4", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a7"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a3", "+", "a4", "+", "a5", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a7"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "7", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"6", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   "19403468278119790545603479218421760000000000"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868523777034725*^9, 3.868523811311413*^9}, 
   3.868524296771516*^9, {3.8687168379601183`*^9, 3.868716869022389*^9}, {
   3.868719671664776*^9, 3.868719690450045*^9}, {3.8751752089677153`*^9, 
   3.8751752120573997`*^9}, {3.875339198020145*^9, 3.8753392005963717`*^9}, {
   3.876827070211483*^9, 3.8768270974259253`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"29957c1e-0566-46fa-a3b5-2dfbf49452ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimE8\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE8", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE8", "::", "input"}], "=", 
    "\"\<a1,a2,a3,a4,a5,a6,a7,a8: highest weight of E8 representation.\>\""}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimE8", "::", "output"}], "=", 
   "\"\<Dimension of E8 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7,a8}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimE8", "::", "description"}], "=", 
    "\"\<Returns dimenions of E8 representation with highest weight \
{a1,a2,a3,a4,a5,a6,a7,a8}.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimE8", "[", 
   RowBox[{
   "a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "a5_", ",", "a6_", ",", 
    "a7_", ",", "a8_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a1"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", "a2", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a4", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a6", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a5", "+", "a6", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a4", "+", "a5", "+", "a6", "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "7", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", "a3", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", "a3", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a3", "+", "a4", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", "a3", "+", "a4", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a8"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a3", "+", "a4", "+", "a5", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a8"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a8"}], 
      ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "7", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"6", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{
      "6", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "7", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", "+", "a7", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
      "8", "+", "a1", "+", "a2", "+", "a3", "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"6", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"7", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"6", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4", "+", "a5", "+", "a6", 
       "+", "a7", "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"6", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7", 
       "+", "a8"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"5", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", "a8"}],
       ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", "a2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", "a8"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", "a5", "+", "a6", "+", "a7", 
       "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"3", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", "a6", "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a1", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", "a7", "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a5"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a6"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a7"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a8"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   "12389761771281087987161913865011039548629176646031786340025309566313679656\
889905840128000000000000000000000"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868523777034725*^9, 3.868523811311413*^9}, {
   3.8685238667906017`*^9, 3.8685238716613092`*^9}, 3.868523928786742*^9, 
   3.8685243002616997`*^9, {3.868716785075304*^9, 3.8687168036269913`*^9}, {
   3.8687168757203503`*^9, 3.868716885707212*^9}, {3.86871971795685*^9, 
   3.8687197427432423`*^9}, {3.875175216026531*^9, 3.875175218913146*^9}, {
   3.875339206413871*^9, 3.875339208875547*^9}, {3.876827106388517*^9, 
   3.876827132027152*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"0195f5a5-e941-4c88-a92d-1e9d831383f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$DimF4\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimF4", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimF4", "::", "input"}], "=", 
    "\"\<a1,a2,a3,a4: highest weight of F4 representation.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DimF4", "::", "output"}], "=", 
   "\"\<Dimension of F4 representation with highest weight \
{a1,a2,a3,a4}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$DimF4", "::", "description"}], "=", 
    "\"\<Returns dimenions of F4 representation with highest weight \
{a1,a2,a3,a4}.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DimF4", "[", 
   RowBox[{"a1_", ",", "a2_", ",", "a3_", ",", "a4_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a1"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a2"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", "a3"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "a3", "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", "a3", "+", "a4"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", "a3", "+", "a4"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", "a4"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"3", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a1"}], ")"}]}], "+", 
       RowBox[{"6", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a2"}], ")"}]}], "+", 
       RowBox[{"4", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a3"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a4"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   "24721080975360000"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868523777034725*^9, 3.868523811311413*^9}, {
   3.8685238667906017`*^9, 3.8685238716613092`*^9}, 3.868523928786742*^9, {
   3.8685240318000402`*^9, 3.868524037030669*^9}, {3.8685241564468946`*^9, 
   3.868524170075028*^9}, 3.86852430425039*^9, {3.868716602235135*^9, 
   3.8687166354562283`*^9}, {3.868716697728777*^9, 3.8687167022262487`*^9}, {
   3.868716894931509*^9, 3.8687168980563602`*^9}, {3.86871977051624*^9, 
   3.868719786300005*^9}, {3.875175222996128*^9, 3.8751752254397783`*^9}, {
   3.875339213521106*^9, 3.875339215856015*^9}, {3.876827140599702*^9, 
   3.876827178298788*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"60974069-4b09-4e4d-ad5d-c32fc29a954d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Order", "Subsection",
 CellChangeTimes->{{3.8790049821505117`*^9, 
  3.879004984009212*^9}},ExpressionUUID->"51740b96-0f76-4148-8650-\
4ce674618d84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Order\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", "\"\<s)A simple Lie algebra.\>\"", ",", 
      "\"\<An integer.\>\"", ",", 
      "\"\<Outputs the dimension of the adjoint irrep.\>\""}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$Order", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "*", 
    RowBox[{"Length", "[", 
     RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}], "]"}]}], "+", 
   RowBox[{"Flocci$Rank", "[", "s", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879005063540559*^9, 3.879005115448532*^9}, {
  3.879005166167747*^9, 3.879005295984708*^9}, {3.879005838548334*^9, 
  3.8790058818425217`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"17331b5f-daba-4eae-a69c-dad9fe2d60c8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynkin Index", "Subsection",
 CellChangeTimes->{{3.879005933969224*^9, 
  3.8790059362165403`*^9}},ExpressionUUID->"19b38509-f36d-4cd4-9517-\
51c32b953042"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$DynkinIndex\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<s)A simple Lie algebra.\\n \[Lambda]) The highest weight of an \
irrep \>\"", ",", "\"\<An integer.\>\"", ",", 
      "\"\<Outputs the dimension of the adjoint irrep.\>\""}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DynkinIndex", "[", 
    RowBox[{"s_", ",", "\[Lambda]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]2", ",", "dim\[Lambda]", ",", "ord"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dim\[Lambda]", "=", 
       RowBox[{"Flocci$Dim", "[", 
        RowBox[{"s", ",", "\[Lambda]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"ord", "=", 
       RowBox[{"Flocci$Order", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       FractionBox["dim\[Lambda]", 
        RowBox[{"2", " ", "ord"}]], 
       RowBox[{
        RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"\[Lambda]", "+", "\[Rho]2"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879005946938488*^9, 3.879005958424921*^9}, {
  3.8790060970784473`*^9, 3.8790060974786253`*^9}, {3.8790061301687117`*^9, 
  3.87900632307376*^9}, {3.879006558384925*^9, 3.8790065595154343`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"4b69c260-beaf-4606-9bd3-24d6757c9d44"]
}, Closed]],

Cell[CellGroupData[{

Cell["Weight systems", "Subsection",
 CellChangeTimes->{{3.868713503490436*^9, 
  3.868713505986095*^9}},ExpressionUUID->"642d4566-4e2d-46c5-951e-\
831bc711e192"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"NOTE", ":", " ", 
    RowBox[{
    "some", " ", "functions", " ", "in", " ", "this", " ", "section", " ", 
     "are", " ", "modifications", " ", "of", " ", "LieART", " ", 
     "functions"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Flocci$InverseTransposeCartanMatrix\>\"", ",", 
       "\"\<Flocci$SingleDominantWeightSystem\>\"", ",", 
       "\"\<Flocci$XisAndMul\>\"", ",", "\"\<Flocci$PartialOrbit\>\"", ",", 
       "\"\<Flocci$Reflect\>\"", ",", 
       "\"\<Flocci$ReflectToDominantWeight\>\"", ",", 
       "\"\<Flocci$DominantWeightMultiplicities\>\"", ",", 
       "\"\<Flocci$WeightSystem\>\"", ",", 
       "\"\<Flocci$WeightSystemFromFlat\>\"", ",", 
       "\"\<Flocci$WeightSystemSorted\>\""}], "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$SingleDominantWeightSystem", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$XisAndMul", "::", "tag"}], "=", "\"\<Weights\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$PartialOrbit", "::", "tag"}], "=", "\"\<Weights\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$Reflect", "::", "tag"}], "=", "\"\<Weights\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ReflectToDominantWeight", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$DominantWeightMultiplicities", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "::", "tag"}], "=", "\"\<Weights\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlat", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "::", "output"}], "=", 
     "\"\<Inversed, transposed Cartan matrix\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "::", "description"}], 
     "=", "\"\<Inversed, transposed Cartan matrix\>\""}], ";", 
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "::", "clear"}], "=", 
     "\"\<3\>\""}], ";", 
    RowBox[{
     RowBox[{"Flocci$InverseTransposeCartanMatrix", "[", "g_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Flocci$InverseTransposeCartanMatrix", "[", "g", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$CartanMatrix", "[", "g", "]"}], "//", "Transpose"}], "//",
        "Inverse"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$SingleDominantWeightSystem", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\nhw: a highest weight, e.g. \
{1,0,0,0}\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$SingleDominantWeightSystem", "::", "output"}], "=", 
     "\"\<The dominant weight system without multiplicities, for the highest \
weight of a simple Lie algebra\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$SingleDominantWeightSystem", "::", "description"}], "=", 
     "\"\<Works by recursively subtracting positive roots from the highest \
weight, deleting duplicates\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$SingleDominantWeightSystem", "[", 
      RowBox[{"g_", ",", "hw_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"prev", ",", "curr"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"prev", ",", "curr"}], "]"}], ",", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"weight", ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"weight", "-", "#"}], ")"}], "&"}], "/@", 
                    RowBox[{"Flocci$PositiveRoots", "[", "g", "]"}]}], ",", 
                    " ", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"#", ",", "NonNegative"}], "]"}], "&"}]}], 
                    "]"}]}], "]"}], "/@", "curr"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"from", " ", "each", " ", "new", " ", "weight"}], 
                    ",", " ", 
                    RowBox[{
                    "subtract", " ", "all", " ", "positive", " ", "roots"}], 
                    ",", " ", 
                    RowBox[{
                    "keep", " ", "only", " ", "if", " ", "dominant"}]}], 
                    "*)"}], "\[IndentingNewLine]", "1"}], "]"}], ",", "prev", 
                  ",", "curr"}], "]"}], "]"}]}], 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"delete", " ", "if", " ", "alread", " ", "produced"}],
                 ",", " ", 
                RowBox[{
                "then", " ", "delete", " ", "duplicates", " ", "within", " ", 
                 "new", " ", "list"}]}], "*)"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], "//", "Apply"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "hw", "}"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], "&"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Flocci$InverseTransposeCartanMatrix", "[", "g", "]"}], 
           ".", "#"}], "]"}]}], "&"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"produce", " ", "weights"}], ",", " ", 
     RowBox[{"ordered", " ", "by", " ", "level"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$XisAndMul", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\nt: vector of positions specifying \
a partial orbit\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$XisAndMul", "::", "output"}], "=", 
     "\"\<List of pairs of the form {partial orbit representative, orbit size \
factor}\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$XisAndMul", "::", "description"}], "=", 
     "\"\<Modified from a LieART function\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$XisAndMul", "[", 
      RowBox[{"g_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"xi", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"xi", ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flocci$MetricTensor", "[", "g", "]"}], ".", 
                   "xi"}], ",", " ", 
                  RowBox[{"_", "?", "Positive"}]}], "]"}], ",", " ", "t"}], 
               "]"}], "==", 
              RowBox[{"{", "}"}]}], ",", " ", "1", ",", " ", "2"}], "]"}], 
           " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Flocci$PartialOrbit", "[", 
             RowBox[{"g", ",", "xi", ",", " ", 
              RowBox[{"Extract", "[", 
               RowBox[{
                RowBox[{"Flocci$CartanMatrix", "[", "g", "]"}], ",", " ", 
                "t"}], "]"}]}], "]"}], "]"}]}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], " ", "/@", " ", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Flocci$PositiveRoots", "[", "g", "]"}], ",", 
        RowBox[{
         RowBox[{"AllTrue", "[", 
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"#", ",", " ", "t"}], "]"}], ",", "NonNegative"}], "]"}], 
         "&"}]}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"returns", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
     RowBox[{"pair", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"partial", " ", "orbit", " ", "representative"}], ",", 
        RowBox[{"orbit", " ", "size", " ", "factor"}]}], "}"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$PartialOrbit", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\nweight: a weight\\nsimpleRoots: a \
subset of the simple roots of g\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$PartialOrbit", "::", "output"}], "=", 
     "\"\<A list of weights\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$PartialOrbit", "::", "description"}], "=", 
     "\"\<Finds the orbit of a weight generated by a set of simple roots. \
Reflects recursively.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$PartialOrbit", "[", 
      RowBox[{"g_", ",", "weight_", ",", " ", "simpleRoots_"}], "]"}], " ", ":=",
      "\n", "        ", 
     RowBox[{
      RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"prev", ",", "curr"}], "}"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"prev", ",", "curr"}], "]"}], ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Outer", "[", 
                   RowBox[{
                    RowBox[{"Flocci$Reflect", "[", "g", "]"}], ",", "curr", 
                    ",", "simpleRoots", ",", "1"}], "]"}], ",", "1"}], "]"}], 
                ",", "prev", ",", "curr"}], "]"}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], "//", "Apply"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "weight", "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "orbits", " ", "the", " ", "weight", " ", "using", " ", "only", " ", 
      "the", " ", "given", " ", "simple", " ", "roots"}], ",", " ", 
     RowBox[{
     "recursively", " ", "reflecting", " ", "only", " ", "those", " ", 
      "weights", " ", "that", " ", "have", " ", "not", " ", "yet", " ", 
      "been", " ", "reflected", " ", 
      RowBox[{"(", 
       RowBox[{"for", " ", "efficiency"}], ")"}]}], ",", " ", 
     RowBox[{"and", " ", "deleting", " ", 
      RowBox[{"duplicates", "/", "those"}], " ", "weights", " ", "already", 
      " ", "produced"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$Reflect", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\nweight: a weight\\nroot: a root of \
g\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$Reflect", "::", "output"}], "=", "\"\<A weight\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$Reflect", "::", "description"}], "=", 
     "\"\<Reflects the weight about the root\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flocci$Reflect", "[", "g_", "]"}], "[", 
      RowBox[{"weight_", ",", "root_"}], "]"}], ":=", 
     RowBox[{"weight", " ", "-", " ", 
      RowBox[{"2", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$ScalarProduct", "[", "g", "]"}], "[", 
         RowBox[{"weight", ",", " ", "root"}], "]"}], "/", 
        RowBox[{
         RowBox[{"Flocci$ScalarProduct", "[", "g", "]"}], "[", 
         RowBox[{"root", ",", " ", "root"}], "]"}]}], " ", "root"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ReflectToDominantWeight", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\nweight: a weight\>\""}], ";"}], 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ReflectToDominantWeight", "::", "output"}], "=", 
     "\"\<A dominant weight\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ReflectToDominantWeight", "::", "description"}], "=", 
     "\"\<Recursively reflect about simple roots until a dominant weight is \
obtained\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ReflectToDominantWeight", "[", 
      RowBox[{"g_", ",", "weight_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$Reflect", "[", "g", "]"}], "[", 
         RowBox[{"#", ",", 
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"Flocci$CartanMatrix", "[", "g", "]"}], ",", 
            RowBox[{"FirstPosition", "[", 
             RowBox[{"#", ",", 
              RowBox[{"_", "?", "Negative"}]}], "]"}]}], "]"}]}], "]"}], 
        "&"}], ",", "\[IndentingNewLine]", "weight", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"#", ",", "NonNegative"}], "]"}]}], "&"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "recursively", " ", "choose", " ", "simple", " ", "root", " ", "used", 
     " ", "to", " ", "reflect", " ", "weight", " ", "by", " ", "looking", " ",
      "for", " ", "first", " ", "negative", " ", "coordinate", " ", "of", " ",
      "weight"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$DominantWeightMultiplicities", "::", "input"}], "=", 
     "\"\<g: simple Lie algebra, e.g. A4\\ndominantWeights: list of dominant \
weights\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$DominantWeightMultiplicities", "::", "output"}], "=", 
     "\"\<a list of pairs {dominant weight, multiplicity}\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$DominantWeightMultiplicities", "::", "description"}], 
     "=", "\"\<Modified from a LieART function. See the Modified \
Freundenthal's formula in Graaf Lie Algebras Theory and Algorithms for \
description.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$DominantWeightMultiplicities", "[", 
      RowBox[{"g_", ",", "dominantWeights_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "delta", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"delta", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Fold", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"prevWithMult", ",", "curr"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Append", "[", 
             RowBox[{"prevWithMult", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"curr", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{
                   RowBox[{"Apply", "[", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"root", ",", "mul"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mul", " ", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$ScalarProduct", "[", "g", "]"}], "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "root"}], "]"}], 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                    RowBox[{
                    RowBox[{"NestWhileList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "root"}], ")"}], ",", 
                    RowBox[{"FirstCase", "[", 
                    RowBox[{"prevWithMult", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Flocci$ReflectToDominantWeight", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "root"}]}], "]"}], 
                    ",", "xx_"}], "}"}], ":>", "xx"}], ",", "0"}], "]"}]}], 
                    "}"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"curr", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "!=", "0"}], ")"}], 
                    "&"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "]"}], "/@", 
                   RowBox[{"Flocci$XisAndMul", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{"curr", ",", "0"}], "]"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flocci$ScalarProduct", "[", "g", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dominantWeights", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "delta"}], ",", 
                    RowBox[{
                    RowBox[{"dominantWeights", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "delta"}]}], "]"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"Flocci$ScalarProduct", "[", "g", "]"}], "[", 
                    RowBox[{
                    RowBox[{"curr", "+", "delta"}], ",", " ", 
                    RowBox[{"curr", "+", "delta"}]}], "]"}]}], ")"}]}]}], 
               "}"}]}], 
             RowBox[{"(*", 
              RowBox[{"see", " ", "the", " ", "modified", " ", 
               RowBox[{"Freundenthal", "'"}], "s", " ", "formula", " ", "in", 
               " ", "Graaf"}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"dominantWeights", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "}"}], "}"}], ",", 
          RowBox[{"dominantWeights", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "create", " ", "list", " ", "by", " ", "folding", " ", "dominant", " ",
         "weight", " ", "into", " ", "growing", " ", "list", " ", "of", " ", 
        "weights", " ", "with", " ", "mult"}], "*)"}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "produce", " ", "the", " ", "list", " ", "of", " ", "pairs", " ", 
     RowBox[{"{", 
      RowBox[{"domWeight", ",", " ", "multiplicity"}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "::", "input"}], "=", 
     "\"\<g: simple or semi-simple Lie algebra\\nhw/hws: a highest weight or \
a list of them if semi-simple\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "::", "output"}], "=", 
     "\"\<A list of weights, in general with duplicates\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "::", "description"}], "=", 
     "\"\<Produces the full weight system of a Lie algebra. First by \
producing the dominant weight system without multiplicities, then calculating \
multiplicities, and finally reflecting to produce the whole weight \
system.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "::", "clear"}], "=", "\"\<4\>\""}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "[", 
      RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Flocci$WeightSystem", "[", 
       RowBox[{"g", ",", "hw"}], "]"}], "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"domWeight", ",", "mult"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"Flocci$PartialOrbit", "[", 
                 RowBox[{"g", ",", "domWeight", ",", 
                  RowBox[{"Flocci$CartanMatrix", "[", "g", "]"}]}], "]"}], 
                ",", "mult"}], "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], "/@", 
           RowBox[{"Flocci$DominantWeightMultiplicities", "[", 
            RowBox[{"g", ",", 
             RowBox[{"Flocci$SingleDominantWeightSystem", "[", 
              RowBox[{"g", ",", "hw"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", "2"}], "]"}], " ", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"Flocci$InverseTransposeCartanMatrix", "[", "g", "]"}], 
            ".", "#"}], "]"}]}], "&"}]}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"produce", " ", "list", " ", "of", " ", "weights"}], ",", " ", 
     RowBox[{"in", " ", "general", " ", "with", " ", "duplicates"}]}], "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystem", "[", 
      RowBox[{"g_List", ",", "hws_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], "==", "1"}], ",", 
       RowBox[{"Flocci$WeightSystem", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"hws", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "Join", "}"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Flocci$WeightSystem", ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "hws"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "g", "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "takes", " ", "list", " ", "of", " ", "simple", " ", "algebras", " ", 
     "and", " ", "list", " ", "of", " ", "each", " ", "hw"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlat", "::", "input"}], "=", 
     "\"\<g: semi-simple Lie algebra, e.g. {A4,A1}\\nhw: a single semi-simple \
highest weight (with commensurate ordering), e.g. {1,0,0,0,1}\>\""}], ";"}], 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlat", "::", "output"}], "=", 
     "\"\<A list of weights, in general with duplicates\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlat", "::", "description"}], "=", 
     "\"\<Produces the full weight system of a Lie algebra. First by \
producing the dominant weight system without multiplicities, then calculating \
multiplicities, and finally reflecting to produce the whole weight \
system.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlat", "[", 
      RowBox[{"g_List", ",", "hw_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], "==", "1"}], ",", 
       RowBox[{"Flocci$WeightSystem", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "hw"}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "Join", "}"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Flocci$WeightSystem", ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", 
                RowBox[{"TakeList", "[", 
                 RowBox[{"hw", ",", 
                  RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "g", "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "takes", " ", "list", " ", "of", " ", "simple", " ", "algebras", " ", 
     "and", " ", "a", " ", "single", " ", "semisimple", " ", "hw"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Flocci$SemiSimpleWeightSystem", "[", 
       RowBox[{"g_", ",", "hws_"}], "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "Join", "}"}], ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Flocci$WeightSystem", ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", "hws"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
         "The", " ", "below", " ", "takes", " ", "in", " ", "a", " ", 
          "semi"}], "-", 
         RowBox[{"simple", " ", "g"}]}], ",", " ", 
        RowBox[{"and", " ", "a", " ", "single", " ", "hw"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$FlatSemiSimpleWeightSystem", "[", 
       RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "Join", "}"}], ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Flocci$WeightSystem", ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", 
               RowBox[{"TakeList", "[", 
                RowBox[{"hw", ",", 
                 RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ",", "1"}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"takes", " ", "flattened", " ", "semisimple", " ", "hw"}], 
     "*)"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"weightSystemSemiIR2", "[", 
       RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"weightSystemSemiIR2", "[", 
        RowBox[{"g", ",", "hw"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Flocci$FlatSemiSimpleWeightSystem", "[", 
         RowBox[{"g", ",", "hw"}], "]"}], "//", "Sort"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"weightSystemSimpleIR2", "[", 
       RowBox[{"g_", ",", "irrep_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"weightSystemSimpleIR2", "[", 
        RowBox[{"g", ",", "irrep"}], "]"}], "=", 
       RowBox[{
        RowBox[{"List", "@@@", 
         RowBox[{"WeightSystem", "[", 
          RowBox[{
           RowBox[{"Irrep", "[", 
            RowBox[{"AlgebraClass", "[", "g", "]"}], "]"}], "@@", "irrep"}], 
          "]"}]}], "//", "Sort"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"weightSystemSemiIR2", "[", 
       RowBox[{"g_", ",", "irrep_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"weightSystemSemiIR2", "[", 
        RowBox[{"g", ",", "irrep"}], "]"}], "=", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"weightSystemSimpleIR2", ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", 
               RowBox[{"TakeList", "[", 
                RowBox[{"irrep", ",", 
                 RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "}"}]}], 
            "]"}], "//", "Tuples"}], "//", "Sort"}], ")"}]}]}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "::", "input"}], "=", 
     "\"\<g: semi-simple Lie algebra\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "::", "output"}], "=", 
     "\"\<A weight system\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "::", "description"}], "=", 
     "\"\<Sorts the weight system produced by \
Flocci$WeightSystemFromFlat\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "::", "clear"}], "=", "\"\<3\>\""}],
     ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemSorted", "[", 
      RowBox[{"g_", ",", "irrep_"}], "]"}], ":=", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Flocci$WeightSystemSorted", "[", 
        RowBox[{"g", ",", "irrep"}], "]"}], "="}], "*)"}], 
     RowBox[{
      RowBox[{"Flocci$WeightSystemFromFlat", "[", 
       RowBox[{"g", ",", "irrep"}], "]"}], "//", "Sort"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870537554989893*^9, 3.8705375683931637`*^9}, {
   3.870539075383666*^9, 3.8705390778611813`*^9}, {3.870539240986823*^9, 
   3.870539244869741*^9}, {3.870539281909836*^9, 3.870539291511016*^9}, {
   3.870539714070022*^9, 3.8705397146854897`*^9}, 3.870780187736422*^9, {
   3.8707802320152693`*^9, 3.8707802327276983`*^9}, {3.870780321382205*^9, 
   3.870780340008992*^9}, {3.870780407300644*^9, 3.8707804407146997`*^9}, {
   3.870780474136999*^9, 3.8707805291924*^9}, {3.8707813334927588`*^9, 
   3.870781360605976*^9}, {3.870781448650486*^9, 3.8707816108555326`*^9}, {
   3.8707817595350847`*^9, 3.8707817734128313`*^9}, {3.8707818630823*^9, 
   3.870781938702368*^9}, {3.8707821093302927`*^9, 3.870782173100424*^9}, {
   3.870782239829413*^9, 3.870782326635491*^9}, {3.8707824110374393`*^9, 
   3.870782415778013*^9}, {3.870782467117343*^9, 3.870782470010578*^9}, {
   3.870782523953763*^9, 3.870782564167478*^9}, {3.870783023071478*^9, 
   3.870783051137395*^9}, {3.870783339003648*^9, 3.870783367360125*^9}, {
   3.8707833983719683`*^9, 3.870783417520789*^9}, 3.870783475953248*^9, {
   3.870783534489037*^9, 3.870783598825227*^9}, {3.870783964724206*^9, 
   3.8707839647677593`*^9}, {3.8707843757492037`*^9, 
   3.8707843941763363`*^9}, {3.8707844586463823`*^9, 3.870784458716508*^9}, {
   3.8707852798039837`*^9, 3.8707853027204723`*^9}, {3.8707857887314243`*^9, 
   3.870785931627396*^9}, {3.870786028388801*^9, 3.8707860440514193`*^9}, {
   3.8707861197552843`*^9, 3.870786121776532*^9}, {3.870786205274819*^9, 
   3.87078628992041*^9}, {3.870786679487509*^9, 3.8707866947433577`*^9}, {
   3.8707867352678423`*^9, 3.870786872139525*^9}, {3.8707880739337883`*^9, 
   3.870788220181888*^9}, {3.8707882775738773`*^9, 3.870788310895926*^9}, {
   3.8707890493002157`*^9, 3.870789052109915*^9}, {3.87078923743292*^9, 
   3.8707892398490877`*^9}, {3.870789270974143*^9, 3.870789289265663*^9}, {
   3.8707893664337463`*^9, 3.870789394506625*^9}, {3.870789440349908*^9, 
   3.870789461509946*^9}, {3.8707894928080463`*^9, 3.870789541344963*^9}, {
   3.870789964460566*^9, 3.870789991745521*^9}, {3.870790080669178*^9, 
   3.870790138467763*^9}, {3.8708614150968113`*^9, 3.870861416829197*^9}, {
   3.870861501561636*^9, 3.8708616537181063`*^9}, {3.8708619105900393`*^9, 
   3.870861949051127*^9}, {3.870862132637106*^9, 3.870862230532762*^9}, {
   3.870862263259691*^9, 3.870862269177929*^9}, {3.87086242453268*^9, 
   3.870862472824997*^9}, {3.870862566278246*^9, 3.870862571918355*^9}, {
   3.870862649033087*^9, 3.8708626622005167`*^9}, {3.870867173246791*^9, 
   3.8708671966936817`*^9}, {3.870867234541915*^9, 3.870867258475484*^9}, {
   3.8708674047098923`*^9, 3.870867443855782*^9}, {3.870867502068364*^9, 
   3.87086757089287*^9}, {3.870867609518992*^9, 3.870867662582368*^9}, {
   3.870867816055933*^9, 3.8708678429195833`*^9}, {3.870945224732915*^9, 
   3.870945303070318*^9}, {3.870945400622396*^9, 3.8709454017077217`*^9}, {
   3.8709455518198433`*^9, 3.870945576945498*^9}, {3.870945879808565*^9, 
   3.870945882898333*^9}, {3.870946039441003*^9, 3.870946067464508*^9}, {
   3.8709463969937057`*^9, 3.870946452516438*^9}, {3.870946544292993*^9, 
   3.870946610543466*^9}, {3.87094754627645*^9, 3.870947805696106*^9}, {
   3.870947935313581*^9, 3.870947964892398*^9}, {3.870948400528184*^9, 
   3.8709484936833067`*^9}, {3.870948555949119*^9, 3.870948837192872*^9}, {
   3.870948877892975*^9, 3.870948880664212*^9}, {3.870948930208426*^9, 
   3.870949009669622*^9}, {3.870949262600955*^9, 3.870949265340843*^9}, {
   3.871133476674662*^9, 3.871133579513462*^9}, {3.871133610530404*^9, 
   3.871133617514666*^9}, {3.871133671941083*^9, 3.871133687518248*^9}, {
   3.871133720041503*^9, 3.871133726185966*^9}, {3.871133915755199*^9, 
   3.871133918094838*^9}, {3.8711342397779217`*^9, 3.8711342441318493`*^9}, {
   3.871134456625739*^9, 3.87113445799833*^9}, {3.871468324010355*^9, 
   3.871468324452242*^9}, {3.871469418685976*^9, 3.8714694319891*^9}, {
   3.8714742918509817`*^9, 3.871474295788968*^9}, {3.871474338091629*^9, 
   3.871474485257965*^9}, {3.871474543341345*^9, 3.8714745504912367`*^9}, {
   3.871474920605505*^9, 3.871475007293874*^9}, {3.871475053377368*^9, 
   3.871475057218545*^9}, {3.87147509920089*^9, 3.871475187073948*^9}, {
   3.87147528076672*^9, 3.871475281423873*^9}, {3.8714753189863653`*^9, 
   3.871475325757597*^9}, {3.87147557937638*^9, 3.871475623971427*^9}, {
   3.8714756635115013`*^9, 3.871475753751137*^9}, {3.871475847641803*^9, 
   3.8714758517312*^9}, {3.8714759514797783`*^9, 3.871476001349978*^9}, {
   3.8714760316745653`*^9, 3.871476040825993*^9}, {3.8714762527509613`*^9, 
   3.8714763153411903`*^9}, {3.871476488055573*^9, 3.871476513507277*^9}, {
   3.8714766635751543`*^9, 3.871476743256302*^9}, {3.871476781922868*^9, 
   3.8714768209253693`*^9}, {3.8714797163784637`*^9, 3.871479740371256*^9}, {
   3.871480130186406*^9, 3.8714801530818987`*^9}, 3.871635614293157*^9, {
   3.871635727876255*^9, 3.8716357305403767`*^9}, {3.873961152150285*^9, 
   3.873961178754444*^9}, 3.8739612375459337`*^9, {3.87396129278723*^9, 
   3.873961383805587*^9}, {3.8739615052512417`*^9, 3.873961525817979*^9}, {
   3.8739699669792147`*^9, 3.8739699727803926`*^9}, {3.873970154478182*^9, 
   3.873970158094028*^9}, {3.873971114001746*^9, 3.8739711526728086`*^9}, {
   3.8739712606871643`*^9, 3.873971316778981*^9}, 3.873971390234316*^9, {
   3.873971525474167*^9, 3.873971591543289*^9}, {3.873971663902125*^9, 
   3.873971670801194*^9}, 3.8739725423427143`*^9, {3.87517526056148*^9, 
   3.8751753409653053`*^9}, {3.87533922343783*^9, 3.87533928213619*^9}, {
   3.876920930482573*^9, 3.876921269726099*^9}, {3.8769214092465887`*^9, 
   3.876921419249552*^9}, {3.876921464536515*^9, 3.876922160482994*^9}, {
   3.876922202761118*^9, 3.876922228313932*^9}, {3.876922272962574*^9, 
   3.876922546609007*^9}, {3.876922579108712*^9, 3.87692273826729*^9}, {
   3.8769227999533157`*^9, 3.8769228108019533`*^9}, {3.87692285943093*^9, 
   3.8769229431906223`*^9}, {3.8769249350449057`*^9, 3.876924988044601*^9}, {
   3.877421075521131*^9, 3.87742110307815*^9}, {3.8774213606814747`*^9, 
   3.877421388503742*^9}, 3.8799509868398323`*^9, 3.879951156207677*^9, {
   3.879951253470169*^9, 3.879951259224145*^9}, {3.879951434496179*^9, 
   3.879951437630721*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"11ccc61c-45d5-4257-9dc3-47e0e73aefbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   StyleBox[
    RowBox[{
    "We", " ", "make", " ", "some", " ", "weight", " ", "system", " ", 
     "functions", " ", "that", " ", "utilize", " ", "the", " ", "u", 
     RowBox[{
      RowBox[{"(", "1", ")"}], "'"}], "s"}],
    FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemU1", "::", "tag"}], "=", "\"\<Weights\>\""}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "::", "tag"}], "=", 
     "\"\<Weights\>\""}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemU1", "::", "input"}], "=", 
     "\"\<g: simple or semi-simple Lie algebra OR U1\\nhw: a highest weight \
or a list of them if semi-simple\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemU1", "::", "output"}], "=", 
     "\"\<A list of weights, in general with duplicates\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemU1", "::", "description"}], "=", 
     "\"\<Returns highest weight if U1, otherwise call \
Flocci$WeightSystem\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemU1", "[", 
      RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"g", "===", "U1"}], ",", 
       RowBox[{"{", "hw", "}"}], ",", 
       RowBox[{"Flocci$WeightSystem", "[", 
        RowBox[{"g", ",", "hw"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "::", "input"}], "=", 
     "\"\<g: list of algebras, can accommodate U1 factors\\nhw: a flattened \
highest weight\>\""}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "::", "output"}], "=", 
     "\"\<A list of weights, in general with duplicates\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "::", "description"}], "=", 
     "\"\<See Flocci$WeightSystemFromFlat and Flocci$WeightSystemU1\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "[", 
      RowBox[{"g_List", ",", "hw_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], "==", "1"}], ",", 
       RowBox[{"Flocci$WeightSystemU1", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "hw"}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "Join", "}"}], ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Flocci$WeightSystemU1", ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", 
                RowBox[{"TakeList", "[", 
                 RowBox[{"hw", ",", 
                  RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "g", "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875606263634701*^9, 3.875606284130762*^9}, {
  3.876920827619734*^9, 3.876920827855608*^9}, {3.876923110025135*^9, 
  3.8769231239424467`*^9}, {3.876923212927697*^9, 3.8769232851340017`*^9}, {
  3.876923332978488*^9, 3.876923486379527*^9}, {3.876923522294979*^9, 
  3.876923524099061*^9}, {3.876924998233457*^9, 3.876925002221518*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"a2827852-2cfa-4900-b947-d7065169ba6e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Extract dominant weights", "Subsection",
 CellChangeTimes->{{3.875597155393153*^9, 
  3.875597159324773*^9}},ExpressionUUID->"0a46cd34-8643-4ce4-84f9-\
f41814186f3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ExtractDominantWeights\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", "\"\<list) An integer 2-tensor.\>\"", ",", 
      "\"\<An integer 2-tensor\>\"", ",", 
      "\"\<Outputs the rows of list which have non-negative entries.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ExtractDominantWeights", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"list", ",", "_Integer", ",", "2"}], "}"}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "bool", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bool", "=", "True"}], ";", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"p", "<", "0"}], ",", 
                 RowBox[{
                  RowBox[{"bool", "=", "False"}], ";", 
                  RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "#"}], "}"}]}], "]"}], ";", " ", "bool"}], 
            ")"}], "&"}]}], "]"}], "//", "Sort"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompilePrint", "[", "Flocci$ExtractDominantWeights", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875597204112355*^9, 3.875597234112288*^9}, 
   3.8755972691479588`*^9, 3.875597356558014*^9, {3.879322779166987*^9, 
   3.8793228555656233`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"89b6241c-0273-4f46-95e4-f63321cc4697"]
}, Closed]],

Cell[CellGroupData[{

Cell["Extract highest weights", "Subsection",
 CellChangeTimes->{{3.874663089372118*^9, 3.874663096536169*^9}, {
  3.875597161221225*^9, 
  3.875597162473201*^9}},ExpressionUUID->"a4d244f7-3d42-44b8-b5c4-\
d771388eec29"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$WeightSystemU1\>\"", ",", 
     "\"\<Flocci$WeightSystemFromFlatU1\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ExtractHighestWeights\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<g) A reductive Lie algebra (with U1's at the end).\\n \
\[CapitalPhi]t) A integer 2-tensor of weights.\>\"", ",", 
      "\"\<False or an Integer 2-tensor of highest weights\>\"", ",", 
      "\"\<If \[CapitalPhi]t is a valid weight system of g, then it outputs \
the highest weights. Else outputs False.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ExtractHighestWeights", "[", 
   RowBox[{"g_", ",", "\[CapitalPhi]t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Delta]", ",", "\[Delta]CP", ",", "\[CapitalPhi]sort", ",", "hw", ",", 
      "\[CapitalPhi]hw", ",", "pos", ",", "hwlist", ",", "noU1s"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "count", " ", "the", " ", "number", " ", "of", " ", "U", 
       RowBox[{
        RowBox[{"(", "1", ")"}], "'"}], "s", " ", "assumed", " ", "the", " ", 
       "be", " ", "at", " ", "the", " ", 
       RowBox[{"end", "."}]}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"noU1s", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"g", ",", "U1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "Firstly", " ", "we", " ", "find", " ", "the", " ", "weight", " ", 
         "\[Delta]"}], ",", " ", 
        RowBox[{
         RowBox[{
         "and", " ", "a", " ", "normalized", " ", "version", " ", "there"}], 
         "-", 
         RowBox[{"of", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"s", "===", "U1"}], ",", "Nothing", ",", 
           RowBox[{
            RowBox[{"Flocci$MetricTensor", "[", "s", "]"}], ".", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "g"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]CP", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"\[Delta]", "/", 
         RowBox[{"GCD", "@@", "\[Delta]"}]}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "noU1s"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "sort", " ", "\[CapitalPhi]", " ", "based", " ", "on", " ", 
        "the", " ", "projection"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPhi]sort", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{"\[CapitalPhi]t", ",", 
        RowBox[{
         RowBox[{"#", ".", "\[Delta]CP"}], " ", "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hwlist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "\[CapitalPhi]sort", "]"}], "\[NotEqual]", " ",
         "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hw", "=", 
         RowBox[{"\[CapitalPhi]sort", "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"AnyTrue", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"hw", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "noU1s"}]}], "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "<", "0"}], " ", "&"}]}], "]"}], ",", 
          RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"hwlist", ",", "hw"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalPhi]hw", "=", 
         RowBox[{"Flocci$WeightSystemFromFlatU1", "[", 
          RowBox[{"g", ",", "hw"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"\[CapitalPhi]sort", ",", "wi"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[CapitalPhi]sort", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"\[CapitalPhi]sort", ",", 
              RowBox[{
              "pos", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
              "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"wi", ",", "\[CapitalPhi]hw"}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "hwlist"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ExtractHighestWeights", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A2", ",", "U1"}], "}"}], ",", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Flocci$WeightSystemFromFlatU1", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A2", ",", "U1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Flocci$WeightSystemFromFlatU1", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A2", ",", "U1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", 
         RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ExtractHighestWeights", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A2", ",", "U1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.874659878845771*^9, 3.874660028679966*^9}, {
   3.87466042069597*^9, 3.874660475100751*^9}, {3.874660583353675*^9, 
   3.874660702035116*^9}, {3.8746608033028393`*^9, 3.874660837678095*^9}, {
   3.874660895352871*^9, 3.8746609626529713`*^9}, {3.8746610548552303`*^9, 
   3.8746610629745607`*^9}, {3.8746614220915823`*^9, 
   3.8746614327513866`*^9}, {3.874662369820313*^9, 3.874662472439467*^9}, {
   3.874662528835154*^9, 3.874662560036528*^9}, {3.8746627607001266`*^9, 
   3.874662992901479*^9}, 3.874663100668577*^9, {3.87517763070182*^9, 
   3.875177658157795*^9}, {3.875339702905994*^9, 3.87533972165558*^9}, {
   3.8756037670997047`*^9, 3.875603768049697*^9}, {3.875606244255072*^9, 
   3.875606261085307*^9}, 3.8756063266125097`*^9, {3.879322887623418*^9, 
   3.87932299821101*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"10ce7351-a611-4e60-8f6a-1518ea66ba7f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", 
      RowBox[{"-", "4"}]},
     {"1", "0", 
      RowBox[{"-", "3"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.874663106563449*^9, 3.874718797938469*^9, 3.874735085989316*^9, 
   3.874995639020277*^9, 3.8750054496411867`*^9, 3.8750217998189373`*^9, 
   3.875086316997834*^9, 3.87508655751416*^9, 3.875086605459041*^9, 
   3.87508678327288*^9, 3.8751740351797743`*^9, 3.875177658585863*^9, 
   3.875177771800033*^9, 3.875178604700616*^9, 3.8752018852176533`*^9, 
   3.875249931879387*^9, 3.875339869803363*^9, 3.875341014631186*^9, 
   3.875595452625146*^9, 3.87559612400102*^9, 3.875597681352248*^9, 
   3.875598028370263*^9, 3.875600749316855*^9, 3.875601978329033*^9, 
   3.8756025869158363`*^9, 3.875603211625257*^9, 3.875604018356756*^9, 
   3.875604914448359*^9, 3.875606499517909*^9, 3.87560696916459*^9, 
   3.875608441686026*^9, 3.875609703914439*^9, 3.87561077351455*^9, 
   3.875681936211383*^9, 3.875683833234079*^9, 3.8756871255993834`*^9, 
   3.875687253076803*^9, 3.875687320943564*^9, 3.8756876154130373`*^9, 
   3.875771338879829*^9, 3.8758559052710447`*^9, 3.876488646257133*^9, 
   3.8765814916532707`*^9, 3.876582123904619*^9, 3.876583099289464*^9, 
   3.876583184794742*^9, 3.876644480118945*^9, 3.876819381962914*^9, 
   3.8768203740055733`*^9, 3.8768244458325853`*^9, 3.876827646993382*^9, 
   3.876926376213563*^9, 3.87692679843608*^9, 3.876929088409779*^9, 
   3.876997260819194*^9, 3.876997764669134*^9, 3.876998016021131*^9, 
   3.876998372012436*^9, 3.876998549034421*^9, 3.876999661136179*^9, 
   3.876999843341916*^9, 3.8770138862154207`*^9, 3.877069626924157*^9, 
   3.877069716943881*^9, 3.877070847783865*^9, 3.877071569259109*^9, 
   3.87707375945772*^9, 3.877078215419519*^9, 3.877079311339836*^9, 
   3.877096809882823*^9, 3.877097579479024*^9, 3.877154495126742*^9, 
   3.877156557414631*^9, 3.8774140649537477`*^9, 3.87741541460639*^9, 
   3.877415690779359*^9, 3.8774160158605433`*^9, 3.877417818024333*^9, 
   3.8774180880265408`*^9, 3.877420421503314*^9, 3.877420815323842*^9, 
   3.877421142592966*^9, 3.877421463033239*^9, 3.877767943536602*^9, 
   3.8777680534942427`*^9, 3.877768210264567*^9, 3.877768341862659*^9, 
   3.877768428756012*^9, 3.877768527084828*^9, 3.877770004407206*^9, 
   3.878024996824093*^9, 3.8780254271243467`*^9, 3.878029714535385*^9, 
   3.878030181016945*^9, 3.878051769640399*^9, 3.878052271197152*^9, 
   3.878054282316173*^9, 3.8780544281056356`*^9, 3.878988474638329*^9, {
   3.879322055886751*^9, 3.879322064996072*^9}, 3.879323000582056*^9, 
   3.879327140587726*^9, 3.8793297229013863`*^9, 3.879833042300147*^9, 
   3.879835063916576*^9, 3.879848516686116*^9, 3.879848776891522*^9, 
   3.879849709019354*^9, 3.879849773445318*^9, 3.8798498387032957`*^9, 
   3.8798499684900637`*^9, 3.879850111544959*^9, 3.879851463765791*^9, 
   3.879857818032757*^9, 3.879858702720949*^9, 3.879859088279066*^9, 
   3.87986369160548*^9, 3.879938233661007*^9, 3.879949353302622*^9, 
   3.87995116777435*^9, 3.8799512704389668`*^9, 3.879953828803937*^9, 
   3.880189654377965*^9, 3.8802130594082727`*^9, 3.880213141146307*^9, 
   3.881486062838732*^9, 3.8814925025705643`*^9, 3.881492650763376*^9, 
   3.881493146141769*^9, 3.881493277054318*^9, 3.8814941200468483`*^9, 
   3.882520967943325*^9, 3.8825395321031637`*^9, 3.882541701655361*^9, 
   3.882857099965049*^9, 3.882858192168429*^9, 3.883066701293111*^9, 
   3.890728466014655*^9, 3.890728608629477*^9, 3.890804232074099*^9, 
   3.8908043474913807`*^9, 3.890804547037368*^9, 3.890804869659278*^9, 
   3.890811774370811*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"bf28a8c9-baa2-4faf-a4e4-f51f405d74d6"],

Cell[BoxData[
 FormBox["False", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.874663106563449*^9, 3.874718797938469*^9, 3.874735085989316*^9, 
   3.874995639020277*^9, 3.8750054496411867`*^9, 3.8750217998189373`*^9, 
   3.875086316997834*^9, 3.87508655751416*^9, 3.875086605459041*^9, 
   3.87508678327288*^9, 3.8751740351797743`*^9, 3.875177658585863*^9, 
   3.875177771800033*^9, 3.875178604700616*^9, 3.8752018852176533`*^9, 
   3.875249931879387*^9, 3.875339869803363*^9, 3.875341014631186*^9, 
   3.875595452625146*^9, 3.87559612400102*^9, 3.875597681352248*^9, 
   3.875598028370263*^9, 3.875600749316855*^9, 3.875601978329033*^9, 
   3.8756025869158363`*^9, 3.875603211625257*^9, 3.875604018356756*^9, 
   3.875604914448359*^9, 3.875606499517909*^9, 3.87560696916459*^9, 
   3.875608441686026*^9, 3.875609703914439*^9, 3.87561077351455*^9, 
   3.875681936211383*^9, 3.875683833234079*^9, 3.8756871255993834`*^9, 
   3.875687253076803*^9, 3.875687320943564*^9, 3.8756876154130373`*^9, 
   3.875771338879829*^9, 3.8758559052710447`*^9, 3.876488646257133*^9, 
   3.8765814916532707`*^9, 3.876582123904619*^9, 3.876583099289464*^9, 
   3.876583184794742*^9, 3.876644480118945*^9, 3.876819381962914*^9, 
   3.8768203740055733`*^9, 3.8768244458325853`*^9, 3.876827646993382*^9, 
   3.876926376213563*^9, 3.87692679843608*^9, 3.876929088409779*^9, 
   3.876997260819194*^9, 3.876997764669134*^9, 3.876998016021131*^9, 
   3.876998372012436*^9, 3.876998549034421*^9, 3.876999661136179*^9, 
   3.876999843341916*^9, 3.8770138862154207`*^9, 3.877069626924157*^9, 
   3.877069716943881*^9, 3.877070847783865*^9, 3.877071569259109*^9, 
   3.87707375945772*^9, 3.877078215419519*^9, 3.877079311339836*^9, 
   3.877096809882823*^9, 3.877097579479024*^9, 3.877154495126742*^9, 
   3.877156557414631*^9, 3.8774140649537477`*^9, 3.87741541460639*^9, 
   3.877415690779359*^9, 3.8774160158605433`*^9, 3.877417818024333*^9, 
   3.8774180880265408`*^9, 3.877420421503314*^9, 3.877420815323842*^9, 
   3.877421142592966*^9, 3.877421463033239*^9, 3.877767943536602*^9, 
   3.8777680534942427`*^9, 3.877768210264567*^9, 3.877768341862659*^9, 
   3.877768428756012*^9, 3.877768527084828*^9, 3.877770004407206*^9, 
   3.878024996824093*^9, 3.8780254271243467`*^9, 3.878029714535385*^9, 
   3.878030181016945*^9, 3.878051769640399*^9, 3.878052271197152*^9, 
   3.878054282316173*^9, 3.8780544281056356`*^9, 3.878988474638329*^9, {
   3.879322055886751*^9, 3.879322064996072*^9}, 3.879323000582056*^9, 
   3.879327140587726*^9, 3.8793297229013863`*^9, 3.879833042300147*^9, 
   3.879835063916576*^9, 3.879848516686116*^9, 3.879848776891522*^9, 
   3.879849709019354*^9, 3.879849773445318*^9, 3.8798498387032957`*^9, 
   3.8798499684900637`*^9, 3.879850111544959*^9, 3.879851463765791*^9, 
   3.879857818032757*^9, 3.879858702720949*^9, 3.879859088279066*^9, 
   3.87986369160548*^9, 3.879938233661007*^9, 3.879949353302622*^9, 
   3.87995116777435*^9, 3.8799512704389668`*^9, 3.879953828803937*^9, 
   3.880189654377965*^9, 3.8802130594082727`*^9, 3.880213141146307*^9, 
   3.881486062838732*^9, 3.8814925025705643`*^9, 3.881492650763376*^9, 
   3.881493146141769*^9, 3.881493277054318*^9, 3.8814941200468483`*^9, 
   3.882520967943325*^9, 3.8825395321031637`*^9, 3.882541701655361*^9, 
   3.882857099965049*^9, 3.882858192168429*^9, 3.883066701293111*^9, 
   3.890728466014655*^9, 3.890728608629477*^9, 3.890804232074099*^9, 
   3.8908043474913807`*^9, 3.890804547037368*^9, 3.890804869659278*^9, 
   3.890811774648945*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"78c4f2be-4546-492e-b31a-d60c100d6999"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$HighestWeightMultiplicity\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LieAlg\>\"", ",", 
        "\"\<projWSIn) A weight system of the parent projected under \
\[CapitalLambda].\\ndelta)Flocci$SSNode$DeltaCoprime of the \
child.\\n\[Beta]multIn)Flocci$SSNode$HWsMult of the child.\\n\[Beta]uniFlat) \
Flocci$SSNode$UniHWs of the child.\\n\[Beta]uniWSFlat) \
Flocci$SSNode$UniIrrepDominFlat of the child.\\nrange) \
Flocci$SSNode$UniIrrepDominRange of the child.\>\"", ",", 
        "\"\<A integer 1-tensor.\>\"", ",", 
        "\"\<The multiplicities of each hw in Flocci$SSNode$UniHWs within the \
rep projWS. If projWS does not branch correctly, we output \
{-1,-1,...}.\>\""}], "  ", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$HighestWeightMultiplicity", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"projWSIn", ",", "_Integer", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"delta", ",", "_Integer", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]multIn", ",", "_Integer", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]uniFlat", ",", "_Integer", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Beta]uniWSFlat", ",", "_Integer", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"range", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "projWS", ",", "pos", ",", "irrepMult", ",", "\[Beta]mult", ",", 
           "indexedSort", ",", "posList"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"indexedSort", "=", 
           RowBox[{
            RowBox[{"projWSIn", ".", "delta"}], "//", "Ordering"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"projWS", "=", 
           RowBox[{
           "projWSIn", "\[LeftDoubleBracket]", "indexedSort", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Beta]mult", "=", "\[Beta]multIn"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"irrepMult", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", "\[Beta]mult", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "projWS", "]"}], "!=", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pos", "=", 
              RowBox[{"Position", "[", 
               RowBox[{"\[Beta]uniFlat", ",", 
                RowBox[{"Last", "[", "projWS", "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "pos", "]"}], "==", "0"}], "||", 
                RowBox[{
                 RowBox[{"\[Beta]mult", "\[LeftDoubleBracket]", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], 
                  "\[RightDoubleBracket]"}], "==", 
                 RowBox[{"irrepMult", "[", 
                  RowBox[{"[", 
                   RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], 
               ",", 
               RowBox[{
                RowBox[{"irrepMult", "=", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"Length", "[", "\[Beta]mult", "]"}]}], "]"}]}], 
                ";", 
                RowBox[{"Break", "[", "]"}], ";"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"posList", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"projWS", ",", 
                    RowBox[{
                    "\[Beta]uniWSFlat", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"wi", ",", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";",
                  "\[IndentingNewLine]", 
                 RowBox[{"projWS", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"projWS", ",", "posList"}], "]"}]}], ";"}], "*)"}],
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Do", "[", 
                 RowBox[{
                  RowBox[{"projWS", "=", 
                   RowBox[{"Delete", "[", 
                    RowBox[{"projWS", ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"projWS", ",", 
                    RowBox[{
                    "\[Beta]uniWSFlat", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"wi", ",", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"irrepMult", "[", 
                  RowBox[{"[", 
                   RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
                 "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "irrepMult"}]}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869843504533802*^9, 3.869843533654182*^9}, {
   3.869843572220491*^9, 3.869843629562937*^9}, {3.8698438215334063`*^9, 
   3.869844053146834*^9}, {3.86984414400781*^9, 3.8698442146493187`*^9}, {
   3.869844257906299*^9, 3.869844265118897*^9}, {3.8698443240122967`*^9, 
   3.869844324227584*^9}, {3.8698444214903803`*^9, 3.8698445238448143`*^9}, {
   3.869844738586636*^9, 3.869844773809943*^9}, {3.8698448268546677`*^9, 
   3.869844869041836*^9}, 3.869844939018869*^9, {3.869844979200062*^9, 
   3.869844984696632*^9}, {3.8698921434080143`*^9, 3.86989220897234*^9}, {
   3.8698922505132303`*^9, 3.869892280131565*^9}, {3.869892416854281*^9, 
   3.869892446915666*^9}, {3.8698925011388407`*^9, 3.869892501300723*^9}, {
   3.869892605150218*^9, 3.8698926446230593`*^9}, {3.869892719373169*^9, 
   3.869892725215082*^9}, {3.869892986823348*^9, 3.869892991041915*^9}, {
   3.870510886748047*^9, 3.870510890331891*^9}, {3.8752493921781683`*^9, 
   3.8752494067808228`*^9}, {3.87525231290926*^9, 3.875252337699847*^9}, {
   3.875595912321951*^9, 3.875595914823799*^9}, {3.87560601751068*^9, 
   3.87560608617549*^9}, {3.875606143307639*^9, 3.875606148566761*^9}, {
   3.875606181541543*^9, 3.875606210559606*^9}, {3.876581215954093*^9, 
   3.8765812537787*^9}, {3.876581591262475*^9, 3.876581591763074*^9}, {
   3.87658164954924*^9, 3.876581657954104*^9}, {3.8793231981374693`*^9, 
   3.879323555451709*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"9435006b-1977-45a6-9bf2-afd388029263"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tensor products", "Subsection",
 CellChangeTimes->{{3.878988375952257*^9, 
  3.878988378528899*^9}},ExpressionUUID->"a488a26d-3142-4924-94fd-\
5b3bca2d6133"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$TensorProduct\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LieAlg\>\"", ",", 
       "\"\<g) A semi-simple Lie algebra.\\n \[Lambda]1) The highest weight \
of a single irrep of g.\\n \[Lambda]2) The highest weight of a single irrep \
of g.\>\"", ",", "\"\<A 2-tensor of integers.\>\"", ",", 
       "\"\<Outputs the highest weights of the tensor product rep of \
\[Lambda]1 and \[Lambda]2.\>\""}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$TensorProduct", "[", 
   RowBox[{"g_", ",", "\[Lambda]1_", ",", "\[Lambda]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ws1", ",", "ws2", ",", "plus"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ws1", "=", 
      RowBox[{"Flocci$WeightSystemFromFlat", "[", 
       RowBox[{"g", ",", "\[Lambda]1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"ws2", "=", 
      RowBox[{"Flocci$WeightSystemFromFlat", "[", 
       RowBox[{"g", ",", "\[Lambda]2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"plus", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Plus", ",", "ws1", ",", "ws2", ",", "1"}], "]"}], ",", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$ExtractHighestWeights", "[", 
      RowBox[{"g", ",", "plus"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.878988413968047*^9, 3.878988684612319*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"9fd8f4d1-decd-4489-9052-cefa0bd16290"]
}, Closed]],

Cell[CellGroupData[{

Cell["Anomaly coefficients", "Subsection",
 CellChangeTimes->{{3.867747749916327*^9, 3.867747754862876*^9}, {
  3.868606539829639*^9, 
  3.868606554378838*^9}},ExpressionUUID->"ba62bfae-2cf3-4560-8f1f-\
000c3ad7bf2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ACCs\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<g) A semi-simple Lie algebra.\\n hws) A list of highest weights of \
 g.\\n abstractU1s) A 2-tensor, where each row is a U(1) charge.\>\"", ",", 
      "\"\<A 1-vector\>\"", ",", 
      "\"\<Outputs the anomaly cancleation conditions for g+u(1)+...+u(1) \
with the given (possibly abstract) u(1) charges.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ACCs", "[", 
    RowBox[{"g_", ",", "hws_", ",", "abstractU1s_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "parthws", ",", "dimL", ",", "dynkinL", ",", "coeffg2u1", ",", 
       "eqsg2u1", ",", "coeffgrav", ",", "eqsgrav", ",", "u1u1u1", ",", 
       "tripleEq"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "Here", " ", "n", " ", "is", " ", "the", " ", "number", " ", "of", " ",
         "u", 
        RowBox[{
         RowBox[{"(", "1", ")"}], "'"}], "s"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "first", " ", "make", " ", "a", " ", "list", " ", "of", " ",
         "charges", " ", "of", " ", "the", " ", "right", " ", "size"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"abstractU1s", "=", 
        RowBox[{"Array", "[", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "hws", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"We", " ", "partition", " ", "the", " ", "hws"}], ",", " ", 
        RowBox[{
        "and", " ", "find", " ", "there", " ", "dimenisions", " ", "and", " ",
          "dynkin", " ", 
         RowBox[{"indices", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"parthws", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TakeList", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], "&"}], ",", 
         "hws"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dimL", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flocci$Dim", "[", 
          RowBox[{
           RowBox[{
           "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "\[Lambda]", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "parthws"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dynkinL", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flocci$DynkinIndex", "[", 
          RowBox[{
           RowBox[{
           "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "\[Lambda]", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "parthws"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "find", " ", "the", " ", 
         RowBox[{"g", "^", "2"}], "u", 
         RowBox[{"(", "1", ")"}], " ", "anomaly", "  ", "equations"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"coeffg2u1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[NotEqual]", " ", "k"}], ",", " ", 
             RowBox[{"dimL", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"dynkinL", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "hws", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqsg2u1", "=", 
       RowBox[{"coeffg2u1", ".", 
        RowBox[{"Transpose", "[", "abstractU1s", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "find", " ", "the", " ", "gravitational", " ", "anomaly", 
         " ", "equations"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"coeffgrav", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Product", "[", " ", 
          RowBox[{
           RowBox[{"dimL", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "hws", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqsgrav", "=", 
       RowBox[{
        RowBox[{"{", "coeffgrav", "}"}], ".", 
        RowBox[{"Transpose", "[", "abstractU1s", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "find", " ", "the", " ", "u", 
         SuperscriptBox[
          StyleBox[
           RowBox[{"(", "1", ")"}],
           FontColor->RGBColor[1, 0.5, 0]], "3"], " ", "anomalies"}],
        FontColor->RGBColor[1, 0.5, 0]], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"u1u1u1", "=", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Times", "@@", "#"}], "&"}], ",", 
          RowBox[{"Tuples", "[", 
           RowBox[{"abstractU1s", ",", "3"}], "]"}]}], "]"}], "//", 
        "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tripleEq", "=", 
       RowBox[{"coeffgrav", ".", 
        RowBox[{"Transpose", "[", "u1u1u1", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "combine", " ", "all", " ", "the", " ", "equations"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"tripleEq", ",", "eqsgrav", ",", "eqsg2u1"}], "]"}], "]"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ACCs", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A2", ",", "A1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "2"}], "}"}], "}"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879006607790662*^9, 3.879006634821788*^9}, {
  3.879006670518586*^9, 3.879006683730452*^9}, {3.879006746590528*^9, 
  3.879007075597395*^9}, {3.8790071835160007`*^9, 3.879007516965596*^9}, {
  3.879007552151857*^9, 3.87900772068996*^9}, {3.8790078263473587`*^9, 
  3.879007919073612*^9}, {3.879009135981127*^9, 3.879009175973053*^9}, {
  3.8790092125390263`*^9, 3.879009366907507*^9}, {3.879009445518155*^9, 
  3.8790095651372766`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"289ebd06-f985-4715-aefc-0fceff9b05fc"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"36", ",", "0"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.879007887105432*^9, 3.879007919586632*^9}, {
   3.87900915366187*^9, 3.8790091764466743`*^9}, {3.879009213406559*^9, 
   3.879009367656365*^9}, 3.87932206631502*^9, 3.879327141459755*^9, 
   3.879329723809136*^9, 3.879833043224867*^9, 3.879835064860969*^9, 
   3.879848517704339*^9, 3.879848777846108*^9, 3.8798497101387043`*^9, 
   3.8798497748870363`*^9, 3.879849839726591*^9, 3.879849969835793*^9, 
   3.879850112492281*^9, 3.879851464712393*^9, 3.879857818975622*^9, 
   3.8798587037600803`*^9, 3.879859089313257*^9, 3.87986369263127*^9, 
   3.879938234842164*^9, 3.879949354375033*^9, 3.879951168833292*^9, 
   3.87995127161252*^9, 3.879953829726388*^9, 3.8801896557851267`*^9, 
   3.880213060410884*^9, 3.880213142048832*^9, 3.881486063736031*^9, 
   3.881492503658876*^9, 3.881492651654319*^9, 3.881493147019122*^9, 
   3.881493277887128*^9, 3.881494121085176*^9, 3.8825209693689213`*^9, 
   3.882539533478533*^9, 3.882541702838633*^9, 3.88285710189289*^9, 
   3.882858193107647*^9, 3.88306670247546*^9, 3.890728469016479*^9, 
   3.890728611266486*^9, 3.890804233266911*^9, 3.890804348680847*^9, 
   3.890804548092066*^9, 3.890804870727055*^9, 3.890811775421489*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"0441d07d-855a-4eed-8fed-a784b8f77d25"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$AnomalyFreeSemiSimple\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<g) A semi-simple Lie algebra.\\n hws) A list of highest weights of \
 g.\>\"", ",", "\"\<A 1-vector\>\"", ",", 
      "\"\<Outputs the values of the anomaly equations for the semi-simple \
repesentation determined by the highest weights hws.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$AnomalyFreeSemiSimple", "[", 
   RowBox[{"g_", ",", "hws_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gtake", ",", "dimlist", ",", "AnomList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gtake", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Transpose", ",", 
        RowBox[{"TakeList", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "hws", "]"}], ",", 
          RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dimlist", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Flocci$WeightSystemSorted", "[", 
           RowBox[{"g", ",", "#"}], "]"}], "]"}], "&"}], ",", "hws"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AnomList", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flocci$TypeAQ", "[", 
             RowBox[{
             "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "===",
                "A1"}], ")"}]}]}], ",", " ", 
           RowBox[{"Flocci$AnomCoeffCompiled", "[", 
            RowBox[{
             RowBox[{
             "gtake", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", "dimlist"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", "dimlist", "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "//", 
       "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Total", ",", 
        RowBox[{"Transpose", "[", "AnomList", "]"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879007970239894*^9, 3.879007989047605*^9}, {
  3.879008096832872*^9, 3.879008150042852*^9}, {3.8790081961303873`*^9, 
  3.879008335450185*^9}, {3.879008734590273*^9, 3.879008738876032*^9}, {
  3.879009592559183*^9, 3.879009656864834*^9}, {3.8793235856222343`*^9, 
  3.879323586043263*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"e459d4a7-6398-4525-ba02-bcc6312e6b64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$AnomalyFreeCheck\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LieAlg\>\"", ",", 
      "\"\<g) A reductive Lie algebra.\\n hws) A 2-integer tensor of highest \
weights of  g.\>\"", ",", "\"\<True or False\>\"", ",", 
      "\"\<Outputs True if the rep determined by hws is free of local \
anomalies, outputs false otherwise.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$AnomalyFreeCheck", "[", 
   RowBox[{"g_", ",", "hws_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "u1positions", ",", "gSS", ",", "hwsSS", ",", "u1List", ",", 
      "boolSemiSimple", ",", "boolU1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "first", " ", "find", " ", "the", " ", "u1", " ", 
       "positions"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u1positions", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"g", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Flocci$TypeU1Q", "[", "#", "]"}], "&"}], ")"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "do", " ", "a", " ", "quckier", " ", "check", " ", "if", 
        " ", "there", " ", "are", " ", "no", " ", "u1s"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "u1positions", "]"}], "==", "0"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"Flocci$AnomalyFreeSemiSimple", "[", 
          RowBox[{"g", ",", "hws"}], "]"}], "\[Equal]", 
         RowBox[{"{", "0", "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"We", " ", "get", " ", "the", " ", "semi"}], "-", 
        RowBox[{"simple", " ", "part"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gSS", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"g", ",", "u1positions"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hwsSS", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"TakeList", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], ",", 
            "u1positions"}], "]"}], "]"}], "&"}], ",", "hws"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "get", " ", "the", " ", "u1", " ", "list", " ", "of", " ", 
        "charges"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"u1List", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"TakeList", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"Flatten", "[", "u1positions", "]"}], 
            "\[RightDoubleBracket]"}], "]"}], "&"}], ",", "hws"}], "]"}], "//",
        "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"We", " ", "test", " ", "the", " ", "semi"}], "-", 
        RowBox[{"simple", " ", "part"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"boolSemiSimple", "=", 
      RowBox[{
       RowBox[{"Flocci$AnomalyFreeSemiSimple", "[", 
        RowBox[{"gSS", ",", "hwsSS"}], "]"}], "\[Equal]", 
       RowBox[{"{", "0", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "test", " ", "the", " ", "U", 
        RowBox[{"(", "1", ")"}], " ", "part"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"boolU1", "=", 
      RowBox[{
       RowBox[{"Flocci$ACCs", "[", 
        RowBox[{"gSS", ",", "hwsSS", ",", "u1List"}], "]"}], "\[Equal]", 
       RowBox[{"{", "0", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "output", " ", "the", " ", "final", " ", "result"}],
       
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"boolSemiSimple", "&&", "boolU1"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879008437107501*^9, 3.879008442075961*^9}, {
   3.879008472204265*^9, 3.879008937088702*^9}, {3.879009063855349*^9, 
   3.879009127036519*^9}, {3.879009374337141*^9, 3.879009401334126*^9}, 
   3.87900943502883*^9, {3.87900966365182*^9, 3.879009728974622*^9}, {
   3.8795271118075314`*^9, 3.8795271127190123`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"b85c5ba1-de86-41ab-bc8a-271917eae489"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$AnomCoeffCompiled\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$AnomCoeffCompiled", "::", "tag"}], "=", "\"\<LieAlg\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$AnomCoeffCompiled", "::", "input"}], "=", 
    "\"\<hws: highest weights. dims: dimensions of representations with \
heighest weights in hws.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$AnomCoeffCompiled", "::", "output"}], "=", 
   "\"\<anomaly coefficient.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$AnomCoeffCompiled", "::", "description"}], "=", 
    "\"\<Returns anomaly coefficient for representation with heighest weight \
in hws with dimensions in dims.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$AnomCoeffCompiled", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"hws", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dims", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"totVal", ",", "n", ",", "\[Beta]i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{
           "hws", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Beta]i", "=", 
            RowBox[{
            "hws", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"totVal", "=", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"i", "*", 
               RowBox[{"(", 
                RowBox[{"n", "-", 
                 RowBox[{"2", " ", "i"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"n", "-", "i"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]i", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]i", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]i", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"totVal", "+=", 
               RowBox[{
                RowBox[{"3", "*", 
                 RowBox[{"Sum", "[", 
                  RowBox[{
                   RowBox[{"i", "*", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", 
                    RowBox[{"2", " ", "i"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", "j"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ")"}]}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"3", "*", 
                 RowBox[{"Sum", "[", 
                  RowBox[{
                   RowBox[{"i", "*", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", 
                    RowBox[{"2", " ", "j"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", "j"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ")"}]}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"totVal", "+=", 
                  RowBox[{"6", "*", 
                   RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"i", "*", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", 
                    RowBox[{"2", " ", "j"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"n", "-", "k"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]i", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "+", "1"}], ")"}]}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"k", ",", 
                    RowBox[{"j", "+", "1"}], ",", 
                    RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]}], ";"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"i", "+", "1"}], ",", 
                  RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "dims", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "*", "totVal"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "hws", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8698291881634398`*^9, 3.869829357146677*^9}, {
  3.869830388915102*^9, 3.869830403165697*^9}, {3.875177537642448*^9, 
  3.8751775442186937`*^9}, {3.875339630688651*^9, 3.875339637414793*^9}, {
  3.8768272294285192`*^9, 3.8768272837823067`*^9}, {3.8768274714080877`*^9, 
  3.8768275746940393`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"d823f0d7-ead7-4f35-864a-d5964e4b67cc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Irreps of dimension less then or equal to dim.", "Subsection",
 CellChangeTimes->{{3.8689547176869183`*^9, 3.868954718494938*^9}, {
  3.869140626177649*^9, 3.869140636993516*^9}, {3.875603181988141*^9, 
  3.875603192995369*^9}},ExpressionUUID->"b312adef-69ae-4b79-9497-\
2d8e7b1470ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SimpleIrrepsWithDim\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "::", "tag"}], "=", 
   "\"\<LieAlg\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "::", "input"}], "=", 
   "\"\<alg: A simple Lie algebra.\\nmaxDim: An natural number representating \
the maximum dimension.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "::", "output"}], "=", 
   "\"\<A list of hws of reps of alg of dimension<maxDim.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "::", "description"}], "=", 
   "\"\<Finds the highest weights of representations of g of dimension less \
then maxDim.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
    RowBox[{"alg_", ",", "maxDim_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
     RowBox[{"alg", ",", "maxDim"}], "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"counter", ",", "a", ",", "dim", ",", "n"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Outputs", " ", "list", " ", "of", " ", "the", " ", "double", " ", 
         RowBox[{"{", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"{", "hw", "}"}]}], "}"}], " ", 
         RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], "}"}]}], " ", "}"}]}],
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Flocci$Rank", "[", "alg", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counter", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reap", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{"True", ",", 
            RowBox[{"(*", 
             RowBox[{
             "must", " ", "be", " ", "true", " ", "for", " ", "base", " ", 
              RowBox[{"(", 
               RowBox[{"0", ",", "..", ",", "0"}], ")"}], " ", "case"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dim", "=", 
              RowBox[{"Flocci$Dim", "[", 
               RowBox[{"alg", ",", "counter"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dim", "<=", "maxDim"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sow", "[", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", 
                   RowBox[{"{", "counter", "}"}]}], "}"}], "]"}], ";", 
                RowBox[{
                 RowBox[{"counter", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "++"}], ";"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"a", "=", 
                 RowBox[{
                  RowBox[{"FirstPosition", "[", 
                   RowBox[{"counter", ",", 
                    RowBox[{"xx_", "/;", 
                    RowBox[{"xx", "!=", "0"}]}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"a", "==", "n"}], ",", 
                  RowBox[{"Break", "[", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"counter", "[", 
                    RowBox[{"[", "a", "]"}], "]"}], "=", "0"}], ";", 
                   RowBox[{
                    RowBox[{"counter", "[", 
                    RowBox[{"[", 
                    RowBox[{"a", "+", "1"}], "]"}], "]"}], "++"}], ";"}]}], 
                 "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875249318033332*^9, 3.875249320964157*^9}, {
   3.875341483322712*^9, 3.875341485743943*^9}, {3.875341554946115*^9, 
   3.875341561240097*^9}, 3.8756075226841793`*^9, {3.876925329854761*^9, 
   3.8769253611034184`*^9}, {3.876925392597693*^9, 3.876925507147155*^9}, {
   3.877421119020916*^9, 3.877421121936973*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"afa216e2-9236-48ca-b520-38ad9d3bee29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$IrrepSimplePower\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "::", "tag"}], "=", "\"\<LieAlg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "::", "input"}], "=", 
   "\"\<g: A simple Lie algebra\\nn: An natural number representating the the \
power of that simple factor.\\ndim: Natural number representing \
dimension\\nlocalA1Dim: Natural number indicating the total dimension of reps \
that are non-trivial only under A1 factors for the problem at hand (12 in \
SM+rh\[Nu])\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "::", "output"}], "=", 
   "\"\<A list of hws of reps of g^n of dimension<dim.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "::", "description"}], "=", 
   "\"\<Finds the highest weights of representations of g^n of dimension less \
then dim.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepSimplePower", "[", 
    RowBox[{"g_", ",", "n_", ",", "dim_", ",", "localA1Dim_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$IrrepSimplePower", "[", 
     RowBox[{"g", ",", "n", ",", "dim", ",", "localA1Dim"}], "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "dimp", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Outputs", " ", "list", " ", "of", " ", "the", " ", "double", " ", 
         RowBox[{"{", 
          RowBox[{"dim", ",", " ", "hw"}], "}"}], " ", 
         RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
         RowBox[{"{", 
          RowBox[{"9", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], " ", "}"}]}],
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "If", " ", "the", " ", "algebra", " ", "A1dim", " ", "dimensions", 
          " ", "solely", " ", "in", " ", "su", 
          RowBox[{"(", "2", ")"}], " ", "factors"}], ",", " ", 
         RowBox[{
          RowBox[{"and", " ", "A1dim"}], "\[LessEqual]", 
          RowBox[{"dim", "/", "3"}]}], ",", " ", 
         RowBox[{
         "then", " ", "only", " ", "need", " ", "to", " ", "go", " ", "up", 
          " ", "to", " ", 
          RowBox[{"dim", "/", "3"}]}], ",", " ", 
         RowBox[{
          RowBox[{"since", " ", "reps", " ", "of", " ", "su", 
           RowBox[{"(", "2", ")"}], " ", "cannot", " ", "decompose", " ", 
           "into", " ", "non"}], "-", 
          RowBox[{"trivial", " ", "reps", " ", "of", " ", "other", " ", 
           RowBox[{"algebras", "."}]}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dimp", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"g", "===", "SU2"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{"dim", "/", "3"}], "]"}], ",", "localA1Dim"}], "]"}], 
          ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "==", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
          RowBox[{"g", ",", "dimp"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tup1", ",", "tup2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"tup1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], 
                 RowBox[{"tup2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"tup1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"tup2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}], 
            "@@@", 
            RowBox[{"Tuples", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Flocci$IrrepSimplePower", "[", 
                RowBox[{"g", ",", 
                 RowBox[{"n", "-", "1"}], ",", "dim", ",", "localA1Dim"}], 
                "]"}], ",", 
               RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
                RowBox[{"g", ",", "dimp"}], "]"}]}], "}"}], "]"}]}], ",", 
           RowBox[{"Function", "[", 
            RowBox[{"xx", ",", 
             RowBox[{
              RowBox[{"xx", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", "dimp"}]}], "]"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"dont", " ", "put", " ", "semicolon", " ", 
       RowBox[{"here", "!"}]}], "*)"}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8701854810388803`*^9, 3.870185712018252*^9}, {
   3.8702642172752647`*^9, 3.8702642175925417`*^9}, {3.875017960743128*^9, 
   3.8750180267537518`*^9}, {3.8752493241969223`*^9, 
   3.8752493267783546`*^9}, {3.875341476590962*^9, 3.8753414802072372`*^9}, 
   3.8753415678598413`*^9, 3.875607524579504*^9, {3.876925075781784*^9, 
   3.876925119601685*^9}, {3.8769251512474337`*^9, 3.876925232086049*^9}, {
   3.8769252649011297`*^9, 3.876925280988748*^9}, {3.8769253314172087`*^9, 
   3.8769253328299513`*^9}, {3.87692564790171*^9, 3.876925758482345*^9}, 
   3.876925852823344*^9, {3.8769259983217373`*^9, 3.8769260016493807`*^9}, 
   3.876926312556142*^9, {3.877421129951132*^9, 3.877421131868032*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"87426ad7-0ebc-476f-9f3e-36515349cd08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$IrrepsLessThenOrEqualDim\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "::", "tag"}], "=", 
   "\"\<LieAlg\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "::", "input"}], "=", 
   "\"\<g: A semi-simple Lie algebra e.g. {A1,A10}.\\ndim: An natural number \
representating the dimension.\\nlocalA1Dim: Natural number indicating the \
total dimension of reps that are non-trivial only under A1 factors for the \
problem at hand (12 in SM+rh\[Nu]). If localA1Dim=dim it has no \
effect.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "::", "output"}], "=", 
   "\"\<A list of hws of reps of g of dimension<dim.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "::", "description"}], "=", 
   "\"\<Finds the highest weights of representations of g of dimension less \
then dim.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "::", "clear"}], "=", 
   "\"\<3\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "[", 
    RowBox[{"g_", ",", "dim_", ",", "localA1Dim_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "[", 
     RowBox[{"g", ",", "dim", ",", "localA1Dim"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hw1", ",", "simplepowerirreps"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Outputs", " ", "list", " ", "of", " ", "flattened", " ", "hw", " ", 
         "without", " ", "extra", " ", "bracket", " ", 
         RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}],
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simplepowerirreps", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$IrrepSimplePower", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", "#", "]"}], ",", "dim", ",", 
            "localA1Dim"}], "]"}], "&"}], "/@", 
         RowBox[{"Split", "[", "g", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hw1", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Function", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"tup1", ",", "tup2"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"tup1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], 
                    RowBox[{"tup2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"tup1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"tup2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}],
                 "@@@", 
                RowBox[{"Tuples", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], "]"}]}], ",", 
               RowBox[{"Function", "[", 
                RowBox[{"xx", ",", 
                 RowBox[{
                  RowBox[{"xx", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<=", "dim"}]}], "]"}]}], 
              "]"}], "&"}], ",", "simplepowerirreps"}], "]"}], "//", 
          "Timing"}], "//", 
         RowBox[{"Flocci$Timing", "[", "\"\<reps: 1.1\>\"", "]"}]}]}], ";", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"list", " ", "of", " ", "the", " ", "double", " ", 
          RowBox[{"{", 
           RowBox[{"dim", ",", " ", "hw"}], "}"}], " ", 
          RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
          RowBox[{"{", 
           RowBox[{"9", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], " ", "}"}]}],
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "get", " ", "irreps", " ", "of", " ", "simple", " ", "ideals", " ", 
          "less", " ", "than", " ", "dim", " ", 
          RowBox[{"(", 
           RowBox[{"returns", " ", 
            RowBox[{"irrep", "'"}], "s", " ", "dim", " ", "and", " ", 
            "irrep"}], ")"}]}], ",", " ", 
         RowBox[{
         "fold", " ", "them", " ", "into", " ", "irreps", " ", "of", " ", "g",
           " ", "less", " ", "than", " ", "dim"}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{
           "Eliminate", " ", "ones", " ", "that", " ", "are", " ", "trivial", 
            " ", "under", " ", "non"}], "-", 
           RowBox[{
           "SU2", " ", "but", " ", "have", " ", "dim", " ", "greater", " ", 
            "than", " ", "localA1Dim"}]}], ",", " ", 
          RowBox[{"get", " ", "rid", " ", "of", " ", "dim", " ", 
           RowBox[{"info", "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Select", "[", 
           RowBox[{"hw1", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{"Pick", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"#", "===", "SU2"}], ")"}]}], "&"}], "/@", 
                    "g"}]}], "]"}], ",", "2"}], "]"}], "==", "0"}], ",", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", 
                "localA1Dim"}], ",", "True"}], "]"}], "&"}]}], "]"}]}], "//", 
         "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 1.2\>\"", "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869836988613799*^9, 3.869836988869801*^9}, 
   3.8698382349838457`*^9, 3.869899100139328*^9, {3.869899291922791*^9, 
   3.869899347880069*^9}, {3.870185443657187*^9, 3.870185445186324*^9}, {
   3.870185657225504*^9, 3.870185659397634*^9}, {3.870185744474462*^9, 
   3.8701857569615803`*^9}, 3.870264229191989*^9, {3.8703481365191107`*^9, 
   3.8703481404727287`*^9}, {3.870348521536273*^9, 3.8703485245281773`*^9}, {
   3.870349642401108*^9, 3.870349718200177*^9}, {3.870349827019382*^9, 
   3.87034987287152*^9}, {3.870352008554525*^9, 3.870352030526814*^9}, {
   3.870352102536591*^9, 3.870352119127616*^9}, {3.8752493308781137`*^9, 
   3.8752493342781982`*^9}, {3.8752516173947973`*^9, 3.875251723136147*^9}, {
   3.875341459839167*^9, 3.875341472936718*^9}, 3.8753415740915813`*^9, {
   3.875603090490198*^9, 3.875603132779851*^9}, {3.875607488531793*^9, 
   3.87560752671529*^9}, {3.87623045365561*^9, 3.876230502793651*^9}, 
   3.876925108517974*^9, {3.876925819746467*^9, 3.876925858861545*^9}, {
   3.8769259045921507`*^9, 3.876925942995863*^9}, {3.876926260235683*^9, 
   3.876926294014008*^9}, {3.877421413854889*^9, 3.8774214170687323`*^9}, 
   3.879514614247827*^9, {3.879527202844657*^9, 3.87952722043926*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"cea29065-2fba-4a82-abf9-32911b40c898"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commutators through the Chevalley basis", "Subsection",
 CellChangeTimes->{{3.874054354433299*^9, 3.874054378689156*^9}, {
  3.874054426804274*^9, 3.874054433405006*^9}, {3.8740734416578712`*^9, 
  3.8740734428656483`*^9}},ExpressionUUID->"e1fb745d-bc18-491e-93f3-\
c1fe9b0b1060"],

Cell["\<\
See flatland for a discussion. The main reference for the below is Mitzman\
\>", "Text",
 CellChangeTimes->{{3.874054382904442*^9, 3.874054389719192*^9}, {
  3.874058370195612*^9, 3.8740583819855824`*^9}, {3.874073460425712*^9, 
  3.874073469697744*^9}},ExpressionUUID->"dd688d9f-13b2-440b-a2b5-\
253b3f94c460"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$biE6\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$biE6", "::", "tag"}], "=", "\"\<Commu\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$biE6", "::", "input"}], "=", "\"\<-\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$biE6", "::", "output"}], "=", 
   "\"\<The matrix: \
{{1,0,0,0,0,0},{1,1,0,0,0,0},{0,1,1,1,0,0},{0,0,0,1,1,0},{0,0,0,0,1,0},{0,0,1,\
0,0,1}}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$biE6", "::", "description"}], "=", 
   "\"\<This corresponds to the matrix bi such that for E6 the 2-cocycle \
defining commutators is \
\[Epsilon](\[Lambda]1,\[Lambda]2)=(-1\!\(\*SuperscriptBox[\()\), \(\[Lambda]1 \
. \*SuperscriptBox[\(ga\), \(T\)] . bi . ga . \[Lambda]2\)]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$biE6", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bi", ",", "orb", ",", "orbt", ",", "min", ",", "ca"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Following", " ", "3.2", ".4", " ", "of", " ", "Mitzman"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ca", "=", 
       RowBox[{"Flocci$CartanMatrix", "[", "E6", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bi", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"orb", "[", 
        RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[NotEqual]", " ", "6"}], ",", 
             RowBox[{"6", "-", "i"}], ",", "i"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[NotEqual]", " ", "6"}], ",", 
             RowBox[{"6", "-", "j"}], ",", "j"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[NotEqual]", " ", "6"}], ",", 
             RowBox[{"6", "-", "j"}], ",", "j"}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[NotEqual]", " ", "6"}], ",", 
             RowBox[{"6", "-", "i"}], ",", "i"}], "]"}]}], "}"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", " ", "j"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"orbt", "=", 
             RowBox[{"orb", "[", 
              RowBox[{"i", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"min", "=", 
             RowBox[{
              RowBox[{"Ordering", "[", "orbt", "]"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"min", "\[Equal]", "1"}], "||", 
               RowBox[{"min", "\[Equal]", "3"}]}], ",", 
              RowBox[{
               RowBox[{"bi", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
               "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"min", "\[Equal]", "2"}], "||", 
               RowBox[{"min", "\[Equal]", "4"}]}], ",", 
              RowBox[{
               RowBox[{"bi", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                   RowBox[{
                    RowBox[{"Flocci$ScalarProduct", "[", "E6", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    "ca", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "ca", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "]"}]], "\[Equal]", 
                  RowBox[{"-", "1"}]}], ",", "1", ",", "0"}], "]"}]}]}], 
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"bi", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "=", "1"}]}],
           "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "bi"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.874066403205947*^9, 3.8740664156453857`*^9}, {
  3.874072479308978*^9, 3.874072481058934*^9}, {3.874072623956018*^9, 
  3.874072640763781*^9}, {3.874072693996851*^9, 3.874072785411869*^9}, {
  3.874072819660968*^9, 3.874072831630693*^9}, {3.874072861918151*^9, 
  3.874072957521016*^9}, {3.8740729906086817`*^9, 3.874073260393609*^9}, {
  3.874073293564961*^9, 3.874073316330221*^9}, {3.875177676314423*^9, 
  3.875177683725095*^9}, {3.875339751973003*^9, 3.87533975975426*^9}, {
  3.87577060443121*^9, 3.8757706055437193`*^9}, {3.877012752678804*^9, 
  3.8770128029349003`*^9}, {3.877012856013455*^9, 3.877012913521508*^9}, {
  3.877014327056849*^9, 3.87701436219143*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"9a58fb81-9d32-41c0-bfa8-9e4a667bba59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SimplyLacedCommutators\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimplyLacedCommutators", "::", "tag"}], "=", 
   "\"\<Commu\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimplyLacedCommutators", "::", "input"}], "=", 
   "\"\<A simple Lie algebra s of type A, D or E.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimplyLacedCommutators", "::", "output"}], "=", 
   "\"\<A 3-tensor vauled in the integers.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SimplyLacedCommutators", "::", "description"}], "=", 
    "\"\<See Flocci$Commutators.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SimplyLacedCommutators", "[", "s_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rank", ",", "bi", ",", "orded", ",", "ca", ",", "ga", ",", "Aijk", ",",
        "roots", ",", "negaRoots", ",", "pos", ",", "k"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "first", " ", "get", " ", "some", " ", "relevent", " ", 
        "information", " ", "about", " ", "the", " ", "algebra", " ", "s"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ga", "=", 
       RowBox[{"Flocci$MetricTensor", "[", "s", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"Flocci$Roots", "[", 
        RowBox[{"{", "s", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"negaRoots", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"roots", ",", 
            RowBox[{"-", "r"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "roots"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "need", " ", "to", " ", "ensure", " ", "invariance", " ", 
         "under", " ", "outer", " ", "automorphisms", " ", "of", " ", "this", 
         " ", "operators", " ", "for", " ", "A", " ", "with", " ", "odd", " ",
          "rank", " ", "and", " ", 
         RowBox[{"D", ".", " ", "For"}], " ", "this", " ", "we", " ", "need", 
         " ", "to", " ", "change", " ", "the", " ", "ordering", " ", "for", 
         " ", "the", " ", "A", " ", "case"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"orded", "=", 
       RowBox[{"Range", "[", "rank", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], "&&", " ", 
         RowBox[{"OddQ", "[", "rank", "]"}]}], ",", 
        RowBox[{"orded", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"rank", "+", "1", "-", "i"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"rank", "/", "2"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OddQ", "[", "rank", "]"}], ",", 
              RowBox[{
               RowBox[{"Floor", "[", 
                RowBox[{"rank", "/", "2"}], "]"}], "+", "1"}], ",", 
              "Nothing"}], "]"}]}], "}"}], "//", "Flatten"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "We", " ", "next", " ", "construct", " ", "the", " ", "bilinear", 
          " ", "operator", " ", 
          RowBox[{"bi", ".", " ", "The"}], " ", "bilinear", " ", "operator", 
          " ", "\[Epsilon]", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], ")"}]}], "=", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"\[Lambda]1", ".", 
           SuperscriptBox["ga", "T"], ".", "bi", ".", "ga", ".", 
           "\[Lambda]2"}]]}],
        FontColor->RGBColor[1, 0.5, 0]], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bi", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "orded", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "<", 
            RowBox[{
            "orded", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
            ",", "0", ",", 
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
             RowBox[{
              RowBox[{
              "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ca", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "orded", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            ">", 
            RowBox[{
            "orded", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{
            RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
            RowBox[{
             RowBox[{
             "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "ca", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "rank"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", 
        RowBox[{"bi", "=", "Flocci$biE6"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "We", " ", "construct", " ", "the", " ", "tensor", " ", "Aijk", " ", 
          "such", " ", 
          RowBox[{"that", " ", "[", 
           RowBox[{"Xi", ",", "Xj"}], "]"}]}], "=", 
         RowBox[{"Aijk", " ", "Xk"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Aijk", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}], ",", 
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}], ",", 
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"[", 
          RowBox[{"h\[Lambda]i", ",", "e\[Alpha]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]i", ",", "\[Alpha]"}], ")"}], " ", 
          "e\[Alpha]"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Aijk", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", 
            RowBox[{"rank", "+", "k"}], ",", 
            RowBox[{"rank", "+", "k"}]}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
           RowBox[{
            RowBox[{
            "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Aijk", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"rank", "+", "k"}], ",", "i", ",", 
            RowBox[{"rank", "+", "k"}]}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
            RowBox[{
             RowBox[{
             "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "roots", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}]}], "]"}]}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "rank"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"[", 
           RowBox[{"e\[Alpha]", ",", 
            RowBox[{"e", "-", "\[Alpha]"}]}], "]"}], "=", 
          RowBox[{
           RowBox[{"-", "h\[Alpha]"}], "=", 
           RowBox[{
            RowBox[{"-", "\[Alpha]i"}], " ", "hi"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"where", " ", "\[Alpha]"}], "=", 
          RowBox[{
           RowBox[{"\\", "sum"}], " ", "\[Alpha]i\[Lambda]i"}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Aijk", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"rank", "+", "k"}], ",", 
           RowBox[{"rank", "+", 
            RowBox[{
            "negaRoots", "\[LeftDoubleBracket]", "k", 
             "\[RightDoubleBracket]"}]}], ",", "i"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ga", ".", 
             RowBox[{
             "roots", "\[LeftDoubleBracket]", "k", 
              "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", "i",
            "\[RightDoubleBracket]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "rank"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"[", 
           RowBox[{"e\[Lambda]i", ",", "e\[Lambda]j"}], "]"}], "=", 
          RowBox[{"\[Epsilon]", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]i", ",", "\[Lambda]j"}], ")"}], " ", "e", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]i", "+", "\[Lambda]j"}], ")"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"where", " ", "\[Alpha]"}], "=", 
          RowBox[{
           RowBox[{"\\", "sum"}], " ", "\[Alpha]i\[Lambda]i"}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "negaRoots", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], "\[Equal]", "j"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pos", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"roots", ",", 
             RowBox[{
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "+", 
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}]}], "]"}], "//", "Flatten"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"k", "=", 
          RowBox[{
          "pos", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Aijk", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"i", "+", "rank"}], ",", 
            RowBox[{"j", "+", "rank"}], ",", 
            RowBox[{"k", "+", "rank"}]}], "\[RightDoubleBracket]"}], "=", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            ".", 
            RowBox[{"Transpose", "[", "ga", "]"}], ".", "bi", ".", "ga", ".", 
            
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}]]}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "roots", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"The", " ", "output", " ", "is", " ", "Aijk"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "Aijk"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.833425353055963*^9, 3.833425417096183*^9}, {
   3.833425459895051*^9, 3.833425490384984*^9}, {3.833615285402247*^9, 
   3.833615324608152*^9}, {3.8336153982884293`*^9, 3.8336154166846123`*^9}, {
   3.833615537014782*^9, 3.833615544065864*^9}, {3.833616426302259*^9, 
   3.833616440817749*^9}, {3.833616603876246*^9, 3.833616647344692*^9}, {
   3.833618244504212*^9, 3.833618250772841*^9}, {3.8336183807285137`*^9, 
   3.833618382920438*^9}, {3.833618454001773*^9, 3.833618468309578*^9}, {
   3.833618570722412*^9, 3.8336186692014837`*^9}, {3.833618751256617*^9, 
   3.833618757379552*^9}, {3.8336187884799747`*^9, 3.833618822091107*^9}, {
   3.8336189387596283`*^9, 3.833618994139073*^9}, {3.8336190544373083`*^9, 
   3.833619055211546*^9}, {3.833619157384328*^9, 3.8336191795673733`*^9}, {
   3.833619217547299*^9, 3.833619272413577*^9}, {3.833619424880084*^9, 
   3.83361946330897*^9}, {3.83361971248415*^9, 3.833619712719367*^9}, {
   3.8336197818870687`*^9, 3.833619782667922*^9}, {3.8336198151995173`*^9, 
   3.833619863505169*^9}, {3.833619897182143*^9, 3.8336199228997917`*^9}, {
   3.8336200355578957`*^9, 3.833620072227807*^9}, {3.8336201268126802`*^9, 
   3.833620162561121*^9}, 3.833620196557632*^9, {3.8336202796040707`*^9, 
   3.833620280451301*^9}, 3.833620331568802*^9, {3.833620382823372*^9, 
   3.833620391159527*^9}, {3.833620660438731*^9, 3.833620679750812*^9}, {
   3.833620712931018*^9, 3.833620714877138*^9}, {3.8336207837813263`*^9, 
   3.833620936833086*^9}, {3.833621028152833*^9, 3.833621055734527*^9}, {
   3.833621087893277*^9, 3.833621125241609*^9}, {3.833621173610894*^9, 
   3.833621194638126*^9}, {3.833621231787601*^9, 3.833621246357348*^9}, {
   3.833621321674239*^9, 3.833621378667966*^9}, 3.833677230450266*^9, 
   3.833677263576091*^9, {3.833677295634877*^9, 3.833677328147594*^9}, {
   3.833677385825775*^9, 3.833677387872974*^9}, {3.833677509456771*^9, 
   3.833677510532024*^9}, {3.833677585241238*^9, 3.8336776412865067`*^9}, {
   3.8336776806204767`*^9, 3.8336780088478203`*^9}, {3.833678073965535*^9, 
   3.833678207124721*^9}, {3.8336782789834642`*^9, 3.833678317143724*^9}, {
   3.833678349089388*^9, 3.833678361893281*^9}, {3.833678393776025*^9, 
   3.833678467923706*^9}, {3.8336788437186747`*^9, 3.833678881405765*^9}, {
   3.833679084824491*^9, 3.833679095642274*^9}, {3.833679359102911*^9, 
   3.8336794056588173`*^9}, {3.833679491215543*^9, 3.833679499460495*^9}, {
   3.833679899288835*^9, 3.8336799641080027`*^9}, {3.833680004655489*^9, 
   3.833680097494275*^9}, {3.8336801709369297`*^9, 3.833680243220557*^9}, {
   3.833680318888793*^9, 3.833680390588483*^9}, {3.8336804275409193`*^9, 
   3.833680466357471*^9}, {3.833680612643813*^9, 3.833680613442108*^9}, 
   3.8336809857462387`*^9, {3.833681135243782*^9, 3.8336811728977003`*^9}, 
   3.83368135118717*^9, 3.833681683140641*^9, {3.833681831748826*^9, 
   3.833681859076041*^9}, {3.8637101389716673`*^9, 3.863710139673435*^9}, {
   3.87404350204032*^9, 3.874043531277721*^9}, {3.874043565731008*^9, 
   3.874043647046208*^9}, {3.874043734461905*^9, 3.874043859689399*^9}, {
   3.874043915706646*^9, 3.87404401757767*^9}, {3.874044098350978*^9, 
   3.874044138058298*^9}, 3.874044270768503*^9, {3.8740443604841833`*^9, 
   3.874044385600154*^9}, {3.874044440679776*^9, 3.874044686403592*^9}, {
   3.874044849652961*^9, 3.874044927232196*^9}, {3.874044969603435*^9, 
   3.874045006070776*^9}, {3.874045067353979*^9, 3.8740452965051327`*^9}, {
   3.8740453361078*^9, 3.874045338475642*^9}, {3.874045491053508*^9, 
   3.874045581189251*^9}, {3.8740457322747307`*^9, 3.874045745889789*^9}, {
   3.874045795184174*^9, 3.8740460246516457`*^9}, 3.874046518145071*^9, {
   3.874046562605899*^9, 3.87404656744062*^9}, {3.8740544169445543`*^9, 
   3.874054417397032*^9}, {3.874073265622012*^9, 3.8740732812363997`*^9}, {
   3.87517768654793*^9, 3.875177689164523*^9}, {3.875339762778212*^9, 
   3.875339765861272*^9}, 3.8757703477178392`*^9, 3.877012822050973*^9, {
   3.877012923616488*^9, 3.877012945499702*^9}, {3.8770131135128613`*^9, 
   3.87701314335951*^9}, 3.877013183821939*^9, 3.877013220053646*^9, {
   3.877013250500737*^9, 3.8770132511335373`*^9}, {3.877013296860882*^9, 
   3.877013395110149*^9}, {3.877013435189602*^9, 3.8770134378198223`*^9}, 
   3.877013471736381*^9},
 CellLabel->
  "In[285]:=",ExpressionUUID->"f57dc4b4-a0df-43b3-b218-5348457e1997"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$NonSimplyLacedCommutator\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSimplyLacedCommutator", "::", "tag"}], "=", 
   "\"\<Commu\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSimplyLacedCommutator", "::", "input"}], "=", 
   "\"\<A simple Lie algebra s of type C, B or F.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSimplyLacedCommutator", "::", "output"}], "=", 
   "\"\<A 3-tensor vauled in the integers.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSimplyLacedCommutator", "::", "description"}], "=", 
    "\"\<See Flocci$Commutators.\>\""}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSimplyLacedCommutator", "[", "s_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rank", ",", "ca", ",", "roots", ",", "supAlg", ",", "\[Sigma]", ",", 
       "supRank", ",", "supca", ",", "supga", ",", "\[CapitalDelta]0", ",", 
       "supRoots", ",", "\[CapitalPhi]0", ",", "\[Tau]", ",", "s1", ",", "s2",
        ",", "Ch", ",", "Ce", ",", "t\[Lambda]", ",", "CeIndex", ",", "C", 
       ",", "AijkSup", ",", "Aijk1", ",", "Aijk", ",", "Cp", ",", "Asupp", 
       ",", "AS2", ",", "AijkToSolve", ",", "LiSol", ",", "AijkValues"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "get", " ", "relevent", " ", "data", " ", "for", " ", "our",
         " ", "algebra"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rank", "=", 
       RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"Flocci$Roots", "[", 
        RowBox[{"{", "s", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ca", "=", 
       RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "form", " ", "the", " ", "sup", " ", "algebra"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"supAlg", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<A\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"2", "rank"}], "-", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<D\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"rank", "+", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "E6"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"supRank", "=", 
       RowBox[{"Flocci$Rank", "[", "supAlg", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supca", "=", 
       RowBox[{"Flocci$CartanMatrix", "[", "supAlg", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supga", "=", 
       RowBox[{"Flocci$MetricTensor", "[", "supAlg", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"supRoots", "=", 
       RowBox[{"Flocci$Roots", "[", 
        RowBox[{"{", "supAlg", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "want", " ", "to", " ", "construct", " ", "the", " ", 
         "embedding", " ", "of", " ", "s", " ", "into", " ", "supAlg"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "start", " ", "by", " ", "constructing", " ", "the", " ", 
         "graph", " ", "automorphisms", " ", "of", " ", "supAlg"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", 
         RowBox[{"supca", ".", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"j", "\[Equal]", 
               RowBox[{"supRank", "+", "1", "-", "i"}]}], ",", "1", ",", 
              "0"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "supRank"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "supRank"}], "}"}]}], "]"}], ".", 
          "supga"}], ",", 
         RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", 
         RowBox[{"supca", ".", 
          RowBox[{"Permute", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", "supRank", "]"}], ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"supRank", "-", "1"}], ",", "supRank"}], "}"}], "}"}],
              "]"}]}], "]"}], ".", "supga"}], ",", 
         RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", 
         RowBox[{"supca", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
             "}"}]}], "}"}], ".", "supga"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"We", " ", "form", " ", "the", " ", "set", " ", 
          RowBox[{
           SubscriptBox["\[CapitalDelta]", 
            RowBox[{"[", "0", "]"}]], ".", " ", "This"}], " ", "is", " ", 
          "isomorphic", " ", "to", " ", 
          RowBox[{
           RowBox[{"\[CapitalLambda]", "[", "s", "]"}], ".", " ", "By"}], " ",
           "thinking", " ", "about", " ", "scalar", " ", "products"}], ",", 
         " ", 
         RowBox[{
         "it", " ", "is", " ", "easty", " ", "to", " ", "see", " ", "that", 
          " ", "the", " ", "ordering", " ", "below", " ", "gives", " ", "the",
           " ", "correct", " ", "correspondence"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[CapitalDelta]0", "=", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"#", "+", 
              RowBox[{"\[Sigma]", ".", "#"}]}], ")"}]}], "&"}], ",", 
          "supca"}], "]"}], "//", "DeleteDuplicates"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", 
        RowBox[{"\[CapitalDelta]0", "=", 
         RowBox[{"Reverse", "[", "\[CapitalDelta]0", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "form", " ", "the", " ", "set", " ", 
         RowBox[{
          SubscriptBox["\[CapitalPhi]", 
           RowBox[{"[", "0", "]"}]], ".", " ", "This"}], " ", "is", " ", 
         "isomorphic", " ", "to", " ", 
         RowBox[{
          RowBox[{"\[CapitalPhi]", "[", "s", "]"}], ".", " ", "We"}], " ", 
         "keep", " ", "track", " ", 
         RowBox[{"of", " ", "\\", "tilde"}], " ", "lambda", " ", "which", " ",
          "forms", " ", "this", " ", "entry"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPhi]0", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{"#", "+", 
                 RowBox[{"\[Sigma]", ".", "#"}]}], ")"}]}], ",", "#"}], "}"}],
             "&"}], ",", "supRoots"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "==", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "now", " ", "want", " ", "to", " ", "form", " ", "the", 
         " ", "map", " ", "\[Tau]", " ", "between", " ", "root", " ", 
         "systems"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"s1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Length", "[", "ca", "]"}]}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Array", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Length", "[", "ca", "]"}]}], "]"}], ".", "ca"}], 
             "\[Equal]", "r"}], "]"}], "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "roots"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Length", "[", "\[CapitalDelta]0", "]"}]}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Array", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Length", "[", "\[CapitalDelta]0", "]"}]}], "]"}], 
              ".", "\[CapitalDelta]0"}], "\[Equal]", 
             RowBox[{
             "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "\[CapitalPhi]0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"s2", ",", "si"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"si", ",", "s1"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "We", " ", "now", " ", "construct", " ", "the", " ", "change", " ", 
          "of", " ", "basis", " ", "matrix"}], ",", " ", 
         RowBox[{"which", " ", "we", " ", "denote", " ", "C"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"For", " ", "the", " ", 
         RowBox[{"h", "'"}], "s", " ", "we", " ", "have", " ", 
         SubscriptBox["h", 
          RowBox[{"\[Tau]", 
           SuperscriptBox[
            RowBox[{"(", "\[Lambda]", ")"}], "v"]}]]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Ch", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"a", ",", 
            RowBox[{"Length", "[", "supca", "]"}]}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Array", "[", 
               RowBox[{"a", ",", 
                RowBox[{"Length", "[", "supca", "]"}]}], "]"}], ".", 
              "supca"}], "\[Equal]", 
             FractionBox[
              RowBox[{"2", "t\[Lambda]"}], 
              RowBox[{
               RowBox[{"Flocci$ScalarProduct", "[", "supAlg", "]"}], "[", 
               RowBox[{"t\[Lambda]", ",", "t\[Lambda]"}], "]"}]]}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t\[Lambda]", ",", "\[CapitalDelta]0"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"For", " ", "the", " ", 
          RowBox[{"e", "'"}], "s", " ", "we", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["have",
              FontColor->RGBColor[1, 0.5, 0]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0.5, 0]], 
             SubscriptBox[
              StyleBox["e",
               FontColor->RGBColor[1, 0.5, 0]], "\[Lambda]"]}], "+", 
            RowBox[{
             SubscriptBox["e", 
              RowBox[{"\[Sigma]", ".", "\[Lambda]"}]], " ", "if", " ", 
             "\[Lambda]"}]}], "\[NotEqual]", " ", "\[Sigma]\[Lambda]"}]}], 
         ",", " ", 
         RowBox[{"or", " ", 
          SubscriptBox["e", "\[Lambda]"], " ", "otherwise"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"CeIndex", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"t\[Lambda]", "=", 
             RowBox[{"\[CapitalPhi]0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "\[Tau]", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", "2"}], 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t\[Lambda]", "\[Equal]", " ", 
               RowBox[{"\[Sigma]", ".", "t\[Lambda]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", "t\[Lambda]"}], "]"}], "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], "\[Rule]", " ", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", "t\[Lambda]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                  "}"}], "\[Rule]", " ", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", 
                    RowBox[{"\[Sigma]", ".", "t\[Lambda]"}]}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                  "}"}], "\[Rule]", " ", "1"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ce", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"CeIndex", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "roots", "]"}], ",", 
            RowBox[{"Length", "[", "supRoots", "]"}]}], "}"}]}], "]"}], "//", 
        "Normal"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "now", " ", "construct", " ", "the", " ", "full", " ", 
         "change", " ", "of", " ", "basis", " ", "matrix"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Ch", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Ce"}], "}"}]}], "}"}], "//", "ArrayFlatten"}], 
        "//", "SparseArray"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "construct", " ", "the", " ", "commutator", " ", "matrix", 
         " ", "based", " ", "on", " ", "that", " ", "of", " ", "the", " ", 
         "sup", " ", "algebra"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AijkSup", "=", 
       RowBox[{"Flocci$SimplyLacedCommutators", "[", "supAlg", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"We", " ", "want", " ", "to", " ", "multiply", " ", 
          RowBox[{"C", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "i\[Prime]"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"C", "\[LeftDoubleBracket]", 
           RowBox[{"j", ",", "j\[Prime]"}], "\[RightDoubleBracket]"}], 
          RowBox[{"AijkSup", "\[LeftDoubleBracket]", 
           RowBox[{"i\[Prime]", ",", "j\[Prime]"}], 
           "\[RightDoubleBracket]"}]}], ",", " ", 
         RowBox[{
         "but", " ", "will", " ", "do", " ", "it", " ", "by", " ", "sparse", 
          " ", 
          RowBox[{"arrays", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Asupp", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", "AijkSup", "]"}], "[", 
        "\"\<NonzeroPositions\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AS2", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Asupp", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], "//",
             "DeleteDuplicates"}], ")"}], "/.", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x_", ",", "y_"}], "}"}], "\[RuleDelayed]", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", " ", 
            RowBox[{"a", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "AijkSup", "]"}], ",", 
           RowBox[{"Length", "[", "AijkSup", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Aijk1", "=", 
       RowBox[{"C", ".", "AS2", ".", 
        RowBox[{"Transpose", "[", "C", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "For", " ", "the", " ", "third", " ", "index", " ", "we", " ", "need",
          " ", "to", " ", "solve", " ", "equations"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AijkToSolve", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
         "\"\<NonzeroValues\>\"", "]"}], "/.", " ", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"i_", ",", "j_"}], "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"AijkSup", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AijkValues", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"LinearSolve", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "C", "]"}], ",", 
           RowBox[{
           "AijkToSolve", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "AijkToSolve", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "make", " ", "the", " ", "matrix"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Aijk", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}], ",", 
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}], ",", 
           RowBox[{"rank", "+", 
            RowBox[{"Length", "[", "roots", "]"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Aijk", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
             "\"\<NonzeroPositions\>\"", "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
             "\"\<NonzeroPositions\>\"", "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{
         "AijkValues", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "AijkValues", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "Aijk"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$NonSimplyLacedCommutator", "[", "F4", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8740468112574053`*^9, 3.874046839297955*^9}, {
   3.8740468835289993`*^9, 3.874047042476852*^9}, 3.874047079541595*^9, {
   3.874047241811924*^9, 3.874047285228442*^9}, {3.87404732353974*^9, 
   3.874047528846839*^9}, {3.874047618671505*^9, 3.8740477987513866`*^9}, {
   3.874047961694199*^9, 3.874047965516717*^9}, 3.874047999472337*^9, {
   3.8740480884795513`*^9, 3.874048094973939*^9}, {3.874048337932004*^9, 
   3.87404844375646*^9}, {3.8740486873354063`*^9, 3.874048926347505*^9}, {
   3.874048982469329*^9, 3.87404924562315*^9}, {3.874049328577413*^9, 
   3.874049373865095*^9}, {3.874049407016626*^9, 3.874049710453554*^9}, {
   3.874049742341*^9, 3.874050034621613*^9}, {3.8740500747149353`*^9, 
   3.874050246578455*^9}, {3.874050376685895*^9, 3.8740506052101917`*^9}, {
   3.874050753929965*^9, 3.874050764099004*^9}, {3.8740512169739943`*^9, 
   3.8740512684837093`*^9}, {3.8740514299426203`*^9, 3.874051463235199*^9}, {
   3.874051495475725*^9, 3.874051525290853*^9}, 3.874051572170244*^9, 
   3.874051609094103*^9, {3.874051652791812*^9, 3.874051759967114*^9}, {
   3.874051875937001*^9, 3.874051885886902*^9}, 3.8740519804815207`*^9, {
   3.874052265112178*^9, 3.874052265334672*^9}, {3.874052382729869*^9, 
   3.874052412015695*^9}, {3.8740524433369007`*^9, 3.8740530207791147`*^9}, {
   3.874053052944619*^9, 3.874053397662335*^9}, {3.874053652793104*^9, 
   3.874053742037681*^9}, {3.874053789964237*^9, 3.874053820670786*^9}, {
   3.874054410962919*^9, 3.874054411212381*^9}, {3.874071530825157*^9, 
   3.874071537690054*^9}, {3.874071585994437*^9, 3.874071588593399*^9}, {
   3.874071629947117*^9, 3.8740716855005713`*^9}, {3.874071716053196*^9, 
   3.8740717479760427`*^9}, {3.87407189586543*^9, 3.874071942081099*^9}, {
   3.874071975770157*^9, 3.874072016505557*^9}, {3.874072219586635*^9, 
   3.874072238212668*^9}, {3.874073341712043*^9, 3.874073342104496*^9}, {
   3.8751776928300667`*^9, 3.8751776954978857`*^9}, {3.875339771306658*^9, 
   3.8753397742331963`*^9}, {3.875770353215788*^9, 3.87577035986005*^9}, 
   3.877012950971175*^9, {3.877013494404285*^9, 3.877013586490418*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"1235ce15-1111-499a-8661-95fada837681"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TagBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}],
          Short[#, 5]& ],
         BaseStyle->{Deployed -> False},
         StripOnInput->False]},
       {GridBox[{
          {
           PaneBox[
            TagBox[
             TooltipBox[
              StyleBox[
               StyleBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "FEStrings", "sizeBriefExplanation"], TraditionalForm],
                 ImageSizeCache->{59., {2., 8.}}],
                StripOnInput->False,
                DynamicUpdating->True,
                LineSpacing->{1, 2},
                LineIndent->0,
                LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
               StripOnInput->False],
              StyleBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                 TraditionalForm]], DynamicUpdating -> True, LineIndent -> 0, 
               LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
               LineSpacing -> {1, 2}, StripOnInput -> False]],
             Annotation[#, 
              Style[
               Dynamic[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
               DynamicUpdating -> True, LineIndent -> 0, 
               LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
               LineSpacing -> {1, 2}], "Tooltip"]& ],
            Alignment->Center,
            BaselinePosition->Baseline,
            ImageSize->{Automatic, {25, Full}}], 
           ButtonBox[
            PaneSelectorBox[{False->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                 TraditionalForm],
                ImageSizeCache->{51., {0., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
              StripOnInput->False], True->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                 TraditionalForm]],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
              StripOnInput->False]}, Dynamic[
              CurrentValue["MouseOver"]],
             Alignment->Center,
             FrameMargins->0,
             ImageSize->{Automatic, {25, Full}}],
            Appearance->None,
            BaselinePosition->Baseline,
            
            ButtonFunction:>OutputSizeLimit`ButtonFunction[
             OutputSizeLimit`Defer, 297, 30972929540371077001, 5/2],
            Enabled->True,
            Evaluator->Automatic,
            Method->"Queued"], 
           ButtonBox[
            PaneSelectorBox[{False->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                 TraditionalForm],
                ImageSizeCache->{56., {0., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
              StripOnInput->False], True->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                 TraditionalForm]],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
              StripOnInput->False]}, Dynamic[
              CurrentValue["MouseOver"]],
             Alignment->Center,
             FrameMargins->0,
             ImageSize->{Automatic, {25, Full}}],
            Appearance->None,
            BaselinePosition->Baseline,
            
            ButtonFunction:>OutputSizeLimit`ButtonFunction[
             OutputSizeLimit`Defer, 297, 30972929540371077001, 5 2],
            Enabled->True,
            Evaluator->Automatic,
            Method->"Queued"], 
           ButtonBox[
            PaneSelectorBox[{False->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                 TraditionalForm],
                ImageSizeCache->{42., {0., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
              StripOnInput->False], True->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                 TraditionalForm]],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
              StripOnInput->False]}, Dynamic[
              CurrentValue["MouseOver"]],
             Alignment->Center,
             FrameMargins->0,
             ImageSize->{Automatic, {25, Full}}],
            Appearance->None,
            BaselinePosition->Baseline,
            
            ButtonFunction:>OutputSizeLimit`ButtonFunction[
             OutputSizeLimit`Defer, 297, 30972929540371077001, Infinity],
            Enabled->True,
            Evaluator->Automatic,
            Method->"Queued"], 
           ButtonBox[
            PaneSelectorBox[{False->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                 TraditionalForm],
                ImageSizeCache->{77., {0., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
              StripOnInput->False], True->
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                 TraditionalForm]],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
              StripOnInput->False]}, Dynamic[
              CurrentValue["MouseOver"]],
             Alignment->Center,
             FrameMargins->0,
             ImageSize->{Automatic, {25, Full}}],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>FrontEndExecute[{
               FrontEnd`SetOptions[
               FrontEnd`$FrontEnd, 
                FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
               FrontEnd`FrontEndToken["PreferencesDialog"]}],
            Evaluator->None,
            Method->"Preemptive"]}
         },
         AutoDelete->False,
         FrameStyle->GrayLevel[0.85],
         GridBoxDividers->{"Columns" -> {False, {True}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{2}}}]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     BaseStyle->"OutputSizeLimit",
     FrameMargins->{{12, 12}, {0, 15}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   If[30972929540371077001 === $SessionID, 
    Out[297], Message[
      MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; Null]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.87407169671541*^9, 3.87407171844825*^9}, 
   3.8740717505130243`*^9, {3.874071903402907*^9, 3.87407194444517*^9}, {
   3.874071982556278*^9, 3.87407201885036*^9}, 3.8740722466049223`*^9, 
   3.874073287996542*^9, 3.874073346070786*^9, 3.874575545175098*^9, 
   3.874583320494735*^9, 3.874583972556273*^9, 3.874584174724367*^9, 
   3.8745843176187057`*^9, 3.874588012838727*^9, 3.8746618665768557`*^9, 
   3.874718801273479*^9, 3.8747350894336243`*^9, 3.874995641852107*^9, 
   3.8750054526344757`*^9, 3.875021803243339*^9, 3.875086319868106*^9, 
   3.875086560501335*^9, 3.875086608398348*^9, 3.8750867861672173`*^9, 
   3.875174037893746*^9, 3.875177774768751*^9, 3.8751786079829607`*^9, 
   3.875201888021427*^9, 3.875249934680357*^9, 3.875339872554112*^9, 
   3.875341017238957*^9, 3.8755954553702593`*^9, 3.87559612674087*^9, 
   3.875597684141182*^9, 3.8755980445532713`*^9, 3.875600765718464*^9, 
   3.875601994714263*^9, 3.875602604095129*^9, 3.87560322965779*^9, 
   3.87560493212875*^9, 3.875606516260293*^9, 3.8756069751474323`*^9, 
   3.8756084465062027`*^9, 3.8756097097145576`*^9, 3.8756107787036*^9, 
   3.875681940326152*^9, 3.875683837670271*^9, 3.8756871296581173`*^9, 
   3.875687258318184*^9, 3.875687326028908*^9, 3.875687620824004*^9, 
   3.875771344574975*^9, 3.8758559099518747`*^9, 3.8764886503131113`*^9, 
   3.876581496030884*^9, 3.8765821296676407`*^9, 3.87658310356637*^9, 
   3.8765831897877703`*^9, 3.876644484236204*^9, 3.876819391004387*^9, 
   3.876820379668274*^9, 3.876824450972274*^9, 3.876827652144315*^9, 
   3.876926378143126*^9, 3.876926804505513*^9, 3.8769290947672577`*^9, 
   3.876997267910934*^9, 3.8769977704376917`*^9, 3.8769980231954117`*^9, 
   3.876998378206637*^9, 3.876998554639819*^9, 3.876999665664547*^9, 
   3.876999845161853*^9, 3.877013892156047*^9, 3.877069632448625*^9, 
   3.877069722129127*^9, 3.8770708524250717`*^9, 3.8770715739847097`*^9, 
   3.877073763993417*^9, 3.877078221091929*^9, 3.8770793161220093`*^9, 
   3.877096816081017*^9, 3.877097585975937*^9, 3.877154499256143*^9, 
   3.877156562112256*^9, 3.877414069278249*^9, 3.877415418556363*^9, 
   3.877415695239624*^9, 3.87741602046273*^9, 3.8774178224268103`*^9, 
   3.877418092313985*^9, 3.877420426273464*^9, 3.8774208204765453`*^9, 
   3.877421147116377*^9, 3.87742146836561*^9, 3.877767947803255*^9, 
   3.877768057888281*^9, 3.877768214241622*^9, 3.8777683464413357`*^9, 
   3.877768433134829*^9, 3.8777685311779833`*^9, 3.877770010004974*^9, 
   3.878025002181807*^9, 3.878025431671467*^9, 3.878029718665902*^9, 
   3.878030186326584*^9, 3.878051774148198*^9, 3.878052275631344*^9, 
   3.878054287515758*^9, 3.878054450328045*^9, 3.878988478439015*^9, 
   3.879322071404652*^9, 3.879327146920998*^9, 3.879329727376495*^9, 
   3.879833046824174*^9, 3.8798350690815773`*^9, 3.8798485216538887`*^9, 
   3.87984878157677*^9, 3.879849714950376*^9, 3.879849779791704*^9, 
   3.879849844158807*^9, 3.879849975759018*^9, 3.879850115876911*^9, 
   3.87985146808397*^9, 3.879857822564842*^9, 3.8798587088040247`*^9, 
   3.879859093586076*^9, 3.879863696970797*^9, 3.879938238843014*^9, 
   3.879949358266327*^9, 3.879951174069622*^9, 3.879951275914762*^9, 
   3.879953833879167*^9, 3.880189659944762*^9, 3.880213064782132*^9, 
   3.880213145947412*^9, 3.881486067524984*^9, 3.8814925097855597`*^9, 
   3.881492656600469*^9, 3.881493150761231*^9, 3.881493281602992*^9, 
   3.881494125723444*^9, 3.882520973538973*^9, 3.8825395373497553`*^9, 
   3.882541708261903*^9, 3.882857106766548*^9, 3.882858197818245*^9, 
   3.8830667064309263`*^9, 3.890728479309291*^9, 3.890728621429874*^9, 
   3.890804238174217*^9, 3.890804354013715*^9, 3.890804551407164*^9, 
   3.890804876695496*^9, 3.890811780304537*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"1d1b9cf6-4883-4616-a63d-77350699c4cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878029960292663*^9, 3.878029963744939*^9}, 
   3.878030006115078*^9},ExpressionUUID->"a4027ea3-9fb9-4ae0-a2ab-\
f37932a90c66"],

Cell[BoxData[
 FormBox["$Aborted", TraditionalForm]], "Output",
 CellChangeTimes->{{3.878029961098568*^9, 3.878029989690774*^9}},
 CellLabel->
  "Out[809]=",ExpressionUUID->"d845f260-0cbd-41e0-8c43-08ef88516b01"]
}, Open  ]],

Cell["For G2, we follow Mitzmann page~77: ", "Text",
 CellChangeTimes->{{3.874070799097529*^9, 
  3.8740708220964413`*^9}},ExpressionUUID->"ad6f9892-7993-4398-92f7-\
a6e70b412dc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   StyleBox[
    RowBox[{
     RowBox[{"For", " ", "G2"}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "follow", " ", "Mitzmann", " ", 
       RowBox[{"page", "~", "77."}], " ", "First", " ", "we", " ", "need", 
       " ", "to", " ", "construct", " ", "the", " ", "commutators", " ", "of",
        " ", "D4", " ", "based", " ", "on", " ", "a", " ", "special", " ", 
       RowBox[{"\[Epsilon]", ".", " ", "The"}], " ", "method", " ", "here", 
       " ", "is", " ", "very", " ", "similar", " ", "to", " ", "the", " ", 
       "above", " ", "except", " ", "we", " ", "use", " ", "a", " ", 
       "order"}], "-", 
      RowBox[{
      "3", " ", "automorphism", " ", "rather", " ", "then", " ", "an", " ", 
       "order", " ", "2"}], "-", 
      RowBox[{"automorphism", "."}]}]}],
    FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", "\"\<Flocci$CommutatorD4\>\"", "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorD4", "::", "tag"}], "=", "\"\<Commu\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorD4", "::", "input"}], "=", "\"\<-\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorD4", "::", "output"}], "=", 
     "\"\<A specific integer 3-tensor.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorD4", "::", "description"}], "=", 
     "\"\<See Flocci$Commutators. Commutator of D4 using a specific \
\[Epsilon] such that the commutator of G2 can be found. See Mitzmann page 77.\
\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$CommutatorD4", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "rank", ",", "bi", ",", "orded", ",", "ca", ",", "ga", ",", "Aijk", 
         ",", "roots", ",", "negaRoots", ",", "pos", ",", "k", ",", "s"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "=", "D4"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "first", " ", "get", " ", "some", " ", "relevent", " ", 
           "information", " ", "about", " ", "the", " ", "algebra", " ", "s"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"rank", "=", 
         RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ca", "=", 
         RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ga", "=", 
         RowBox[{"Flocci$MetricTensor", "[", "s", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"roots", "=", 
         RowBox[{"Flocci$Roots", "[", 
          RowBox[{"{", "s", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"negaRoots", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"roots", ",", 
              RowBox[{"-", "r"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "roots"}], "}"}]}], "]"}], "//", "Flatten"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "need", " ", "to", " ", "ensure", " ", "invariance", " ",
            "under", " ", "outer", " ", "automorphisms", " ", "of", " ", 
           "this", " ", "operators", " ", "for", " ", "A", " ", "with", " ", 
           "odd", " ", "rank", " ", "and", " ", 
           RowBox[{"D", ".", " ", "For"}], " ", "this", " ", "we", " ", 
           "need", " ", "to", " ", "change", " ", "the", " ", "ordering", " ",
            "for", " ", "the", " ", "A", " ", "case"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"orded", "=", 
         RowBox[{"Range", "[", "rank", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], "&&", " ", 
           RowBox[{"OddQ", "[", "rank", "]"}]}], ",", 
          RowBox[{"orded", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"rank", "+", "1", "-", "i"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"rank", "/", "2"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"OddQ", "[", "rank", "]"}], ",", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{"rank", "/", "2"}], "]"}], "+", "1"}], ",", 
                "Nothing"}], "]"}]}], "}"}], "//", "Flatten"}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          StyleBox[
           RowBox[{
           "We", " ", "next", " ", "construct", " ", "the", " ", "bilinear", 
            " ", "operator", " ", 
            RowBox[{"bi", ".", " ", "The"}], " ", "bilinear", " ", "operator",
             " ", "\[Epsilon]", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], ")"}]}],
           FontColor->RGBColor[1, 0.5, 0]], 
          StyleBox["=",
           FontColor->RGBColor[1, 0.5, 0]], 
          RowBox[{
           StyleBox["(",
            FontColor->RGBColor[1, 0.5, 0]], 
           StyleBox[
            RowBox[{
             RowBox[{"-", "1"}], 
             SuperscriptBox[")", 
              RowBox[{"\[Lambda]1", ".", 
               SuperscriptBox["ga", "T"], ".", "bi", ".", "ga", ".", 
               "\[Lambda]2"}]]}],
            FontColor->RGBColor[1, 0.5, 0]], " "}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"bi", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "construct", " ", "the", " ", "tensor", " ", "Aijk", 
            " ", "such", " ", 
            RowBox[{"that", " ", "[", 
             RowBox[{"Xi", ",", "Xj"}], "]"}]}], "=", 
           RowBox[{"Aijk", " ", "Xk"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Aijk", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}], ",", 
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}], ",", 
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"[", 
            RowBox[{"h\[Lambda]i", ",", "e\[Alpha]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Lambda]i", ",", "\[Alpha]"}], ")"}], " ", 
            "e\[Alpha]"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Aijk", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", 
              RowBox[{"rank", "+", "k"}], ",", 
              RowBox[{"rank", "+", "k"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
             RowBox[{
              RowBox[{
              "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Aijk", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"rank", "+", "k"}], ",", "i", ",", 
              RowBox[{"rank", "+", "k"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
              RowBox[{
               RowBox[{
               "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{
               "roots", "\[LeftDoubleBracket]", "k", 
                "\[RightDoubleBracket]"}]}], "]"}]}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "rank"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
            RowBox[{"[", 
             RowBox[{"e\[Alpha]", ",", 
              RowBox[{"e", "-", "\[Alpha]"}]}], "]"}], "=", 
            RowBox[{
             RowBox[{"-", "h\[Alpha]"}], "=", 
             RowBox[{
              RowBox[{"-", "\[Alpha]i"}], " ", "hi"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{"where", " ", "\[Alpha]"}], "=", 
            RowBox[{
             RowBox[{"\\", "sum"}], " ", "\[Alpha]i\[Lambda]i"}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Aijk", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"rank", "+", "k"}], ",", 
             RowBox[{"rank", "+", 
              RowBox[{
              "negaRoots", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}]}], ",", "i"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ga", ".", 
               RowBox[{
               "roots", "\[LeftDoubleBracket]", "k", 
                "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
             "i", "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "rank"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
            RowBox[{"[", 
             RowBox[{"e\[Lambda]i", ",", "e\[Lambda]j"}], "]"}], "=", 
            RowBox[{"\[Epsilon]", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]i", ",", "\[Lambda]j"}], ")"}], " ", "e", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]i", "+", "\[Lambda]j"}], ")"}]}]}], ",", " ", 
           
           RowBox[{
            RowBox[{"where", " ", "\[Alpha]"}], "=", 
            RowBox[{
             RowBox[{"\\", "sum"}], " ", "\[Alpha]i\[Lambda]i"}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "negaRoots", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "\[Equal]", "j"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"roots", ",", 
               RowBox[{
                RowBox[{
                "roots", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "+", 
                RowBox[{
                "roots", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}]}], "]"}], "//", "Flatten"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"k", "=", 
            RowBox[{
            "pos", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Aijk", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "rank"}], ",", 
              RowBox[{"j", "+", "rank"}], ",", 
              RowBox[{"k", "+", "rank"}]}], "\[RightDoubleBracket]"}], "=", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               ".", 
              RowBox[{"Transpose", "[", "ga", "]"}], ".", "bi", ".", "ga", 
              ".", 
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}]]}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "roots", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"The", " ", "output", " ", "is", " ", "Aijk"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        "Aijk"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", "\"\<Flocci$CommutatorG2\>\"", "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorG2", "::", "tag"}], "=", "\"\<Commu\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorG2", "::", "input"}], "=", "\"\<-\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorG2", "::", "output"}], "=", 
     "\"\<A specific integer 3-tensor.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$CommutatorG2", "::", "description"}], "=", 
     "\"\<See Flocci$Commutators. Commutator of G2. See Mitzmann page \
77.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$CommutatorG2", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "rank", ",", "s", ",", "ca", ",", "roots", ",", "supAlg", ",", 
         "\[Sigma]", ",", "supRank", ",", "supca", ",", "supga", ",", 
         "\[CapitalDelta]0", ",", "supRoots", ",", "\[CapitalPhi]0", ",", 
         "\[Tau]", ",", "s1", ",", "s2", ",", "Ch", ",", "Ce", ",", 
         "t\[Lambda]", ",", "CeIndex", ",", "C", ",", "AijkSup", ",", "Aijk1",
          ",", "Aijk", ",", "Cp", ",", "Asupp", ",", "AS2", ",", 
         "AijkToSolve", ",", "LiSol", ",", "AijkValues"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "=", "G2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "get", " ", "relevent", " ", "data", " ", "for", " ", 
           "our", " ", "algebra"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"rank", "=", 
         RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"roots", "=", 
         RowBox[{"Flocci$Roots", "[", 
          RowBox[{"{", "s", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ca", "=", 
         RowBox[{"Flocci$CartanMatrix", "[", "s", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"We", " ", "form", " ", "the", " ", "sup", " ", "algebra"}],
          
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"supAlg", "=", "D4"}], ";", "\[IndentingNewLine]", 
        RowBox[{"supRank", "=", 
         RowBox[{"Flocci$Rank", "[", "supAlg", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supca", "=", 
         RowBox[{"Flocci$CartanMatrix", "[", "supAlg", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supga", "=", 
         RowBox[{"Flocci$MetricTensor", "[", "supAlg", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"supRoots", "=", 
         RowBox[{"Flocci$Roots", "[", 
          RowBox[{"{", "supAlg", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "want", " ", "to", " ", "construct", " ", "the", " ", 
           "embedding", " ", "of", " ", "s", " ", "into", " ", "supAlg"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "start", " ", "by", " ", "constructing", " ", "the", " ",
            "graph", " ", "automorphisms", " ", "of", " ", "supAlg"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]", "=", 
         RowBox[{"supca", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}], ".",
           "supga"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"We", " ", "form", " ", "the", " ", "set", " ", 
            RowBox[{
             SubscriptBox["\[CapitalDelta]", 
              RowBox[{"[", "0", "]"}]], ".", " ", "This"}], " ", "is", " ", 
            "isomorphic", " ", "to", " ", 
            RowBox[{
             RowBox[{"\[CapitalLambda]", "[", "s", "]"}], ".", " ", "By"}], 
            " ", "thinking", " ", "about", " ", "scalar", " ", "products"}], 
           ",", " ", 
           RowBox[{
           "it", " ", "is", " ", "easty", " ", "to", " ", "see", " ", "that", 
            " ", "the", " ", "ordering", " ", "below", " ", "gives", " ", 
            "the", " ", "correct", " ", "correspondence"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]0", "=", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"#", "+", 
                RowBox[{"\[Sigma]", ".", "#"}], "+", 
                RowBox[{"\[Sigma]", ".", "\[Sigma]", ".", "#"}]}], ")"}]}], 
             "&"}], ",", "supca"}], "]"}], "//", "DeleteDuplicates"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"We", " ", "form", " ", "the", " ", "set", " ", 
           RowBox[{
            SubscriptBox["\[CapitalPhi]", 
             RowBox[{"[", "0", "]"}]], ".", " ", "This"}], " ", "is", " ", 
           "isomorphic", " ", "to", " ", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", "s", "]"}], ".", " ", "We"}], " ", 
           "keep", " ", "track", " ", 
           RowBox[{"of", " ", "\\", "tilde"}], " ", "lambda", " ", "which", 
           " ", "forms", " ", "this", " ", "entry"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\[CapitalPhi]0", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "3"], 
                 RowBox[{"(", 
                  RowBox[{"#", "+", 
                   RowBox[{"\[Sigma]", ".", "#"}], "+", 
                   RowBox[{"\[Sigma]", ".", "\[Sigma]", ".", "#"}]}], ")"}]}],
                 ",", "#"}], "}"}], "&"}], ",", "supRoots"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "==", 
             RowBox[{
             "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "now", " ", "want", " ", "to", " ", "form", " ", "the", 
           " ", "map", " ", "\[Tau]", " ", "between", " ", "root", " ", 
           "systems"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"s1", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Length", "[", "ca", "]"}]}], "]"}], "/.", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Array", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"Length", "[", "ca", "]"}]}], "]"}], ".", "ca"}], 
               "\[Equal]", "r"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "roots"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"s2", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Length", "[", "\[CapitalDelta]0", "]"}]}], "]"}], "/.", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Array", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"Length", "[", "\[CapitalDelta]0", "]"}]}], "]"}], 
                ".", "\[CapitalDelta]0"}], "\[Equal]", 
               RowBox[{
               "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "\[CapitalPhi]0"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Tau]", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"s2", ",", "si"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"si", ",", "s1"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "now", " ", "construct", " ", "the", " ", "change", " ",
             "of", " ", "basis", " ", "matrix"}], ",", " ", 
           RowBox[{"which", " ", "we", " ", "denote", " ", "C"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"For", " ", "the", " ", 
           RowBox[{"h", "'"}], "s", " ", "we", " ", "have", " ", 
           SubscriptBox["h", 
            RowBox[{"\[Tau]", 
             SuperscriptBox[
              RowBox[{"(", "\[Lambda]", ")"}], "v"]}]]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Ch", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Length", "[", "supca", "]"}]}], "]"}], "/.", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Array", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"Length", "[", "supca", "]"}]}], "]"}], ".", 
                "supca"}], "\[Equal]", 
               FractionBox[
                RowBox[{"2", "t\[Lambda]"}], 
                RowBox[{
                 RowBox[{"Flocci$ScalarProduct", "[", "supAlg", "]"}], "[", 
                 RowBox[{"t\[Lambda]", ",", "t\[Lambda]"}], "]"}]]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t\[Lambda]", ",", "\[CapitalDelta]0"}], "}"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"For", " ", "the", " ", 
              RowBox[{"e", "'"}], "s", " ", "we", " ", "have", " ", 
              SubscriptBox[
               StyleBox["e",
                FontColor->RGBColor[1, 0.5, 0]], "\[Lambda]"]}], "+", 
             RowBox[{
              SubscriptBox["e", 
               RowBox[{"\[Sigma]", ".", "\[Lambda]"}]], " ", "if", " ", 
              "\[Lambda]"}]}], "\[NotEqual]", " ", "\[Sigma]\[Lambda]"}], ",",
            " ", 
           RowBox[{"or", " ", 
            SubscriptBox["e", "\[Lambda]"], " ", "otherwise"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"CeIndex", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"t\[Lambda]", "=", 
               RowBox[{"\[CapitalPhi]0", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "\[Tau]", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", "2"}], 
                "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"t\[Lambda]", "\[Equal]", " ", 
                 RowBox[{"\[Sigma]", ".", "t\[Lambda]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", "t\[Lambda]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                   "}"}], "\[Rule]", " ", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", "t\[Lambda]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], "\[Rule]", " ", "1"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", 
                    RowBox[{"\[Sigma]", ".", "t\[Lambda]"}]}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], "\[Rule]", " ", "1"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"supRoots", ",", 
                    RowBox[{
                    "\[Sigma]", ".", "\[Sigma]", ".", "t\[Lambda]"}]}], "]"}],
                     "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "\[Rule]", " ", 
                   "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "roots", "]"}]}], "}"}]}], "]"}], ",", 
           "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Ce", "=", 
         RowBox[{
          RowBox[{"SparseArray", "[", 
           RowBox[{"CeIndex", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "roots", "]"}], ",", 
              RowBox[{"Length", "[", "supRoots", "]"}]}], "}"}]}], "]"}], "//",
           "Normal"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "now", " ", "construct", " ", "the", " ", "full", " ", 
           "change", " ", "of", " ", "basis", " ", "matrix"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"C", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Ch", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "Ce"}], "}"}]}], "}"}], "//", 
           "ArrayFlatten"}], "//", "SparseArray"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "We", " ", "construct", " ", "the", " ", "commutator", " ", 
           "matrix", " ", "based", " ", "on", " ", "that", " ", "of", " ", 
           "the", " ", "sup", " ", "algebra"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AijkSup", "=", "Flocci$CommutatorD4"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"We", " ", "want", " ", "to", " ", "multiply", " ", 
            RowBox[{"C", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i\[Prime]"}], "\[RightDoubleBracket]"}], " ", 
            
            RowBox[{"C", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "j\[Prime]"}], "\[RightDoubleBracket]"}], 
            RowBox[{"AijkSup", "\[LeftDoubleBracket]", 
             RowBox[{"i\[Prime]", ",", "j\[Prime]"}], 
             "\[RightDoubleBracket]"}]}], ",", " ", 
           RowBox[{
           "but", " ", "will", " ", "do", " ", "it", " ", "by", " ", "sparse",
             " ", 
            RowBox[{"arrays", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Asupp", "=", 
         RowBox[{
          RowBox[{"SparseArray", "[", "AijkSup", "]"}], "[", 
          "\"\<NonzeroPositions\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AS2", "=", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Asupp", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
              "//", "DeleteDuplicates"}], ")"}], "/.", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x_", ",", "y_"}], "}"}], "\[RuleDelayed]", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", " ", 
              RowBox[{"a", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "AijkSup", "]"}], ",", 
             RowBox[{"Length", "[", "AijkSup", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Aijk1", "=", 
         RowBox[{"C", ".", "AS2", ".", 
          RowBox[{"Transpose", "[", "C", "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "For", " ", "the", " ", "third", " ", "index", " ", "we", " ", 
           "need", " ", "to", " ", "solve", " ", "equations"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AijkToSolve", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
           "\"\<NonzeroValues\>\"", "]"}], "/.", " ", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"i_", ",", "j_"}], "]"}], "\[RuleDelayed]", " ", 
           RowBox[{"AijkSup", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AijkValues", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"LinearSolve", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "C", "]"}], ",", 
             RowBox[{
             "AijkToSolve", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "AijkToSolve", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"We", " ", "make", " ", "the", " ", "matrix"}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Aijk", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}], ",", 
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}], ",", 
             RowBox[{"rank", "+", 
              RowBox[{"Length", "[", "roots", "]"}]}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Aijk", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
               "\"\<NonzeroPositions\>\"", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SparseArray", "[", "Aijk1", "]"}], "[", 
               "\"\<NonzeroPositions\>\"", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{
           "AijkValues", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "AijkValues", "]"}]}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", "Aijk"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8740708252184067`*^9, 3.874070881914876*^9}, {
  3.874070991061812*^9, 3.874071020836495*^9}, {3.874071076942834*^9, 
  3.874071328091614*^9}, {3.874071368803995*^9, 3.874071373354414*^9}, {
  3.8740714269080048`*^9, 3.874071494155858*^9}, {3.875177700420266*^9, 
  3.8751777106052313`*^9}, {3.875339779687306*^9, 3.8753397908887177`*^9}, {
  3.875770364891561*^9, 3.8757703774964523`*^9}, {3.877013610893734*^9, 
  3.877013781518601*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"0c2c20cc-9cc5-4c16-a4e8-b636b0cf28e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$Commutators\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "::", "input"}], "=", 
   "\"\<A simple Lie algebra s of any type.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "::", "output"}], "=", 
   "\"\<A 3-tensor vauled in the integers.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "::", "description"}], "=", 
   "\"\<Let {h_i,e_i}={h_{Flocci$CartanMatrix[s]},e_{Flocci$Roots[s]}}, in \
that order. The output is the tensor Aijk defined by [vi,vj]=Aijk vk. See \
Mitzmann.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "::", "tag"}], "=", "\"\<Commu\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Commutators", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$Commutators", "[", "s", "]"}], "=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}]}], ",", 
      RowBox[{"Flocci$SimplyLacedCommutators", "[", "s", "]"}], ",", 
      RowBox[{
       RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], "||", 
       RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}]}], ",", 
      RowBox[{"Flocci$NonSimplyLacedCommutator", "[", "s", "]"}], ",", 
      RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "Flocci$CommutatorG2"}],
      "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8740544488579063`*^9, 3.874054561954547*^9}, {
   3.874054593261363*^9, 3.874054611410763*^9}, {3.874054642212881*^9, 
   3.874054712956901*^9}, {3.874073354097064*^9, 3.8740733944145727`*^9}, {
   3.875177715468227*^9, 3.875177718485057*^9}, {3.8753397945008163`*^9, 
   3.8753397964168*^9}, {3.87585682472403*^9, 3.8758568293082457`*^9}, {
   3.875856861276087*^9, 3.875856885265024*^9}, {3.87585703947159*^9, 
   3.8758570697054358`*^9}, {3.875857141526058*^9, 3.8758572298061743`*^9}, {
   3.875857316716682*^9, 3.8758573336223392`*^9}, 3.8770129616499968`*^9, {
   3.87701317012827*^9, 3.877013170570779*^9}, 3.877013327439435*^9, 
   3.8770135469394484`*^9, 3.877013757863174*^9, {3.877013799246799*^9, 
   3.8770138336644993`*^9}, {3.877421437648888*^9, 3.877421441371208*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"5e04d280-302e-49d1-b5fa-1e16baad2dec"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Automorphisms", "Section",
 CellChangeTimes->{{3.8756066428861*^9, 
  3.875606645150177*^9}},ExpressionUUID->"f442377a-b8e6-4302-8c29-\
cad2a20ffb06"],

Cell[CellGroupData[{

Cell["Outer automorphisms", "Subsection",
 CellChangeTimes->{{3.867824348387087*^9, 
  3.867824351179234*^9}},ExpressionUUID->"1f114867-8747-4873-9520-\
08b528c8b041"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$OuterJoin\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "::", "input"}], "=", 
   "\"\<n: An integer\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "::", "output"}], "=", 
   "\"\<A compiled function.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "::", "description"}], "=", 
   "\"\<The compiled function takes in {list1, list2,...,listn} and finds \
Flatten[Outer[Join,list1,list2,...,listn,1],n-1]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterJoin", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$OuterJoin", "[", "n", "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lists", ",", "args2"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lists", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<list\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"args2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"l", ",", "_Integer", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "lists"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ReleaseHold", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Hold", "[", 
               RowBox[{"Compile", "[", 
                RowBox[{"args", ",", "\[IndentingNewLine]", 
                 RowBox[{"f2", "[", 
                  RowBox[{"f1", ",", "lev"}], "]"}], "\[IndentingNewLine]", 
                 ",", 
                 RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
                 RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}], 
               "]"}], "/.", 
              RowBox[{"args", "\[Rule]", " ", "args2"}]}], "/.", " ", 
             RowBox[{"f1", "\[Rule]", " ", 
              RowBox[{"f", "[", 
               RowBox[{"Join", ",", 
                RowBox[{"Evaluate", "@@", 
                 RowBox[{"Sequence", "[", "lists", "]"}]}], ",", "1"}], 
               "]"}]}]}], "/.", " ", 
            RowBox[{"f", "\[Rule]", " ", "Outer"}]}], "/.", " ", 
           RowBox[{"f2", "\[Rule]", " ", "Flatten"}]}], " ", "/.", " ", 
          RowBox[{"lev", "\[Rule]", " ", 
           RowBox[{"n", "-", "1"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869642662235968*^9, 3.869643188876213*^9}, {
  3.86964325425041*^9, 3.8696432882917547`*^9}, {3.875177281525819*^9, 
  3.875177291113707*^9}, {3.875339453414834*^9, 3.875339455691002*^9}, {
  3.877014789620891*^9, 3.8770147928894672`*^9}, {3.877014846840362*^9, 
  3.877014854371747*^9}, {3.877014887960462*^9, 3.8770149777177687`*^9}, {
  3.877420277552141*^9, 3.8774202807820053`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"6b3a6560-ff08-4049-9d71-2dbf78d5b4b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$OuterAutomorphismsSingleType\>\"", ",", 
     "\"\<Flocci$OuterAutomorphisms\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphismsSingleType", "::", "tag"}], "=", 
   "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphismsSingleType", "::", "input"}], "=", 
   "\"\<Let g=s+s+s..+s.\\nno: no. of s in g\\n s:The standardized form of \
the algebra\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphismsSingleType", "::", "output"}], "=", 
   "\"\<A list of lists\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphismsSingleType", "::", "description"}], "=", 
   "\"\<A compiled function. Outputs the automorphisms of s+s...+s. See \
Flocci$OuterAutomorphisms.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$OuterAutomorphismsSingleType", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"no", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "P1", ",", "P1t", ",", "P1tt", ",", "P1old", ",", "BagOfOuterAuto", 
         ",", "P2", ",", "P2t", ",", "P2tt", ",", "allPerm", ",", "intDigit", 
         ",", "T12", ",", "pnew"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
          "We", " ", "find", " ", "the", " ", "reordering", " ", "of", " ", 
           "rows"}], ",", " ", 
          RowBox[{
           RowBox[{"if", " ", "no", " ", "non"}], "-", 
           RowBox[{"trivial", " ", "outer", " ", "automorphism"}]}]}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"P1", "=", 
         RowBox[{"Permutations", "[", 
          RowBox[{"Range", "[", "no", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"P1t", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "-", "1"}], ")"}], "*", 
                RowBox[{
                "s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                "+", "1"}], ",", " ", 
              RowBox[{"#", "*", 
               RowBox[{
               "s", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "]"}], " ", "&"}], ",", "P1", 
           ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"P1old", "=", "P1t"}], ";", "\[IndentingNewLine]", 
        RowBox[{"BagOfOuterAuto", "=", 
         RowBox[{"Internal`Bag", "[", 
          RowBox[{"P1old", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"We", " ", "take", " ", "account", " ", "of", " ", "non"}],
            "-", 
           RowBox[{"trivial", " ", "outer", " ", 
            RowBox[{"automorphisms", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
            RowBox[{
            "If", " ", "the", " ", "algebra", " ", "is", " ", "An", " ", 
             "for", " ", "n"}], "\[GreaterEqual]", " ", "2"}],
           FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{
            "s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "\[NotEqual]", " ", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
              RowBox[{
              "We", " ", "loop", " ", "through", " ", "each", " ", "i", " ", 
               "in", " ", 
               SuperscriptBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 1]], "no"]}], "-", 
              RowBox[{
              "1.", " ", "The", " ", "int", " ", "digits", " ", "base", " ", 
               "2", " ", "give", " ", "which", " ", "automorphism", " ", "to",
                " ", 
               RowBox[{"apply", "."}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"intDigit", "=", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", " ", 
              RowBox[{"(*", 
               StyleBox[
                RowBox[{
                "We", " ", "loop", " ", "over", " ", "all", " ", 
                 "automorphisms", " ", "in", " ", 
                 RowBox[{"P1old", "."}]}],
                FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{
                RowBox[{"pnew", "=", "p"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", " ", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                   "We", " ", "loop", " ", "over", " ", "the", " ", 
                    "different", " ", 
                    RowBox[{"s", "'"}], "s", " ", "and", " ", "apply", " ", 
                    "the", " ", 
                    RowBox[{"automorphism", "."}]}],
                   FontColor->RGBColor[1, 0, 1]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "1"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], "]"}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "Starting", " ", "at", " ", "1", " ", "since", " ", "have", " ", 
             "already", " ", "got", " ", "the", " ", "identity"}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"If", " ", "the", " ", "algebra", " ", "is", " ", "D4"}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"s", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"4", ",", "4"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"intDigit", "=", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"i", ",", "6", ",", "no"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"pnew", "=", "p"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "1"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "2"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "3"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "1", ",", "3"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "4"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "5"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], "]"}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["6", "no"], "-", "1"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"If", " ", "the", " ", "algebra", " ", "is", " ", "Dn"}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[Equal]", "4"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"intDigit", "=", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"pnew", "=", "p"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "1"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    " ", 
                    RowBox[{
                    RowBox[{"pnew", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}]}]}], 
                    "]"}], ";"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], "]"}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"If", " ", "the", " ", "algebra", " ", "is", " ", "E6"}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"s", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"5", ",", "6"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
              RowBox[{
              "We", " ", "loop", " ", "through", " ", "each", " ", "i", " ", 
               "in", " ", 
               SuperscriptBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 1]], 
                RowBox[{
                "list", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]]}], "-", 
              RowBox[{
              "1.", " ", "The", " ", "int", " ", "digits", " ", "base", " ", 
               "2", " ", "give", " ", "which", " ", "automorphism", " ", "to",
                " ", 
               RowBox[{"apply", "."}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"intDigit", "=", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", " ", 
              RowBox[{"(*", 
               StyleBox[
                RowBox[{
                "We", " ", "loop", " ", "over", " ", "all", " ", 
                 "automorphisms", " ", "in", " ", 
                 RowBox[{"P1old", "."}]}],
                FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{
                RowBox[{"pnew", "=", "p"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", " ", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                   "We", " ", "loop", " ", "over", " ", "the", " ", 
                    "different", " ", 
                    RowBox[{"s", "'"}], "s", " ", "and", " ", "apply", " ", 
                    "the", " ", 
                    RowBox[{"automorphism", "."}]}],
                   FontColor->RGBColor[1, 0, 1]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "1"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    "pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "6"}], 
                    "}"}]}], "\[RightDoubleBracket]"}]}]}], "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], "]"}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Internal`BagPart", "[", 
           RowBox[{"BagOfOuterAuto", ",", "All"}], "]"}], ",", 
          RowBox[{"no", "*", 
           RowBox[{
           "s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "::", "input"}], "=", 
   "\"\<g: A semi-simple Lie algebra.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "::", "output"}], "=", 
   "\"\<A list of lists\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "::", "description"}], "=", 
   "\"\<The output are the outer automorphisms of g such that: We will denote \
an outer permutation O, by the ordered list of columns with non-zero entries. \
Supposing that p is the list of columns corresponding to O, then O.\[Beta]=\
\[Beta]\[LeftDoubleBracket]p\[RightDoubleBracket].  For \!\(TraditionalForm\`\
\[CapitalLambda]O^\(-1\) = \(\[CapitalLambda] . \*SuperscriptBox[\(O\), \
\(T\)] = \[CapitalLambda]\[LeftDoubleBracket]All, p\[RightDoubleBracket]\)\). \
 O.i = Transpose[Transpose[i]\[LeftDoubleBracket]All,p\[RightDoubleBracket]]].\
 \!\(\*StyleBox[\"(\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"Check\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\")\",FontColor->RGBColor[1, 0, 0]]\) \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$OuterAutomorphisms", "[", "g_List", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$OuterAutomorphisms", "[", "g", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "split", ",", "list", ",", "types", ",", "offset", ",", "tab", ",", 
       "tups"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "first", " ", "find", " ", "the", " ", "permutations", " ", 
       "in", " ", "terms", " ", "of", " ", "identities"}], "*)"}], "  ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"split", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Split", "[", "g", "]"}], "//", "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<outer: 1\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ",", " ", 
            RowBox[{"Flocci$Rank", "[", 
             RowBox[{"First", "[", "#", "]"}], "]"}]}], "}"}], "&"}], ",", 
         "split"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"offset", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Accumulate", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                "&"}], ",", "list"}], "]"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tab", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$OuterAutomorphismsSingleType", "[", 
           RowBox[{
            RowBox[{"list", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Flocci$AlgStandard", "[", 
             RowBox[{"split", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], "+", 
          RowBox[{
          "offset", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tups", "=", 
       RowBox[{
        RowBox[{"Flocci$OuterJoin", "[", 
         RowBox[{"Length", "[", "tab", "]"}], "]"}], "[", 
        RowBox[{"Evaluate", "@@", 
         RowBox[{"Sequence", "[", "tab", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "tups"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8693200247200623`*^9, 3.869320129820932*^9}, {
   3.869320208603166*^9, 3.869320335980201*^9}, {3.8695858582683973`*^9, 
   3.86958585873033*^9}, {3.869585889576857*^9, 3.869586003077126*^9}, 
   3.869633075701129*^9, {3.869633273802409*^9, 3.869633289500721*^9}, {
   3.869633322149452*^9, 3.869633322730029*^9}, {3.86963335984971*^9, 
   3.869633384106716*^9}, {3.869633420369945*^9, 3.869633518542306*^9}, {
   3.8696335542190933`*^9, 3.8696336074061117`*^9}, {3.86963366279667*^9, 
   3.869633706461258*^9}, {3.869633737674436*^9, 3.869633865803171*^9}, {
   3.869634034509033*^9, 3.869634057437634*^9}, {3.869634105819314*^9, 
   3.869634193673297*^9}, {3.86963533053339*^9, 3.869635532488743*^9}, {
   3.869635583030219*^9, 3.869635705571615*^9}, {3.8696357720814857`*^9, 
   3.869635776762104*^9}, {3.8696358085353813`*^9, 3.8696358184247227`*^9}, {
   3.8696358511832037`*^9, 3.869636191783773*^9}, {3.869636273745101*^9, 
   3.869636310144792*^9}, {3.869636390534254*^9, 3.869636443317191*^9}, {
   3.869636486558865*^9, 3.869636570181307*^9}, {3.869636606243289*^9, 
   3.869636841166964*^9}, {3.869636887729825*^9, 3.869636987071824*^9}, 
   3.86964018314585*^9, {3.869640740139269*^9, 3.869640864927552*^9}, {
   3.8696409083093233`*^9, 3.869641266013949*^9}, {3.869641316686068*^9, 
   3.869641351793055*^9}, {3.869641384820568*^9, 3.8696413905255136`*^9}, {
   3.869641488742374*^9, 3.869641491493325*^9}, {3.869641523369987*^9, 
   3.869641534875491*^9}, {3.869641572735236*^9, 3.869641627693141*^9}, {
   3.8696417166434593`*^9, 3.869641837851492*^9}, {3.869641924653626*^9, 
   3.869641965856331*^9}, {3.869642048696754*^9, 3.869642057478642*^9}, {
   3.8696421077184896`*^9, 3.869642116807867*^9}, {3.869642201951064*^9, 
   3.869642273025835*^9}, {3.869643337071089*^9, 3.869643344396821*^9}, {
   3.869643764760602*^9, 3.869643778552093*^9}, {3.8696438398898697`*^9, 
   3.869643900640917*^9}, {3.86964397522607*^9, 3.8696439778813562`*^9}, {
   3.869644023354776*^9, 3.8696440573182993`*^9}, {3.8696440965637903`*^9, 
   3.86964411988286*^9}, {3.8696441505154037`*^9, 3.869644171454987*^9}, {
   3.8696442109808617`*^9, 3.869644289382576*^9}, {3.869644349247162*^9, 
   3.869644349501533*^9}, {3.869659038216934*^9, 3.869659042743431*^9}, {
   3.869659552109*^9, 3.869659556837902*^9}, {3.869662304624888*^9, 
   3.8696623065812798`*^9}, {3.869836219594224*^9, 3.8698362611603613`*^9}, {
   3.8698363164567337`*^9, 3.8698363195545597`*^9}, {3.869836460459934*^9, 
   3.869836476139937*^9}, {3.869836641767899*^9, 3.869836747005389*^9}, {
   3.869836812569166*^9, 3.86983681727826*^9}, {3.869836932209037*^9, 
   3.869836935414514*^9}, {3.870356855970265*^9, 3.870356857594837*^9}, {
   3.875177294304535*^9, 3.875177311650175*^9}, {3.8751781817111397`*^9, 
   3.875178184028405*^9}, {3.875339460145156*^9, 3.8753394682484694`*^9}, 
   3.876230512274637*^9, 3.8770148633805017`*^9, {3.877015009761265*^9, 
   3.8770150542385073`*^9}, {3.8770150881237907`*^9, 3.877015268470716*^9}, {
   3.877015308011263*^9, 3.8770153555740633`*^9}, {3.877015454324934*^9, 
   3.877015713401017*^9}, {3.87742030007607*^9, 3.877420302622054*^9}, {
   3.8798476391497*^9, 3.879847644872826*^9}, {3.8798477753688374`*^9, 
   3.879847833616991*^9}, {3.879847897374906*^9, 3.879848028682301*^9}, {
   3.87984807397554*^9, 3.879848188278417*^9}, {3.8798482739754763`*^9, 
   3.879848280915099*^9}, {3.8798483598117113`*^9, 3.87984840125237*^9}, {
   3.879848442364059*^9, 3.8798485038512487`*^9}, {3.879849043427342*^9, 
   3.879849072776494*^9}, {3.879849128914863*^9, 3.8798494198513737`*^9}, 
   3.8798494739555693`*^9, {3.879849528655574*^9, 3.8798495292312517`*^9}, {
   3.879849566823794*^9, 3.8798495671962643`*^9}, {3.879850081616583*^9, 
   3.8798501120819483`*^9}, {3.8798502795051107`*^9, 3.879850375498589*^9}, {
   3.8798504119679613`*^9, 3.879850466388555*^9}, {3.879946032004943*^9, 
   3.8799460326896343`*^9}, {3.8799466956826773`*^9, 3.8799467416941767`*^9}, 
   3.879947248696653*^9},
 CellLabel->
  "In[324]:=",ExpressionUUID->"2fde2a98-6eca-4066-8a88-8e7857ddc29a"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["CompiledFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
              True, FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
              True, FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"no", ",", "s"}], "}"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "P1", ",", "P1t", ",", "P1tt", ",", "P1old", ",", 
                    "BagOfOuterAuto", ",", "P2", ",", "P2t", ",", "P2tt", ",",
                     "allPerm", ",", "intDigit", ",", "T12", ",", "pnew"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"P1", "=", 
                    RowBox[{"Permutations", "[", 
                    RowBox[{"Range", "[", "no", "]"}], "]"}]}], ";", 
                    RowBox[{"P1t", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#1", "-", "1"}], ")"}], " ", 
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "+", "1"}], ",", 
                    RowBox[{"#1", " ", 
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], "&"}], ",", "P1", 
                    ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{"P1old", "=", "P1t"}], ";", 
                    RowBox[{"BagOfOuterAuto", "=", 
                    RowBox[{"Internal`Bag", "(", 
                    RowBox[{"P1old", ",", "3"}], ")"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "1"}], 
                    "\[And]", 
                    RowBox[{
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "1"}]}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"intDigit", "=", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "=", "p"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "1"}], ",", 
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "(", 
                    RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], ")"}], 
                    ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"intDigit", "=", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "6", ",", "no"}], "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "=", "p"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "2"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "3"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "1", ",", "3"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "4"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}], ",", 
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "5"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "(", 
                    RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], ")"}], 
                    ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["6", "no"], "-", "1"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "4"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"intDigit", "=", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "=", "p"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"pnew", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}]}]}], 
                    "]"}], ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "(", 
                    RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], ")"}], 
                    ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "6"}], "}"}]}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"intDigit", "=", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"i", ",", "2", ",", "no"}], "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pnew", "=", "p"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"intDigit", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LongEqual]", "1"}], ",", 
                    RowBox[{
                    
                    RowBox[{"pnew", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"p", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1", ",", 
                    "6"}], "}"}]}], "\[RightDoubleBracket]"}]}]}], "]"}], 
                    ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "no"}], "}"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "(", 
                    RowBox[{"BagOfOuterAuto", ",", "pnew", ",", "3"}], ")"}], 
                    ";"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "P1old"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    SuperscriptBox["2", "no"], "-", "1"}]}], "}"}]}], "]"}]}],
                     "]"}], ";", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Internal`BagPart", "(", 
                    RowBox[{"BagOfOuterAuto", ",", "All"}], ")"}], ",", 
                    RowBox[{"no", " ", 
                    
                    RowBox[{"s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   CompiledFunction[{11, 12., 5724}, {
     Blank[Integer], {
      Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 2, 
    18}}, {{False, {1, 0, 2}}, {
     0, {2, 0, 4}}, {{3, 2, 1, 4}, {2, 1, 11}}, {{1, 2, 4, 3}, {2, 1, 10}}, {
     4, {2, 0, 26}}, {{4, 2, 3, 1}, {2, 1, 14}}, {
     6, {2, 0, 24}}, {{5, 6}, {2, 1, 15}}, {
     5, {2, 0, 23}}, {{4, 2, 1, 3}, {2, 1, 12}}, {-2, {2, 0, 27}}, {{4, 4}, {
      2, 1, 9}}, {2, {2, 0, 14}}, {-1, {2, 0, 13}}, {1, {2, 0, 2}}, {
     7., {3, 0, 0}}, {
     3, {2, 0, 25}}, {{5, 4, 3, 2, 1, 6}, {2, 1, 16}}, {{3, 2, 4, 1}, {2, 1, 
      13}}}, {8, 28, 1, 0, 
    19}, {{6, 0, 10}, {6, 4, 5}, {35, 10, 2, 6}, {6, 4, 1}, {3, 2}, {36, 5, 1,
      2, 6}, {4, 1, 10, -1}, {47, Permutations, 2, 1, 6, 2, 2, 4}, {33, 4, 
     7}, {38, 4, 0, 2, 1, 6}, {33, 6, 6}, {6, 13, 20}, {35, 7, 6, 20, 2, 1}, {
     6, 4, 9}, {3, 22}, {6, 4, 19}, {3, 19}, {37, 4, 9, 19, 2, 3}, {12, 3, 13,
      3}, {38, 0, 0, 14, 0, 21}, {15, 3, 21, 3}, {12, 3, 2, 3}, {37, 4, 9, 19,
      2, 21}, {38, 0, 0, 14, 0, 11}, {15, 21, 11, 21}, {
     42, "IteratorCountI", 2, 0, 3, 2, 0, 21, 2, 0, 11}, {6, 4, 21}, {41, 258,
      2, 0, 11, 2, 0, 13, 2, 0, 17}, {35, 17, 2, 3}, {6, 13, 16}, {3, 3}, {12,
      3, 16, 15}, {36, 21, 15, 2, 3}, {4, 16, 11, -2}, {36, 20, 3, 0, 1}, {4, 
     19, 6, -18}, {4, 9, 7, -21}, {42, "CopyTensor", 2, 3, 1, 2, 3, 6}, {
     42, "Bag", 2, 0, 14, 2, 0, 9}, {
     42, "StuffBag", 2, 0, 9, 2, 3, 6, 6, 0, 17}, {38, 0, 0, 2, 0, 19}, {24, 
     19, 2, 3}, {2, 3, 6}, {38, 0, 0, 14, 0, 19}, {24, 19, 2, 1}, {32, 1, 
     1}, {5, 1, 0}, {3, 2}, {5, 2, 0}, {2, 0, 26}, {41, 263, 2, 0, 14, 2, 0, 
     0, 2, 0, 5}, {12, 5, 13, 5}, {6, 4, 10}, {3, 20}, {
     42, "IntegerDigits", 2, 0, 10, 2, 0, 14, 2, 0, 0, 2, 1, 3}, {33, 6, 1}, {
     6, 4, 8}, {3, 15}, {37, 6, 8, 0, 2}, {
     42, "CopyTensor", 2, 2, 2, 2, 2, 5}, {6, 0, 12}, {6, 4, 20}, {3, 8}, {38,
      3, 0, 20, 0, 7}, {24, 7, 2, 3}, {2, 3, 5}, {38, 5, 0, 20, 1, 8}, {
     42, "Reverse", 2, 1, 8, 2, 1, 7}, {39, 5, 0, 20, 1, 7}, {3, 1}, {4, 20, 
     12, -7}, {42, "StuffBag", 2, 0, 9, 2, 2, 5, 6, 0, 17}, {4, 8, 1, -14}, {
     4, 10, 5, -19}, {3, 109}, {
     42, "CompareTensor", 2, 0, 23, 3, 0, 0, 2, 1, 0, 2, 1, 9, 1, 0, 1}, {2, 
     1, 50}, {41, 263, 2, 0, 24, 2, 0, 0, 2, 0, 5}, {12, 5, 13, 5}, {6, 4, 
     10}, {3, 44}, {
     42, "IntegerDigits", 2, 0, 10, 2, 0, 24, 2, 0, 0, 2, 1, 2}, {
     42, "CopyTensor", 2, 1, 2, 2, 1, 3}, {33, 6, 1}, {6, 4, 8}, {3, 38}, {37,
      6, 8, 0, 2}, {42, "CopyTensor", 2, 2, 2, 2, 2, 5}, {6, 0, 12}, {6, 4, 
     20}, {3, 31}, {38, 3, 0, 20, 0, 7}, {24, 7, 2, 3}, {2, 3, 4}, {38, 2, 0, 
     20, 1, 10, 1, 8}, {39, 5, 0, 20, 1, 8}, {3, 25}, {38, 3, 0, 20, 0, 7}, {
     24, 7, 14, 5}, {2, 5, 4}, {38, 2, 0, 20, 1, 11, 1, 8}, {39, 5, 0, 20, 1, 
     8}, {3, 19}, {38, 3, 0, 20, 0, 7}, {24, 7, 25, 4}, {2, 4, 4}, {38, 2, 0, 
     20, 1, 12, 1, 8}, {39, 5, 0, 20, 1, 8}, {3, 13}, {38, 3, 0, 20, 0, 7}, {
     24, 7, 26, 6}, {2, 6, 4}, {38, 2, 0, 20, 1, 13, 1, 8}, {39, 5, 0, 20, 1, 
     8}, {3, 7}, {38, 3, 0, 20, 0, 7}, {24, 7, 23, 7}, {2, 7, 4}, {38, 2, 0, 
     20, 1, 14, 1, 8}, {39, 5, 0, 20, 1, 8}, {3, 1}, {4, 20, 12, -30}, {
     42, "StuffBag", 2, 0, 9, 2, 2, 5, 6, 0, 17}, {4, 8, 1, -37}, {4, 10, 
     5, -43}, {3, 58}, {38, 0, 0, 2, 0, 19}, {24, 19, 26, 3}, {2, 3, 28}, {41,
      263, 2, 0, 14, 2, 0, 0, 2, 0, 5}, {12, 5, 13, 5}, {6, 4, 10}, {3, 22}, {
     42, "IntegerDigits", 2, 0, 10, 2, 0, 14, 2, 0, 0, 2, 1, 2}, {
     42, "CopyTensor", 2, 1, 2, 2, 1, 3}, {33, 6, 1}, {6, 4, 8}, {3, 16}, {37,
      6, 8, 0, 2}, {42, "CopyTensor", 2, 2, 2, 2, 2, 5}, {6, 0, 12}, {6, 4, 
     20}, {3, 9}, {38, 3, 0, 20, 0, 7}, {24, 7, 2, 5}, {2, 5, 6}, {38, 2, 0, 
     20, 0, 27, 0, 7}, {39, 5, 0, 20, 0, 13, 0, 7}, {38, 2, 0, 20, 0, 13, 0, 
     6}, {39, 5, 0, 20, 0, 27, 0, 6}, {3, 1}, {4, 20, 12, -8}, {
     42, "StuffBag", 2, 0, 9, 2, 2, 5, 6, 0, 17}, {4, 8, 1, -15}, {4, 10, 
     5, -21}, {3, 28}, {
     42, "CompareTensor", 2, 0, 23, 3, 0, 0, 2, 1, 0, 2, 1, 15, 1, 0, 4}, {2, 
     4, 26}, {41, 263, 2, 0, 14, 2, 0, 0, 2, 0, 5}, {12, 5, 13, 5}, {6, 4, 
     10}, {3, 20}, {
     42, "IntegerDigits", 2, 0, 10, 2, 0, 14, 2, 0, 0, 2, 1, 2}, {
     42, "CopyTensor", 2, 1, 2, 2, 1, 3}, {33, 6, 1}, {6, 4, 8}, {3, 14}, {37,
      6, 8, 0, 2}, {42, "CopyTensor", 2, 2, 2, 2, 2, 5}, {6, 0, 12}, {6, 4, 
     20}, {3, 7}, {38, 3, 0, 20, 0, 6}, {24, 6, 2, 5}, {2, 5, 4}, {38, 2, 0, 
     20, 1, 16, 1, 8}, {39, 5, 0, 20, 1, 8}, {3, 1}, {4, 20, 12, -6}, {
     42, "StuffBag", 2, 0, 9, 2, 2, 5, 6, 0, 17}, {4, 8, 1, -13}, {4, 10, 
     5, -19}, {3, 1}, {42, "BagPart", 2, 0, 9, 2, 0, 14, 2, 1, 2}, {38, 0, 0, 
     14, 0, 19}, {15, 0, 19, 5}, {34, 1, 1, 5, 2, 7}, {34, 1, 1, 5, 2, 8}, {
     42, "Partition", 2, 1, 2, 2, 1, 7, 2, 1, 8, 2, 2, 18}, {1}}, 
    Function[{$CellContext`no, $CellContext`s}, 
     Block[{$CellContext`P1, $CellContext`P1t, $CellContext`P1tt, \
$CellContext`P1old, $CellContext`BagOfOuterAuto, $CellContext`P2, \
$CellContext`P2t, $CellContext`P2tt, $CellContext`allPerm, \
$CellContext`intDigit, $CellContext`T12, $CellContext`pnew}, $CellContext`P1 = 
       Permutations[
         Range[$CellContext`no]]; $CellContext`P1t = 
       Map[Range[(# - 1) Part[$CellContext`s, 2] + 1, # 
          Part[$CellContext`s, 2]]& , $CellContext`P1, {
         2}]; $CellContext`P1old = $CellContext`P1t; \
$CellContext`BagOfOuterAuto = Internal`Bag[$CellContext`P1old, 3]; Which[
        And[Part[$CellContext`s, 1] == 1, Part[$CellContext`s, 2] != 1], 
        Do[$CellContext`intDigit = 
          IntegerDigits[$CellContext`i, 2, $CellContext`no]; 
         Do[$CellContext`pnew = $CellContext`p; 
           Do[If[Part[$CellContext`intDigit, $CellContext`j] == 1, 
               Part[$CellContext`pnew, $CellContext`j] = Reverse[
                 Part[$CellContext`pnew, $CellContext`j]]]; 
             Null, {$CellContext`j, 1, $CellContext`no}]; 
           Internal`StuffBag[$CellContext`BagOfOuterAuto, $CellContext`pnew, 
             3]; Null, {$CellContext`p, $CellContext`P1old}], {$CellContext`i,
           1, 2^$CellContext`no - 1}], $CellContext`s == {4, 4}, 
        Do[$CellContext`intDigit = 
          IntegerDigits[$CellContext`i, 6, $CellContext`no]; 
         Do[$CellContext`pnew = $CellContext`p; 
           Do[Which[
              Part[$CellContext`intDigit, $CellContext`j] == 1, 
               Part[$CellContext`pnew, $CellContext`j] = 
                Part[$CellContext`p, $CellContext`j, {1, 2, 4, 3}]; Null, 
               Part[$CellContext`intDigit, $CellContext`j] == 2, 
               Part[$CellContext`pnew, $CellContext`j] = 
                Part[$CellContext`p, $CellContext`j, {3, 2, 1, 4}]; Null, 
               Part[$CellContext`intDigit, $CellContext`j] == 3, 
               Part[$CellContext`pnew, $CellContext`j] = 
                Part[$CellContext`p, $CellContext`j, {4, 2, 1, 3}]; Null, 
               Part[$CellContext`intDigit, $CellContext`j] == 4, 
               Part[$CellContext`pnew, $CellContext`j] = 
                Part[$CellContext`p, $CellContext`j, {3, 2, 4, 1}]; Null, 
               Part[$CellContext`intDigit, $CellContext`j] == 5, 
               Part[$CellContext`pnew, $CellContext`j] = 
                Part[$CellContext`p, $CellContext`j, {4, 2, 3, 1}]; Null]; 
             Null, {$CellContext`j, 1, $CellContext`no}]; 
           Internal`StuffBag[$CellContext`BagOfOuterAuto, $CellContext`pnew, 
             3]; Null, {$CellContext`p, $CellContext`P1old}], {$CellContext`i,
           1, 6^$CellContext`no - 1}], Part[$CellContext`s, 1] == 4, 
        Do[$CellContext`intDigit = 
          IntegerDigits[$CellContext`i, 2, $CellContext`no]; 
         Do[$CellContext`pnew = $CellContext`p; 
           Do[If[Part[$CellContext`intDigit, $CellContext`j] == 1, 
               Part[$CellContext`pnew, $CellContext`j, -1] = 
                Part[$CellContext`p, $CellContext`j, -2]; 
               Part[$CellContext`pnew, $CellContext`j, -2] = 
                Part[$CellContext`p, $CellContext`j, -1]]; 
             Null, {$CellContext`j, 1, $CellContext`no}]; 
           Internal`StuffBag[$CellContext`BagOfOuterAuto, $CellContext`pnew, 
             3]; Null, {$CellContext`p, $CellContext`P1old}], {$CellContext`i,
           1, 2^$CellContext`no - 1}], $CellContext`s == {5, 6}, 
        Do[$CellContext`intDigit = 
          IntegerDigits[$CellContext`i, 2, $CellContext`no]; 
         Do[$CellContext`pnew = $CellContext`p; 
           Do[If[Part[$CellContext`intDigit, $CellContext`j] == 1, 
               Part[$CellContext`pnew, $CellContext`j] = 
               Part[$CellContext`p, $CellContext`j, {5, 4, 3, 2, 1, 6}]]; 
             Null, {$CellContext`j, 1, $CellContext`no}]; 
           Internal`StuffBag[$CellContext`BagOfOuterAuto, $CellContext`pnew, 
             3]; Null, {$CellContext`p, $CellContext`P1old}], {$CellContext`i,
           1, 2^$CellContext`no - 1}]]; Partition[
        Internal`BagPart[$CellContext`BagOfOuterAuto, All], $CellContext`no 
        Part[$CellContext`s, 2]]]], Evaluate, 
    LibraryFunction[
    "/Users/joessmith/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/dhcp-vl2041-20227-75423/compiledFunction3.dylib", 
     "compiledFunction3", {{Integer, 0, "Constant"}, {
      Integer, 1, "Constant"}}, {Integer, 2}]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.869635981802382*^9, {3.869636084041823*^9, 3.869636100336163*^9}, {
   3.869636134200081*^9, 3.86963615710793*^9}, 3.869636192364499*^9, {
   3.8696362814943047`*^9, 3.86963631106968*^9}, {3.869636404936907*^9, 
   3.8696364441287727`*^9}, {3.869636490485757*^9, 3.8696365389895763`*^9}, {
   3.8696366363324833`*^9, 3.869636792737265*^9}, 3.869636842173023*^9, {
   3.869636893049601*^9, 3.869636987948007*^9}, 3.869640352026574*^9, {
   3.869640741491675*^9, 3.8696407728315973`*^9}, {3.869640834390739*^9, 
   3.869640866034494*^9}, {3.869640919867855*^9, 3.8696409484601994`*^9}, {
   3.8696409844660463`*^9, 3.8696410522352467`*^9}, {3.869641090428897*^9, 
   3.869641266754138*^9}, {3.869641349962566*^9, 3.86964135269363*^9}, {
   3.869641386155252*^9, 3.869641391310631*^9}, 3.869641492543371*^9, {
   3.869641530623919*^9, 3.8696415356937103`*^9}, {3.869641574291245*^9, 
   3.8696416307631702`*^9}, {3.869641720615522*^9, 3.869641757247761*^9}, {
   3.8696417894423227`*^9, 3.8696418298565197`*^9}, {3.8696419305076838`*^9, 
   3.869641966721364*^9}, {3.869642049480907*^9, 3.869642058552617*^9}, {
   3.869642109628935*^9, 3.8696421175951777`*^9}, 3.869642254338704*^9, 
   3.869643296540205*^9, 3.869643345242526*^9, 3.869643780211277*^9, 
   3.8696438142068043`*^9, {3.8696438491822357`*^9, 3.869643901674727*^9}, {
   3.86964398099625*^9, 3.869644065131016*^9}, {3.869644099532444*^9, 
   3.869644120835642*^9}, {3.869644153562686*^9, 3.869644172289669*^9}, {
   3.869644216433342*^9, 3.869644249796175*^9}, {3.8696442916350613`*^9, 
   3.86964431070821*^9}, 3.869644351095565*^9, 3.869658587195813*^9, 
   3.869658793874173*^9, {3.8696590405032454`*^9, 3.869659043546935*^9}, 
   3.869752224352065*^9, 3.869752589166586*^9, 3.869806443225521*^9, 
   3.86983623504434*^9, 3.869836321237485*^9, 3.8698364774839773`*^9, 
   3.869836658559553*^9, {3.869836689019565*^9, 3.869836748080175*^9}, 
   3.869836820129648*^9, 3.8698369377054462`*^9, 3.869842078326767*^9, 
   3.869842221639645*^9, 3.86990042905962*^9, 3.869900722704748*^9, 
   3.86992075193095*^9, 3.8699288545025387`*^9, 3.870157193891273*^9, 
   3.870169803492484*^9, 3.870169951210394*^9, 3.870171030780032*^9, 
   3.870177350093321*^9, 3.870179965397723*^9, 3.870181149764673*^9, 
   3.8701850861411743`*^9, 3.8702393860131807`*^9, 3.87023978046358*^9, 
   3.870269193669579*^9, 3.870269385626214*^9, 3.8702700860678997`*^9, 
   3.870326777065051*^9, 3.8703445209288607`*^9, 3.870357329511279*^9, 
   3.87042231806138*^9, 3.870429608763953*^9, 3.870447180048265*^9, 
   3.8705109150041122`*^9, 3.870511359228353*^9, 3.8707897971310453`*^9, 
   3.870941962244609*^9, 3.870942724837263*^9, 3.870949536284677*^9, 
   3.8711352600763407`*^9, 3.871135981143813*^9, 3.8714773354014063`*^9, 
   3.871554012567968*^9, 3.8715592695966053`*^9, 3.871563173735012*^9, 
   3.871573739328435*^9, 3.872081826668355*^9, {3.872082087004717*^9, 
   3.8720821100172033`*^9}, 3.872234844780882*^9, 3.872235406821574*^9, 
   3.872253811188649*^9, 3.8722577562118683`*^9, 3.872326434911887*^9, 
   3.872327893177312*^9, 3.872330624978364*^9, 3.8723306959682693`*^9, 
   3.872331998207541*^9, 3.8726914516199207`*^9, 3.8726947093091593`*^9, 
   3.872829548034788*^9, 3.872834745408359*^9, 3.873797544685384*^9, 
   3.873957563837082*^9, 3.87395763164884*^9, 3.87395817480285*^9, 
   3.873961438459704*^9, 3.873961538915533*^9, 3.873971595679681*^9, 
   3.874063890128264*^9, 3.874575534682152*^9, 3.87458330601577*^9, 
   3.874583958791224*^9, 3.874584160890059*^9, 3.8745843033300867`*^9, 
   3.874587998939767*^9, 3.874661844593583*^9, 3.874718779205306*^9, 
   3.874735066211244*^9, 3.874995618677199*^9, 3.8750054307733803`*^9, 
   3.875021779674321*^9, 3.875086243191272*^9, 3.875086301847683*^9, 
   3.8750865064496107`*^9, 3.875086543848672*^9, 3.875086591591885*^9, 
   3.875086769089148*^9, 3.8751740229117517`*^9, 3.8751777578071613`*^9, 
   3.875178586375078*^9, 3.8752018728388777`*^9, 3.875249918325173*^9, 
   3.875339855157476*^9, 3.875341003113165*^9, 3.875595440788735*^9, 
   3.8755961135884237`*^9, 3.875597666021737*^9, 3.8755980298897657`*^9, 
   3.875600751156904*^9, 3.87560198043969*^9, 3.875602589627884*^9, 
   3.875603213975505*^9, 3.8756049175661592`*^9, 3.875606502050297*^9, 
   3.875606975941435*^9, 3.875608447354781*^9, 3.875609710589077*^9, 
   3.875610779617935*^9, 3.875681941358864*^9, 3.875683838648999*^9, 
   3.875687130632629*^9, 3.875687259185463*^9, 3.875687326943321*^9, 
   3.875687621781361*^9, 3.8757713456318808`*^9, 3.875855910910199*^9, 
   3.876488651453526*^9, 3.876581497081214*^9, 3.876582131070777*^9, 
   3.876583104847711*^9, 3.876583190869164*^9, 3.876644485199161*^9, 
   3.876819392152482*^9, 3.876820380920322*^9, 3.8768244522865953`*^9, 
   3.876827653124872*^9, 3.876926380912221*^9, 3.876926805511685*^9, 
   3.876929095791759*^9, 3.876997268756509*^9, 3.876997771471117*^9, 
   3.876998024480958*^9, 3.876998379379881*^9, 3.876998555494021*^9, 
   3.876999666727459*^9, 3.876999845541799*^9, 3.877013893138318*^9, 
   3.877069633540842*^9, 3.877069723044125*^9, 3.8770708534051237`*^9, 
   3.877071574944153*^9, 3.877073765015214*^9, 3.877078222073883*^9, 
   3.877079317095367*^9, 3.8770968172510147`*^9, 3.877097587021653*^9, 
   3.8771545002338877`*^9, 3.8771565632331953`*^9, 3.8774140702173777`*^9, 
   3.8774154193960667`*^9, 3.877415696148971*^9, 3.877416021388034*^9, 
   3.877417823638507*^9, 3.877418093583358*^9, 3.877420427533633*^9, 
   3.877420821343379*^9, 3.87742114830793*^9, 3.877421469810314*^9, 
   3.877767948779317*^9, 3.877768058971192*^9, 3.877768215101921*^9, 
   3.877768347633871*^9, 3.877768434119954*^9, 3.877768532115679*^9, 
   3.877770011115819*^9, 3.878025003272773*^9, 3.878025432661704*^9, 
   3.878029719709393*^9, 3.878030187417267*^9, 3.878051775127132*^9, 
   3.878052276648045*^9, 3.878054288492393*^9, 3.87805445235814*^9, 
   3.878988479410222*^9, 3.879322072746866*^9, 3.879327147894431*^9, 
   3.8793297284585323`*^9, 3.879833048046474*^9, 3.87983507058045*^9, 
   3.879847843438074*^9, 3.879848462737164*^9, 3.879848523009878*^9, 
   3.87984878355005*^9, {3.879849450182489*^9, 3.8798494750000896`*^9}, 
   3.879849533249032*^9, 3.879849716553104*^9, 3.879849781032099*^9, 
   3.87984984549009*^9, 3.879849977127088*^9, {3.879850048464925*^9, 
   3.879850055466197*^9}, {3.8798500894375763`*^9, 3.879850129474321*^9}, {
   3.8798502852062073`*^9, 3.8798503824135437`*^9}, {3.8798504151396933`*^9, 
   3.879850435738968*^9}, {3.879850467357374*^9, 3.879850487336622*^9}, 
   3.879851469007432*^9, 3.879857823765123*^9, 3.879858710124599*^9, 
   3.879859095046567*^9, 3.879863698373808*^9, 3.879938240137371*^9, 
   3.8799454582795353`*^9, {3.879945556362484*^9, 3.8799455776907063`*^9}, 
   3.8799456518292637`*^9, 3.8799467445266848`*^9, 3.879946825078144*^9, 
   3.879947248093299*^9, 3.879949359497617*^9, 3.879951175369316*^9, 
   3.8799512782516603`*^9, 3.8799538349194736`*^9, 3.880189660967641*^9, 
   3.880213065794941*^9, 3.880213147309627*^9, 3.881486068700721*^9, 
   3.881492510894931*^9, 3.881492657542623*^9, 3.881493151828849*^9, 
   3.881493282571034*^9, 3.8814941268020906`*^9, 3.882520974603251*^9, 
   3.882539538607603*^9, 3.88254170937411*^9, 3.882857107729807*^9, 
   3.882858199052689*^9, 3.883066707703535*^9, 3.890728481342186*^9, 
   3.890728623081509*^9, 3.8908042393831244`*^9, 3.890804354986252*^9, 
   3.890804552355604*^9, 3.8908048777224903`*^9, 3.890811781390183*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"22c9ea3d-fc53-42b4-98cf-dea448b72c39"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Weyl groups and related functions for the exceptional Lie algebras\
\>", "Subsection",
 CellChangeTimes->{{3.868443450430665*^9, 3.868443453414617*^9}, {
  3.8685306229051437`*^9, 3.868530623621619*^9}, {3.870168239225346*^9, 
  3.87016824190114*^9}, {3.870169476127637*^9, 
  3.870169482599024*^9}},ExpressionUUID->"8b5091c1-4b4c-4b84-8ae8-\
74b57d5f107d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$WeylGroup\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "::", "input"}], "=", 
   "\"\<s: A simple Lie algebra\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "::", "output"}], "=", 
   "\"\<A 3-tensor of integers.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "::", "description"}], "=", 
   "\"\<Outputs the Weyl group of s in the basis of fundamental \
weights.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$WeylGroup", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$WeylGroup", "[", "s", "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Proots", ",", "matrixForm", ",", "level", ",", "P", ",", "full"}], 
       "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Working", " ", "in", " ", "the", " ", "basis", " ", "of", " ", "the", 
        " ", "fundamental", " ", "weights"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Proots", "=", 
        RowBox[{"Flocci$PositiveRoots", "[", "s", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", 
            RowBox[{"2", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
                RowBox[{"p", ",", "l"}], "]"}], "/", " ", 
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "s", "]"}], "[", 
                RowBox[{"p", ",", "p"}], "]"}]}], ")"}], "p"}]}], ")"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"p", ",", "Proots"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"Flocci$Rank", "[", "s", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"matrixForm", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Transpose", ",", "P"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "0", "]"}], "=", "matrixForm"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"level", "[", "n", "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"Dot", ",", 
                RowBox[{"level", "[", "0", "]"}], ",", 
                RowBox[{"level", "[", " ", 
                 RowBox[{"n", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
              "1"}], "]"}], "]"}], ",", 
           RowBox[{"Evaluate", "@@", 
            RowBox[{"Sequence", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"level", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"level", "[", "c", "]"}], "]"}], "\[NotEqual]", " ", "0"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"level", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"level", "[", "c", "]"}], "]"}]}], "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"c", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"full", "=", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"level", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "c"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Number of elements: \>\"", ",", " ", 
           RowBox[{"Length", "[", "full", "]"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "full"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870168030874363*^9, 3.87016805603227*^9}, {
   3.870168092852247*^9, 3.87016811754107*^9}, 3.870169356673571*^9, {
   3.875086514780108*^9, 3.8750865214641123`*^9}, {3.87517732758107*^9, 
   3.875177342064455*^9}, {3.8753394790111647`*^9, 3.875339480919827*^9}, {
   3.877015771011887*^9, 3.877015793741832*^9}, {3.877015911144938*^9, 
   3.877015958907469*^9}, {3.87742031253237*^9, 3.877420314082008*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"9c664041-8798-4824-b3db-b52e15d50643"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$E7InnerAut\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E7InnerAut", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E7InnerAut", "::", "input"}], "=", "\"\<-\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E7InnerAut", "::", "output"}], "=", 
   "\"\<A function.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E7InnerAut", "::", "description"}], "=", 
   "\"\<The outputed function takes in a projection matrix for an embedding \
g->E7. It outputs the inner-automorphisms which take \[CapitalLambda] into a \
unique representative of the equivelence class defined by inner automorphisms \
of E7. This function has the same form as Flocci$E8InnerAut. This is on \
delayed evaluation so it will only generate the function if needed.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$E7InnerAut", "::", "clear"}], "=", "\"\<0\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$E7InnerAut", ":=", 
   RowBox[{"Flocci$E7InnerAut", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Flocci$E7ws", ",", "LexMin", ",", "Proots", ",", "ProotsM", ",", 
        "level", ",", "Flocci$E7ws126", ",", "Flocci$E7Min126", ",", "P", ",",
         "matrixForm", ",", "Flocci$E7Weyl126", ",", "c", ",", 
        "\[Lambda]List", ",", "bool", ",", "Mlist", ",", "set", ",", 
        "Flocci$matrixListE7", ",", "E7inner", ",", "level1", ",", "level2"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "find", " ", "the", " ", "weight", " ", "system", " ", 
         "of", " ", "the", " ", 
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          ")"}], " ", "rep"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flocci$E7ws", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$WeightSystem", "[", 
           RowBox[{"E7", ",", 
            RowBox[{"{", 
             RowBox[{
             "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
              "0"}], "}"}]}], "]"}], "//", "DeleteDuplicates"}], "//", 
         "Sort"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "get", " ", "the", " ", "lexicgoraphcially", " ", 
          "smallest", " ", "weight"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"LexMin", "=", 
        RowBox[{
        "Flocci$E7ws", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "find", " ", "the", " ", "orbit", " ", "of", " ", 
          "LexMin", " ", "under", " ", "the", " ", "Weyl", " ", 
          RowBox[{"group", ".", " ", "This"}], " ", "orbit", " ", "is", " ", 
          "of", " ", "size", " ", "126."}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Proots", "=", 
        RowBox[{"Flocci$PositiveRoots", "[", "E7", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ProotsM", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flocci$MetricTensor", "[", "E7", "]"}], ".", "#"}], 
           "&"}], ",", "Proots"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "0", "]"}], "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"LexMin", "-", 
             RowBox[{"2", 
              FractionBox[
               RowBox[{
                RowBox[{
                "ProotsM", "\[LeftDoubleBracket]", "7", 
                 "\[RightDoubleBracket]"}], ".", "LexMin"}], 
               RowBox[{
                RowBox[{
                "Proots", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ".", 
                RowBox[{
                "ProotsM", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]], 
              RowBox[{
              "Proots", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "Proots", "]"}]}], "}"}]}], "]"}], "//", 
         "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "1", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "0", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"level", "[", "0", "]"}], ",", "#"}], "]"}]}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "2", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "1", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"level", "[", "0", "]"}], ",", 
                RowBox[{"level", "[", "1", "]"}]}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "3", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "2", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"level", "[", "0", "]"}], ",", 
                RowBox[{"level", "[", "1", "]"}], ",", 
                RowBox[{"level", "[", "2", "]"}]}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"level", "[", "3", "]"}], "//", 
          RowBox[{"Length", "\[NotEqual]", " ", "0"}]}], ",", " ", 
         RowBox[{"Print", "[", "\"\<Error\>\"", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$E7ws126", "=", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"level", "[", "0", "]"}], ",", 
           RowBox[{"level", "[", "1", "]"}], ",", 
           RowBox[{"level", "[", "2", "]"}]}], "]"}], "//", "Sort"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "want", " ", "the", " ", "lexicographically", " ", 
          "smallest", " ", "weight", " ", "in", " ", "Flocci$E7ws126"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Flocci$E7Min126", "=", 
        RowBox[{
        "Flocci$E7ws126", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "want", " ", "the", " ", "subgroup", " ", "of", " ", 
          "Weyl", 
          RowBox[{"(", "E7", ")"}], " ", "which", " ", "stabalizes", " ", 
          "the", " ", "weight", " ", "Flocci$E7Min126"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", 
            RowBox[{"2", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E7", "]"}], "[", 
                RowBox[{"p", ",", "l"}], "]"}], "/", " ", 
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E7", "]"}], "[", 
                RowBox[{"p", ",", "p"}], "]"}]}], ")"}], "p"}]}], ")"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"p", ",", "Proots"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"IdentityMatrix", "[", "7", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"matrixForm", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Transpose", ",", "P"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level1", "[", "0", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{"matrixForm", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ".", "Flocci$E7Min126"}], "\[Equal]", 
            "Flocci$E7Min126"}], " ", "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level1", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"level1", "[", "n", "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"Dot", ",", 
                RowBox[{"level1", "[", "0", "]"}], ",", 
                RowBox[{"level1", "[", " ", 
                 RowBox[{"n", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
              "1"}], "]"}], "]"}], ",", 
           RowBox[{"Evaluate", "@@", 
            RowBox[{"Sequence", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"level1", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"level1", "[", "c", "]"}], "]"}], "\[NotEqual]", " ", 
          "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"level1", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"level", "[", "c", "]"}], "]"}]}], "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"c", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$E7Weyl126", "=", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"level1", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "c"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{"The", " ", "list", " ", "of", " ", "inner"}], "-", 
          RowBox[{
          "automorphisms", " ", "of", " ", "E7", " ", "which", " ", "take", 
           " ", "the", " ", "corresponding", " ", "weight", " ", "in", " ", 
           "Flocci$E7ws126", " ", "to", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0"}], ")"}], "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]List", "=", "Flocci$E7ws126"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", 
            RowBox[{"2", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E7", "]"}], "[", 
                RowBox[{"p", ",", "l"}], "]"}], "/", " ", 
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E7", "]"}], "[", 
                RowBox[{"p", ",", "p"}], "]"}]}], ")"}], "p"}]}], ")"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"p", ",", "Proots"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"IdentityMatrix", "[", "7", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"matrixForm", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Transpose", ",", "P"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level2", "[", "0", "]"}], "=", "matrixForm"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level2", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"level2", "[", "n", "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"Dot", ",", 
                RowBox[{"level2", "[", "0", "]"}], ",", 
                RowBox[{"level2", "[", " ", 
                 RowBox[{"n", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
              "1"}], "]"}], "]"}], ",", 
           RowBox[{"Evaluate", "@@", 
            RowBox[{"Sequence", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"level2", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bool", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"False", ",", 
          RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Mlist", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AllTrue", "[", 
           RowBox[{"bool", ",", "Identity"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"level", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Next iteration.\>\"", "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Monitor", "[", 
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "bool", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"set", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"level2", "[", "c", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", ".", 
                    RowBox[{
                    "\[Lambda]List", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", 
                    "Flocci$E7Min126"}], "&"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "set", "]"}], "\[NotEqual]", " ", 
                  "0"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Mlist", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                   RowBox[{
                   "set", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "bool", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", "True"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}]}], 
             "]"}], ",", "j"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"bool", ",", "True"}], "]"}]}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"c", "++"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Flocci$matrixListE7", "=", "Mlist"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "make", " ", "the", " ", "function", " ", "which", " ", 
          "will", " ", "test", " ", "the", " ", "inner", " ", "automorphism"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"E7inner", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"\[CapitalLambda]", ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "wsSort", ",", "pos", ",", "inn", ",", "innMin2160", ",", 
              "innAll", ",", "minv"}], "}"}], ",", "\[IndentingNewLine]", " ", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
               RowBox[{
               "Find", " ", "the", " ", "weights", " ", "in", " ", "w1", 
                RowBox[{"(", "126", ")"}], " ", "which", " ", "gives", " ", 
                "the", " ", "minimum", " ", "lexicographically"}], ",", " ", 
               RowBox[{"call", " ", 
                RowBox[{"this", "/", "these"}], " ", 
                RowBox[{"\[Lambda]", "'"}]}]}],
              FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"wsSort", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"Flocci$E7ws126", ",", 
                RowBox[{
                 RowBox[{"\[CapitalLambda]", ".", "#"}], " ", "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"pos", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"Flocci$E7ws126", ",", "#"}], "]"}], 
                  "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], 
                ",", "wsSort"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"minv", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Inverse", "[", 
                 RowBox[{
                 "Flocci$matrixListE7", "\[LeftDoubleBracket]", "p", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "pos"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
               "Find", " ", "the", " ", "inner", " ", "automorphisms", " ", 
                "of", " ", "E7", " ", "which", " ", "take", " ", 
                RowBox[{"\[Lambda]", "'"}], " ", "to", " ", 
                SubscriptBox["\[Lambda]", "min"]}],
               FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"inn", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"m", ".", "w"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "minv"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"w", ",", "Flocci$E7Weyl126"}], "}"}]}], "]"}], 
                ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
                RowBox[{"Of", " ", "these", " ", "inner"}], "-", 
                RowBox[{
                "automorphisms", " ", "select", " ", "those", " ", "that", 
                 " ", "act", " ", 
                 RowBox[{"`minimally", "'"}], " ", "on", " ", 
                 RowBox[{"Flocci$E7ws126", ".", " ", "We"}], " ", "do", " ", 
                 "a", " ", "partial", " ", "check", " ", "initally", " ", 
                 "to", " ", "reduce", " ", "the", " ", "size", " ", "of", " ",
                  "the", " ", "list"}]}],
               FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"innMin2160", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"inn", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"Flocci$E7ws126", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10"}], "}"}]}], "]"}], ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"innMin2160", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"innMin2160", ",", 
                RowBox[{
                 RowBox[{"Flocci$E7ws126", ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
                RowBox[{"Of", " ", "the", " ", "remaining", " ", "inner"}], 
                "-", 
                RowBox[{
                "automorphisms", " ", "we", " ", "select", " ", "those", " ", 
                 "which", " ", "act", " ", "minimally", " ", "on", " ", "the",
                  " ", "full", " ", "weight", " ", "system", " ", 
                 "corresponding", " ", "to", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0"}], ")"}]}]}],
               FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"innAll", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"innMin2160", ",", 
                RowBox[{
                 RowBox[{"Flocci$E7ws", ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", "innAll"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "E7inner"}]}], "\[IndentingNewLine]", "]"}]}]}],
   ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877016267015951*^9, 3.877016398465768*^9}, {
   3.877016448562674*^9, 3.877016584353003*^9}, {3.877016665301553*^9, 
   3.87701667010819*^9}, {3.8770168228147993`*^9, 3.877016905303156*^9}, {
   3.877016941560604*^9, 3.877016964894414*^9}, {3.8770170159349203`*^9, 
   3.877017067526726*^9}, {3.877017156470635*^9, 3.877017250359219*^9}, {
   3.877017337107944*^9, 3.8770173784338017`*^9}, {3.877017418403798*^9, 
   3.8770174944436483`*^9}, {3.8770175342749033`*^9, 
   3.8770175345408278`*^9}, {3.877017713948154*^9, 3.87701773881173*^9}, {
   3.877019143226439*^9, 3.8770191471431417`*^9}, {3.877069170341668*^9, 
   3.877069204288265*^9}, {3.877069240399172*^9, 3.877069360239135*^9}, 
   3.877069569391986*^9, {3.877069602052149*^9, 3.877069602380419*^9}, 
   3.877069696520115*^9, {3.877420322136999*^9, 3.8774203274741383`*^9}, 
   3.877420550110463*^9},
 CellLabel->
  "In[343]:=",ExpressionUUID->"a249cee7-341c-4616-807e-f45e03d8f6a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$E8InnerAut\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E8InnerAut", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E8InnerAut", "::", "input"}], "=", "\"\<-\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E8InnerAut", "::", "output"}], "=", 
   "\"\<A function.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$E8InnerAut", "::", "description"}], "=", 
   "\"\<The outputed function takes in a projection matrix for an embedding \
g->E8. It outputs the inner-automorphisms which take \[CapitalLambda] into a \
unique representative of the equivelence class defined by inner automorphisms \
of E8. This function has the same form as Flocci$E8InnerAut. This is on \
delayed evaluation so it will only generate the function if needed.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$E8InnerAut", "::", "clear"}], "=", "\"\<0\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$E8InnerAut", ":=", 
   RowBox[{"Flocci$E8InnerAut", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Flocci$E8ws", ",", "LexMin", ",", "Proots", ",", "ProotsM", ",", 
        "level", ",", "Flocci$E8ws2160", ",", "Flocci$E8Min2160", ",", "P", 
        ",", "matrixForm", ",", "Flocci$E8WeylE82160", ",", "c", ",", 
        "\[Lambda]List", ",", "bool", ",", "Mlist", ",", "set", ",", 
        "Flocci$matrixListE8", ",", "E8inner", ",", "level1", ",", "level2"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "find", " ", "the", " ", "weight", " ", "system", " ", 
         "of", " ", "the", " ", 
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          ")"}], " ", "rep"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flocci$E8ws", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$WeightSystem", "[", 
           RowBox[{"E8", ",", 
            RowBox[{"{", 
             RowBox[{
             "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0"}], "}"}]}], "]"}], "//", "DeleteDuplicates"}], "//", 
         "Sort"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "get", " ", "the", " ", "lexicgoraphcially", " ", 
          "smallest", " ", "weight"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"LexMin", "=", 
        RowBox[{
        "Flocci$E8ws", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "find", " ", "the", " ", "orbit", " ", "of", " ", 
          "LexMin", " ", "under", " ", "the", " ", "Weyl", " ", 
          RowBox[{"group", ".", " ", "This"}], " ", "orbit", " ", "is", " ", 
          "of", " ", "size", " ", 
          RowBox[{"2160", "."}]}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Proots", "=", 
        RowBox[{"Flocci$PositiveRoots", "[", "E8", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ProotsM", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flocci$MetricTensor", "[", "E8", "]"}], ".", "#"}], 
           "&"}], ",", "Proots"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "0", "]"}], "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"LexMin", "-", 
             RowBox[{"2", 
              FractionBox[
               RowBox[{
                RowBox[{
                "ProotsM", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ".", "LexMin"}], 
               RowBox[{
                RowBox[{
                "Proots", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ".", 
                RowBox[{
                "ProotsM", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]], 
              RowBox[{
              "Proots", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "Proots", "]"}]}], "}"}]}], "]"}], "//", 
         "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "1", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "0", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"level", "[", "0", "]"}], ",", "#"}], "]"}]}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "2", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "1", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"level", "[", "0", "]"}], ",", 
                RowBox[{"level", "[", "1", "]"}]}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level", "[", "3", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", 
                 RowBox[{"2", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", "l"}], 
                   RowBox[{
                    RowBox[{
                    "Proots", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ProotsM", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]], 
                  RowBox[{
                  "Proots", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], ")"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "Proots", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"level", "[", "2", "]"}]}], "}"}]}], "]"}], ",", 
             "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"level", "[", "0", "]"}], ",", 
                RowBox[{"level", "[", "1", "]"}], ",", 
                RowBox[{"level", "[", "2", "]"}]}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Flocci$E8ws2160", "=", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"level", "[", "0", "]"}], ",", 
           RowBox[{"level", "[", "1", "]"}], ",", 
           RowBox[{"level", "[", "2", "]"}]}], "]"}], "//", "Sort"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "want", " ", "the", " ", "lexicographically", " ", 
          "smallest", " ", "weight", " ", "in", " ", "Flocci$E8ws2160"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Flocci$E8Min2160", "=", 
        RowBox[{
        "Flocci$E8ws2160", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "want", " ", "the", " ", "subgroup", " ", "of", " ", 
          "Weyl", 
          RowBox[{"(", "E8", ")"}], " ", "which", " ", "stabalizes", " ", 
          "the", " ", "weight", " ", "Flocci$E8Min2160"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", 
            RowBox[{"2", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E8", "]"}], "[", 
                RowBox[{"p", ",", "l"}], "]"}], "/", " ", 
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E8", "]"}], "[", 
                RowBox[{"p", ",", "p"}], "]"}]}], ")"}], "p"}]}], ")"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"p", ",", "Proots"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"IdentityMatrix", "[", "8", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"matrixForm", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Transpose", ",", "P"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level1", "[", "0", "]"}], "=", 
        RowBox[{"Select", "[", 
         RowBox[{"matrixForm", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ".", "Flocci$E8Min2160"}], "\[Equal]", 
            "Flocci$E8Min2160"}], " ", "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level1", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"level1", "[", "n", "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"Dot", ",", 
                RowBox[{"level1", "[", "0", "]"}], ",", 
                RowBox[{"level1", "[", 
                 RowBox[{"n", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
              "1"}], "]"}], "]"}], ",", 
           RowBox[{"Evaluate", "@@", 
            RowBox[{"Sequence", "[", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"level1", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"level1", "[", "c", "]"}], "]"}], "\[NotEqual]", " ", 
          "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"level1", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"level", "[", "c", "]"}], "]"}]}], "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"c", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$E8WeylE82160", "=", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"level1", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "c"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{"The", " ", "list", " ", "of", " ", "inner"}], "-", 
          RowBox[{
          "automorphisms", " ", "of", " ", "E7", " ", "which", " ", "take", 
           " ", "the", " ", "corresponding", " ", "weight", " ", "in", " ", 
           "Flocci$E7ws126", " ", "to", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0"}], ")"}], "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]List", "=", "Flocci$E8ws2160"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "-", 
            RowBox[{"2", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E8", "]"}], "[", 
                RowBox[{"p", ",", "l"}], "]"}], "/", " ", 
               RowBox[{
                RowBox[{"Flocci$ScalarProduct", "[", "E8", "]"}], "[", 
                RowBox[{"p", ",", "p"}], "]"}]}], ")"}], "p"}]}], ")"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"p", ",", "Proots"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", 
            RowBox[{"IdentityMatrix", "[", "8", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"matrixForm", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Transpose", ",", "P"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level2", "[", "0", "]"}], "=", "matrixForm"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"level2", "[", "n_", "]"}], ":=", 
        RowBox[{
         RowBox[{"level2", "[", "n", "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"Dot", ",", 
                RowBox[{"level2", "[", "0", "]"}], ",", 
                RowBox[{"level2", "[", " ", 
                 RowBox[{"n", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
              "1"}], "]"}], "]"}], ",", 
           RowBox[{"Evaluate", "@@", 
            RowBox[{"Sequence", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"level2", "[", "i", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bool", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"False", ",", 
          RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Mlist", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AllTrue", "[", 
           RowBox[{"bool", ",", "Identity"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"level2", "[", "c", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Next iteration.\>\"", "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Monitor", "[", 
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "bool", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"set", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"level2", "[", "c", "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", ".", 
                    RowBox[{
                    "\[Lambda]List", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", 
                    "Flocci$E8Min2160"}], "&"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "set", "]"}], "\[NotEqual]", " ", 
                  "0"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Mlist", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", 
                   RowBox[{
                   "set", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "bool", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "=", "True"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "\[Lambda]List", "]"}]}], "}"}]}], 
             "]"}], ",", "j"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"c", ",", "\"\< \>\"", ",", 
              RowBox[{"Count", "[", 
               RowBox[{"bool", ",", "True"}], "]"}]}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"c", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$matrixListE8", "=", "Mlist"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "We", " ", "make", " ", "the", " ", "function", " ", "which", " ", 
          "will", " ", "test", " ", "the", " ", "inner", " ", "automorphism"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"E8inner", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"\[CapitalLambda]", ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "wsSort", ",", "pos", ",", "inn", ",", "innMin2160", ",", 
              "innAll", ",", "minv"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"wsSort", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"Flocci$E8ws2160", ",", 
                RowBox[{
                 RowBox[{"\[CapitalLambda]", ".", "#"}], " ", "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"pos", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"Flocci$E8ws2160", ",", "#"}], "]"}], 
                  "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], 
                ",", "wsSort"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"minv", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Inverse", "[", 
                 RowBox[{
                 "Flocci$matrixListE8", "\[LeftDoubleBracket]", "p", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "pos"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"inn", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"m", ".", "w"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "minv"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"w", ",", "Flocci$E8WeylE82160"}], "}"}]}], "]"}], 
                ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"innMin2160", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"inn", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"Flocci$E8ws2160", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10"}], "}"}]}], "]"}], ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"innMin2160", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"innMin2160", ",", 
                RowBox[{
                 RowBox[{"Flocci$E8ws2160", ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"innAll", "=", 
              RowBox[{"MinimalBy", "[", 
               RowBox[{"innMin2160", ",", 
                RowBox[{
                 RowBox[{"Flocci$E8ws", ".", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"\[CapitalLambda]", ".", "#"}], "]"}]}], "&"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", "innAll"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "E8inner"}]}], "\[IndentingNewLine]", "]"}]}]}],
   ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877018007593033*^9, 3.877018163213048*^9}, {
   3.877018225531302*^9, 3.877018505284631*^9}, {3.877019091553046*^9, 
   3.877019100126257*^9}, {3.87701916642789*^9, 3.877019169660308*^9}, {
   3.877019481348501*^9, 3.877019484757141*^9}, {3.877020140177346*^9, 
   3.877020140540422*^9}, 3.877020311400556*^9, 3.877020388543454*^9, {
   3.877020732649912*^9, 3.877020735864809*^9}, {3.8770695484292088`*^9, 
   3.877069595375646*^9}, {3.877069704819702*^9, 3.877069707944433*^9}, {
   3.877420332348069*^9, 3.8774203347389593`*^9}, 3.877420553364246*^9},
 CellLabel->
  "In[350]:=",ExpressionUUID->"a0cf0661-9c19-45a1-9c5e-a5b016161d4f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Inner automorphisms", "Subsection",
 CellChangeTimes->{{3.867824075676721*^9, 
  3.867824078212385*^9}},ExpressionUUID->"69862415-f0b4-4f3e-b299-\
c01e1402b886"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$LinearEquivWeightSystms\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "::", "tag"}], "=", 
   "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "::", "input"}], "=", 
   "\"\<s: A simple Lie algebra.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "::", "output"}], "=", 
   "\"\<A list of two sorted weight systems.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "::", "description"}], "=", 
   "\"\<Outputs the weightsystem of the irreps given in Theorem 1.3 of \
Dynkin's Semisimple subalgebras of semisimple Lie algebras. This is for tests \
of linear equivelence\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "::", "clear"}], "=", 
   "\"\<3\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LinearEquivWeightSystms", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$LinearEquivWeightSystms", "[", "s", "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "This", " ", "function", " ", "is", " ", "based", " ", "on", " ", 
         "Theorem", " ", "1.3", " ", "of", " ", "Dynkin", " ", 
         "\"\<Semisimple subalgebras of semisimple Lie algebras\>\""}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v1", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"v2", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], "||", 
          RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], "||", 
          RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], "||", 
          RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "v1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
           "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], "||", 
          RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"v1", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "1"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "v1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
           "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"v2", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "1"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], "||", 
          RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "v1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
           "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"v2", "\[LeftDoubleBracket]", 
            RowBox[{"-", "2"}], "\[RightDoubleBracket]"}], "=", "1"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Flocci$WeightSystem", "[", 
           RowBox[{"s", ",", "v1"}], "]"}], "]"}], ",", 
         RowBox[{"Sort", "[", 
          RowBox[{"Flocci$WeightSystem", "[", 
           RowBox[{"s", ",", "v2"}], "]"}], "]"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684387375066633`*^9, 3.868438746862741*^9}, {
  3.8684388563508797`*^9, 3.868438904379046*^9}, {3.86843899449196*^9, 
  3.868439085667521*^9}, {3.868445373665349*^9, 3.868445374816428*^9}, {
  3.868458515737224*^9, 3.868458576902143*^9}, {3.8685105107067137`*^9, 
  3.868510515286771*^9}, {3.871135593206685*^9, 3.871135602351563*^9}, {
  3.875086194062254*^9, 3.875086198410407*^9}, {3.875177554448786*^9, 
  3.875177561911065*^9}, {3.875339649922225*^9, 3.875339658237524*^9}, {
  3.877069942462203*^9, 3.877069974855324*^9}, {3.877070018835833*^9, 
  3.877070043445364*^9}, {3.877420342239135*^9, 3.877420344814151*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"f6059fee-ec0b-4402-a380-05f7e4afdf7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$InnerAutThroughWeyl\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$InnerAutThroughWeyl", "::", "tag"}], "=", "\"\<Aut\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$InnerAutThroughWeyl", "::", "input"}], "=", 
   "\"\<\[CapitalLambda]: A projection matrix g'->s.\\n Weylt: The Weyl group \
of s. \\n \[CapitalPhi]t: the first weight system of \
Flocci$LinearEquivWeightSystms[s]\[LeftDoubleBracket]1\[RightDoubleBracket]\>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$InnerAutThroughWeyl", "::", "output"}], "=", 
   "\"\<A integer 3-tensor.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$InnerAutThroughWeyl", "::", "description"}], "=", 
   "\"\<Finds the inner automrophisms of s which take \[CapitalLambda] to a \
representative based on equivelence classes defined by inner-automorphisms of \
s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$InnerAutThroughWeyl", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalLambda]", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Weylt", ",", "_Integer", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalPhi]t", ",", "_Integer", ",", "2"}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pos", ",", "\[CapitalPhi]min", ",", "\[CapitalPhi]tem", ",", 
         "posP"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalPhi]min", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[CapitalLambda]", ".", 
             RowBox[{
             "Weylt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ".", "#"}], "&"}], ",", "\[CapitalPhi]t"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{"Internal`Bag", "@", 
          RowBox[{"Most", "[", 
           RowBox[{"{", "0", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Internal`StuffBag", "[", 
         RowBox[{"pos", ",", "1"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalPhi]tem", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalLambda]", ".", 
                RowBox[{
                "Weylt", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ".", "#"}], "&"}], ",", 
              "\[CapitalPhi]t"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{"\[CapitalPhi]tem", ",", "\[CapitalPhi]min"}], "}"}], 
               "]"}], "&&", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{"\[CapitalPhi]min", ",", "\[CapitalPhi]tem"}], "}"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Internal`StuffBag", "[", 
               RowBox[{"pos", ",", "i"}], "]"}], ";"}], ",", 
             RowBox[{"OrderedQ", "[", 
              RowBox[{"{", 
               RowBox[{"\[CapitalPhi]tem", ",", "\[CapitalPhi]min"}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"pos", "=", 
               RowBox[{"Internal`Bag", "@", 
                RowBox[{"Most", "[", 
                 RowBox[{"{", "0", "}"}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Internal`StuffBag", "[", 
               RowBox[{"pos", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[CapitalPhi]min", "=", "\[CapitalPhi]tem"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"Length", "[", "Weylt", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"posP", "=", 
         RowBox[{"Internal`BagPart", "[", 
          RowBox[{"pos", ",", "All"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Weylt", "\[LeftDoubleBracket]", "posP", 
         "\[RightDoubleBracket]"}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8705040522978697`*^9, 3.870504203628127*^9}, {
  3.8705043517456923`*^9, 3.8705043614487753`*^9}, {3.8705044043593273`*^9, 
  3.8705045249614162`*^9}, {3.870504613622691*^9, 3.870504767894219*^9}, {
  3.87050482601257*^9, 3.870504955155267*^9}, {3.870505057851108*^9, 
  3.870505185650731*^9}, {3.870510841784266*^9, 3.870510842797611*^9}, {
  3.8715630159675503`*^9, 3.871563023250681*^9}, {3.8751775674050627`*^9, 
  3.875177590356498*^9}, {3.8753396624843063`*^9, 3.875339667515706*^9}, {
  3.875601414238908*^9, 3.8756014153082314`*^9}, {3.8756017575751123`*^9, 
  3.875601791090135*^9}, {3.8770701165570183`*^9, 3.877070298073903*^9}, {
  3.877070358311599*^9, 3.877070381202044*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"bdd583f6-f642-4e7e-8990-431798172e5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FunctionListAdd", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple\>\"", 
      ",", "\"\<Flocci$TransposeLinearSolvePermu\>\""}], "}"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TransposeLinearSolvePermu", "::", "tag"}], "=", 
   "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TransposeLinearSolvePermu", "::", "input"}], "=", 
   "\"\<\[CapitalPhi]) A  weight system.\\nallowedPermutations) A list of \
permutations.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TransposeLinearSolvePermu", "::", "output"}], "=", 
   "\"\<A 3-tensor of integers.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TransposeLinearSolvePermu", "::", "description"}], "=", 
   "\"\<Finds the solution to P^T.\[CapitalPhi]=\[CapitalPhi]\
\[LeftDoubleBracket]\[Sigma]\[RightDoubleBracket] for every \[Sigma] in \
allowedPermutations. \>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TransposeLinearSolvePermu", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalPhi]", ",", "_Integer", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"allowedPermutations", ",", "_Integer", ",", "2"}], "}"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"\[CapitalPhi]", ",", 
           RowBox[{
           "\[CapitalPhi]", "\[LeftDoubleBracket]", "\[Sigma]", 
            "\[RightDoubleBracket]"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "allowedPermutations"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "::", "tag"}],
    "=", "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "::", 
    "input"}], "=", 
   "\"\<s: A simple Lie algebra.\\n \[CapitalLambda]: a projection matrix \
g'->s.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "::", 
    "output"}], "=", "\"\<A integer 3-tensor.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "::", 
     "description"}], "=", 
    "\"\<Finds the inner automrophisms of s which take \[CapitalLambda] to a \
representative based on equivelence classes defined by inner-automorphisms of \
s.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "[", 
   RowBox[{"s_", ",", "\[CapitalLambda]_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalPhi]", ",", "\[CapitalLambda]\[CapitalPhi]", ",", 
      "\[CapitalLambda]\[CapitalPhi]S", ",", "n", ",", 
      "\[CapitalLambda]\[CapitalPhi]Split", ",", "index", ",", "tuples", ",", 
      "permutations", ",", "allowedPermutations", ",", "y", ",", "eqs", ",", 
      "P", ",", "Pp", ",", "inner", ",", "intsort", ",", "intsplit", ",", 
      "oddoreven", ",", "leftinverse", ",", "gcd"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Outputs", " ", "the", " ", "set", " ", "of", " ", "inner", " ", 
      "automorphisms", " ", "which", " ", "take", " ", "\[CapitalLambda]", 
      " ", "to", " ", "one", " ", "which", " ", "preseves", " ", "ordering"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalPhi]", "=", 
          RowBox[{
           RowBox[{"Flocci$LinearEquivWeightSystms", "[", "s", "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[CapitalLambda]\[CapitalPhi]", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]", ".", "#"}], " ", "&"}], ",", 
            "\[CapitalPhi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";"}], "//", "Timing"}], 
       ")"}], "//", 
      RowBox[{"Flocci$Timing", "[", "\"\<innerAuto: 0\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$classicalQ", "[", "s", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"(*", 
           RowBox[{
           "We", " ", "want", " ", "the", " ", "set", " ", "of", " ", 
            "permutations", " ", "which", " ", "takes", " ", 
            "\[CapitalLambda]\[CapitalPhi]", " ", "to", " ", 
            "\[CapitalLambda]\[CapitalPhi]S"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"\[CapitalLambda]\[CapitalPhi]S", "=", 
             RowBox[{
             "Ordering", "[", "\[CapitalLambda]\[CapitalPhi]", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "We", " ", "split", " ", "\[CapitalLambda]\[CapitalPhi]S", " ", 
              "into", " ", "equivelent", " ", "parts"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"index", "=", 
             RowBox[{"SplitBy", "[", 
              RowBox[{"\[CapitalLambda]\[CapitalPhi]S", ",", 
               RowBox[{
                RowBox[{
                "\[CapitalLambda]\[CapitalPhi]", "\[LeftDoubleBracket]", "#", 
                 "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "We", " ", "find", " ", "tuples", " ", "of", " ", "different", 
              " ", "permutations"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tuples", "=", 
             RowBox[{"Tuples", "[", 
              RowBox[{"Map", "[", 
               RowBox[{"Permutations", ",", "index"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "We", " ", "then", " ", "form", " ", "the", " ", "group", " ", 
              "of", " ", "all", " ", "permutations", " ", "from", " ", 
              "\[CapitalLambda]\[CapitalPhi]", " ", "to", " ", 
              "\[CapitalLambda]\[CapitalPhi]S"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"allowedPermutations", "=", 
             RowBox[{"Map", "[", 
              RowBox[{"Flatten", ",", "tuples"}], "]"}]}], ";"}], "//", 
           "Timing"}], ")"}], "//", 
         RowBox[{"Flocci$Timing", "[", "\"\<innerAuto: 1\>\"", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "only", " ", "select", " ", "those", " ", "permutaions", 
         " ", "which", " ", "map", " ", "the", " ", "negatives", " ", 
         "correctly"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"allowedPermutations", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"allowedPermutations", ",", 
           RowBox[{"Function", "[", 
            RowBox[{"\[Sigma]", ",", " ", 
             RowBox[{"AllTrue", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "\[Sigma]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", 
                    RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", "i"}], 
                    "\[RightDoubleBracket]"}]}]}], "||", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", 
                    RowBox[{
                    "\[Sigma]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", 
                   RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", "i"}], 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
               RowBox[{"#", "&"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], " ", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], "||", 
        RowBox[{"Flocci$TypeDQ", "[", "s", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "only", " ", "select", " ", "those", " ", "permutaions", 
         " ", "which", " ", "map", " ", "the", " ", "negatives", " ", 
         "correctly"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"allowedPermutations", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"allowedPermutations", ",", 
           RowBox[{"Function", "[", 
            RowBox[{"\[Sigma]", ",", " ", 
             RowBox[{"AllTrue", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "\[Sigma]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", 
                    RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", "i"}], 
                    "\[RightDoubleBracket]"}]}]}], "||", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", 
                    RowBox[{
                    "\[Sigma]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", 
                   RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", "i"}], 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
               RowBox[{"#", "&"}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", 
              RowBox[{"Length", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{
                   RowBox[{
                   "allowedPermutations", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "n"}], "}"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", ">", " ", "n"}], " ", "&"}]}], "]"}], "]"}], 
              "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
              "We", " ", "test", " ", "if", " ", "we", " ", "have", " ", 
               "done", " ", 
               RowBox[{"`allowed", "'"}], " ", "permutations", " ", "or", " ",
                "not"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "We", " ", "swap", " ", "the", " ", "nth", " ", "and", " ", 
               RowBox[{"(", 
                RowBox[{"n", "+", "1"}], ")"}], "th", " ", "elements"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "allowedPermutations", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "=", 
               RowBox[{"Permute", "[", 
                RowBox[{
                 RowBox[{
                 "allowedPermutations", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", 
                    RowBox[{"n", "+", "1"}]}], "}"}], "}"}], "]"}]}], "]"}]}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "allowedPermutations", "]"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"allowedPermutations", "=", 
         RowBox[{"DeleteDuplicates", "[", "allowedPermutations", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$classicalQ", "[", "s", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "now", " ", "make", " ", "the", " ", "inner", " ", 
         "automorphisms"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "We", " ", "want", " ", "to", " ", "solve", " ", "the", " ", 
          "equation", " ", 
          RowBox[{"\[CapitalPhi]P", "^", "T"}]}], "=", 
         RowBox[{
          RowBox[{"\[Sigma]", 
           RowBox[{
            RowBox[{"(", "\[CapitalPhi]", ")"}], ".", " ", "Thus"}], " ", 
           "want", " ", "a", " ", "left"}], "-", 
          RowBox[{"inverse", " ", "of", " ", 
           RowBox[{"\[CapitalPhi]", "."}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"leftinverse", "=", 
              RowBox[{"PseudoInverse\[CapitalPhi]", "[", "g", "]"}]}], ";"}], 
            "//", "Timing"}], ")"}], "//", 
          RowBox[{"Flocci$Timing", "[", "\"\<innerAuto: 2\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"gcd", "=", 
          RowBox[{"GCD", "@@", 
           RowBox[{"Flatten", "[", "leftinverse", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inner", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"gcd", " ", "*", 
             RowBox[{"leftinverseMult", "[", 
              RowBox[{
               RowBox[{"leftinverse", "/", "gcd"}], ",", "\[CapitalPhi]", ",",
                "allowedPermutations"}], "]"}]}], "//", "Timing"}], "//", 
           RowBox[{"Flocci$Timing", "[", "\"\<innerAuto: 3\>\"", "]"}]}]}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$TransposeLinearSolvePermu", "[", 
          RowBox[{"\[CapitalPhi]", ",", "allowedPermutations"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "G2", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "F4", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "E6", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$E7InnerAut", "[", "\[CapitalLambda]", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$E8InnerAut", "[", "\[CapitalLambda]", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "inner"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.867824458198484*^9, 3.867824490199284*^9}, {
   3.86782452177932*^9, 3.867824528354253*^9}, {3.867824577542026*^9, 
   3.8678246001746197`*^9}, {3.8678247610704803`*^9, 3.867824844748158*^9}, {
   3.867826319345891*^9, 3.867826324242872*^9}, {3.867826550872864*^9, 
   3.867826690396695*^9}, {3.867826764919629*^9, 3.867826777757237*^9}, {
   3.86782690987878*^9, 3.867826919025632*^9}, {3.867826971158581*^9, 
   3.8678269872421*^9}, {3.867827020038966*^9, 3.867827149250887*^9}, {
   3.8678274256464777`*^9, 3.8678274261600723`*^9}, {3.8678276071029167`*^9, 
   3.867827684297661*^9}, {3.867827751210642*^9, 3.8678278869470177`*^9}, {
   3.867827956730344*^9, 3.8678279861515017`*^9}, {3.867828705137451*^9, 
   3.8678287895282907`*^9}, {3.8678288447216988`*^9, 3.867828921831334*^9}, {
   3.867828958878022*^9, 3.867829126313759*^9}, {3.867829241937851*^9, 
   3.867829397709403*^9}, {3.8678295165961514`*^9, 3.867829535114007*^9}, {
   3.867829596677389*^9, 3.8678296143035393`*^9}, {3.867829674752082*^9, 
   3.867830303148267*^9}, {3.867830340117875*^9, 3.86783049087744*^9}, {
   3.867830573387748*^9, 3.867830606554311*^9}, {3.867830641252758*^9, 
   3.8678306430594463`*^9}, {3.867844310638341*^9, 3.867844340632511*^9}, {
   3.867844379831957*^9, 3.867844511367118*^9}, {3.867845003453308*^9, 
   3.867845004358572*^9}, {3.8678459075402946`*^9, 3.867845932904167*^9}, {
   3.86792128825368*^9, 3.867921308072276*^9}, {3.867921365417322*^9, 
   3.867921447478938*^9}, {3.867921505543331*^9, 3.867921506660346*^9}, {
   3.867932161547377*^9, 3.867932184136244*^9}, {3.867932355416291*^9, 
   3.867932355919241*^9}, {3.867938041822341*^9, 3.8679380461678343`*^9}, {
   3.8679381315189342`*^9, 3.8679382332785883`*^9}, {3.8679382685342407`*^9, 
   3.867938270482974*^9}, {3.8679383076203012`*^9, 3.867938317784833*^9}, {
   3.867938386278755*^9, 3.867938411888628*^9}, {3.867938446354725*^9, 
   3.867938482951762*^9}, {3.8679424908407*^9, 3.867942491196384*^9}, {
   3.867951431491385*^9, 3.8679514489786453`*^9}, {3.867951588724586*^9, 
   3.86795159004764*^9}, {3.867952889121772*^9, 3.867952969873057*^9}, {
   3.868439305152733*^9, 3.868439512310638*^9}, {3.868444414939391*^9, 
   3.868444416396214*^9}, 3.8684453814673443`*^9, {3.8684583104182177`*^9, 
   3.868458322753787*^9}, {3.86845839050638*^9, 3.868458415899459*^9}, {
   3.86845967602528*^9, 3.868459773337824*^9}, {3.86845981189916*^9, 
   3.868459819239934*^9}, {3.868459867742468*^9, 3.868459870519052*^9}, {
   3.868459947457165*^9, 3.868459950232712*^9}, 3.8684599955727673`*^9, 
   3.8684600908253193`*^9, {3.8684603530729103`*^9, 3.8684604812713327`*^9}, {
   3.8684610667380753`*^9, 3.868461146391852*^9}, {3.868462148623035*^9, 
   3.8684621575837173`*^9}, {3.8685102645668583`*^9, 
   3.8685102670664988`*^9}, {3.869834659068996*^9, 3.8698346826537333`*^9}, {
   3.869834723003559*^9, 3.8698347365531387`*^9}, {3.869834778864244*^9, 
   3.8698347995824738`*^9}, {3.869834857329742*^9, 3.8698348949647837`*^9}, {
   3.869835048095701*^9, 3.8698350518017197`*^9}, 3.869835232620187*^9, 
   3.869835368631281*^9, 3.869835562488055*^9, {3.8698421274833803`*^9, 
   3.869842127772778*^9}, {3.870168257418293*^9, 3.8701683198656693`*^9}, {
   3.87050520533243*^9, 3.8705052388970346`*^9}, {3.870505727481763*^9, 
   3.870505736362722*^9}, {3.8705058253363647`*^9, 3.870505829718152*^9}, 
   3.8705059086455507`*^9, {3.870505970202248*^9, 3.870505979456729*^9}, {
   3.870506294567395*^9, 3.870506297364026*^9}, {3.870507242153665*^9, 
   3.8705072949470177`*^9}, {3.8705074964514723`*^9, 3.870507514865211*^9}, {
   3.870507576068118*^9, 3.870507606877165*^9}, {3.870511311668127*^9, 
   3.8705113199682293`*^9}, {3.871135612628202*^9, 3.871135614023016*^9}, {
   3.87517757538785*^9, 3.875177596862166*^9}, {3.8753396709323883`*^9, 
   3.875339679765245*^9}, 3.8755987316404343`*^9, {3.8756006705742607`*^9, 
   3.875600696192193*^9}, {3.875601391187351*^9, 3.875601434299799*^9}, {
   3.875601576567136*^9, 3.8756016163277884`*^9}, 3.875601686908*^9, 
   3.875601789572468*^9, {3.87623052164093*^9, 3.8762305249927*^9}, 
   3.876230563604692*^9, 3.876230685945731*^9, {3.877015824213505*^9, 
   3.877015848438589*^9}, {3.877069057957841*^9, 3.877069061809659*^9}, 
   3.877069980864066*^9, {3.877070303671399*^9, 3.877070306122485*^9}, {
   3.8770704193588*^9, 3.877070430863473*^9}, {3.877070461583993*^9, 
   3.877070575552795*^9}, {3.877070611404751*^9, 3.877070755753519*^9}, {
   3.87707099661753*^9, 3.8770709970745983`*^9}, {3.8825398269750032`*^9, 
   3.8825398279855967`*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"c93843d2-07da-428f-a9fc-7a3674dbd471"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{
     "\"\<Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Aut\>\"", ",", 
        "\"\<\[CapitalPhi]t: The first weight system from \
Flocci$LinearEquivWeightSystms.\\n \[CapitalLambda]: a projection matrix \
g'->s.\\n typeAlg: The algebra is standardized form.\>\"", ",", 
        "\"\<An 3-tensor of integers.\>\"", ",", 
        "\"\<A complied function for the classical algebras. Finds the inner \
automrophisms of s which take \[CapitalLambda] to a representative based on \
equivelence classes defined by inner-automorphisms of s. The technique used \
is based on the permutaiton code.\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeClassical", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[CapitalPhi]t", ",", "_Integer", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[CapitalLambda]", ",", "_Integer", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"typeAlg", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[CapitalLambda]\[CapitalPhi]", ",", 
           "\[CapitalLambda]\[CapitalPhi]S", ",", "cList", ",", "blockParent",
            ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[CapitalLambda]\[CapitalPhi]", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[CapitalLambda]", ".", "#"}], " ", "&"}], ",", 
             "\[CapitalPhi]t"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalLambda]\[CapitalPhi]S", "=", 
           RowBox[{"Ordering", "[", "\[CapitalLambda]\[CapitalPhi]", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{
           "typeAlg", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"cList", "=", 
           RowBox[{"{", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "#", "}"}], "&"}], ",", 
              "\[CapitalLambda]\[CapitalPhi]S"}], "]"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"blockParent", "=", 
           RowBox[{"{", "1", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "\[CapitalLambda]\[CapitalPhi]", "\[LeftDoubleBracket]", 
                 RowBox[{
                 "\[CapitalLambda]\[CapitalPhi]S", "\[LeftDoubleBracket]", 
                  "i", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{
                "\[CapitalLambda]\[CapitalPhi]", "\[LeftDoubleBracket]", 
                 RowBox[{
                 "\[CapitalLambda]\[CapitalPhi]S", "\[LeftDoubleBracket]", 
                  RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}], 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{
                RowBox[{"blockParent", "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+=", "1"}], 
               ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"blockParent", ",", "1"}], "]"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", " ", ",", 
              RowBox[{
              "Length", "[", "\[CapitalLambda]\[CapitalPhi]S", "]"}]}], 
             "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            StyleBox[
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"The", " ", "input", " ", 
                    RowBox[{"is", ":", "\[IndentingNewLine]", "1"}]}], ")"}], 
                  " ", "A", " ", "list", " ", "of", " ", "charges", " ", 
                  RowBox[{"e", ".", "g", ".", " ", 
                   RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], " ", "}"}]}]}], 
                 "\[IndentingNewLine]", " ", "2"}], ")"}], " ", "A", " ", 
               "list", " ", "of", " ", "the", " ", "sizes", " ", "of", " ", 
               "parent", " ", "bocks", " ", 
               RowBox[{"e", ".", "g", ".", " ", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "1"}], "}"}], ".", " ", "It"}], " ", "is", 
               " ", "within", " ", "these", " ", "parent", " ", "blocks", " ",
                "which", " ", "we", " ", "find", " ", 
               RowBox[{"permutations", ".", "\[IndentingNewLine]", "3"}]}], 
              ")"}],
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["A",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["list",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["of",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["charges",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["which",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["should",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["be",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["prepend",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["onto",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["our",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            RowBox[{
             StyleBox["charges",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[".",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["e",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[".",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["g",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[".",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}],
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[".",
              FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             StyleBox["The",
              FontColor->RGBColor[1, 0, 1]]}], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["output",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["for",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["the",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["above",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox["example",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            StyleBox[
             RowBox[{"is", ":", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}]}],
             FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "cpos", ",", "cpos1", ",", "toAdvanceTo", ",", "cnew", ",", 
              "accParent", ",", "currentblockEnd", ",", "tobreak", ",", 
              "cbag", ",", "lengthPerCharge", ",", "counter", ",", 
              "equalpairsBool", ",", "cJoined", ",", "max", ",", "sele", ",", 
              "counter2", ",", "solved", ",", "ctemp", ",", "cToSolv"}], 
             "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"accParent", "=", 
              RowBox[{"Accumulate", "[", "blockParent", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cbag", "=", 
              RowBox[{"Internal`Bag", "@", 
               RowBox[{"Most", "[", 
                RowBox[{"{", "0", "}"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"counter", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"cnew", "=", "c"}], ";", "\[IndentingNewLine]", 
                RowBox[{"counter", "++"}], ";", "\[IndentingNewLine]", 
                RowBox[{"counter2", "=", "0"}], ";", "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{"cnew", "\[NotEqual]", " ", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "test", " ", "the", " ", "equal", " ", "pairs",
                     " ", 
                    RowBox[{"condition", ".", " ", "If"}], " ", "it", " ", 
                    "fails"}], ",", " ", 
                    RowBox[{
                    "we", " ", "skip", " ", "all", " ", "permutation", " ", 
                    "which", " ", "will", " ", "change", " ", "the", " ", 
                    "point", " ", "it", " ", "fails", " ", 
                    RowBox[{"at", ".", " ", 
                    RowBox[{"-", " ", 
                    RowBox[{"JTS", ":", 
                    RowBox[{
                    RowBox[{"31", "/", "12"}], "/", "22"}]}]}]}]}]}],
                    FontColor->RGBColor[1, 0, 1]], 
                   StyleBox[" ",
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"equalpairsBool", "=", 
                    RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"counter2", "+=", "1"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"cJoined", "=", "cnew"}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "The", " ", "conditions", " ", "we", " ", "impose", " ", 
                    "for", " ", "different", " ", "types", " ", "of", " ", 
                    "algebras", " ", "start", " ", "here"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "typeAlg", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "4"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "sele", "]"}], ",", "2"}], "]"}], 
                    "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "=", "n"}], ";"}]}], "]"}], 
                    ";"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "typeAlg", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "4"}], "||", 
                    RowBox[{
                    RowBox[{
                    "typeAlg", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "3"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", "i"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "\[Equal]", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", "i"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "=", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1", "-", "i"}]}], ";"}]}], " ", 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "typeAlg", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", "i"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "\[Equal]", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", "i"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "=", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2", "-", "i"}]}], ";"}]}], " ", 
                    "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "If", " ", "it", " ", "does", " ", "not", " ", "satisfy", 
                    " ", "the", " ", "equal", " ", "pairs", " ", 
                    "condition"}], ",", " ", 
                    RowBox[{"we", " ", "put", " ", "cnew", " ", "in", " ", 
                    RowBox[{"it", "'"}], "s", " ", "minimal", " ", 
                    "lexicographic", " ", "configuration", " ", "past", " ", 
                    "the", " ", "point", " ", "equalpairsBool"}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "\[NotEqual]", " ", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ctemp", "=", "cnew"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    StyleBox["We",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["find",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["the",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["end",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["of",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["the",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["block",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["we",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["are",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["currently",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    RowBox[{
                    StyleBox["in",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[".",
                    FontColor->RGBColor[1, 0, 1]]}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"currentblockEnd", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"accParent", ",", 
                    RowBox[{
                    RowBox[{"#", "\[GreaterEqual]", " ", "equalpairsBool"}], 
                    "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"(*", 
                    RowBox[{"Get", " ", "the", " ", "last", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "then", " ", "sort", " ", "the", " ", "list", 
                    " ", "from", " ", "equalpairsBool"}], "+", 
                    RowBox[{"1", " ", "to", " ", "currentblockEnd"}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "equalpairsBool", "\[NotEqual]", "currentblockEnd"}], ",",
                     "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "+", "1"}], ",", 
                    "currentblockEnd"}], "]"}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "+", "1"}], ",", 
                    "currentblockEnd"}], "]"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "reverse", " ", "the", " ", 
                    "remaining", " ", 
                    RowBox[{"blocks", "."}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"reverse", " ", "the", " ", "b"}], "-", "b", "+", 
                    
                    RowBox[{"1", " ", "block"}], " ", "-", " ", 
                    RowBox[{
                    "would", " ", "probably", " ", "be", " ", "faster", " ", 
                    "if", " ", "went", " ", "the", " ", "other", " ", 
                    "way"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "<", "currentblockEnd"}], ",", 
                    
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "1", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "blockParent", "]"}], "-", "1"}]}],
                     "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cToSolv", "=", "cnew"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "typeAlg", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "4"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sele", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"cnew", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "n"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ">", "n"}], "&"}]}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "sele", "]"}], ",", "2"}], "]"}], 
                    "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "cToSolv", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"cToSolv", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"solved", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{"\[CapitalPhi]t", ",", 
                    RowBox[{"\[CapitalPhi]t", "\[LeftDoubleBracket]", 
                    RowBox[{"Flatten", "[", "cToSolv", "]"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"cbag", ",", "solved", ",", "2"}], "]"}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "start", " ", "at", " ", "the", " ", "end", 
                    " ", "of", " ", "the", " ", "vector", " ", "and", " ", 
                    "move", " ", "backwards"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"cpos", "=", 
                    RowBox[{"Length", "[", "cnew", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"tobreak", "=", "False"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"While", "[", 
                    RowBox[{"True", ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "want", " ", "to", " ", "find", " ", "the", 
                    " ", "first", " ", "cpos", " ", "which", " ", "can", " ", 
                    "be", " ", 
                    RowBox[{"advanced", ".", " ", "This"}], " ", "means"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"it", " ", "satisfies", " ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "<", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"cpo", "+", "1"}], "\[RightDoubleBracket]"}], " ",
                     "and", " ", "is", " ", "not", " ", "the", " ", "end", 
                    " ", "of", " ", "a", " ", 
                    RowBox[{"block", "."}]}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cpos1", "=", "cpos"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"--", "cpos"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "  ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"accParent", ",", "cpos"}], "]"}]}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "k", " ", "for", 
                    " ", "which", " ", 
                    RowBox[{"v", "[", "k", "]"}]}], "<", 
                    RowBox[{
                    RowBox[{"v", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], " ", "and", " ", "k", " ",
                     "not", " ", "an", " ", 
                    RowBox[{"end", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "end", " ", "of", " ",
                     "the", " ", "block", " ", "we", " ", "are", " ", 
                    "currently", " ", 
                    RowBox[{"in", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"currentblockEnd", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"accParent", ",", 
                    RowBox[{
                    RowBox[{"#", ">", "cpos"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"(*", 
                    RowBox[{"Get", " ", "the", " ", "last", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "smallest", " ", 
                    "value", " ", "in", " ", "the", " ", "block", " ", 
                    "which", " ", "we", " ", "can", " ", "use", " ", "to", 
                    " ", "advance", " ", "our", " ", "current", " ", 
                    "position"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"toAdvanceTo", "=", "currentblockEnd"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "toAdvanceTo", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"--", "toAdvanceTo"}], ";"}]}], "]"}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "l", " ", "such",
                     " ", "that", " ", 
                    RowBox[{"a", "[", "k", "]"}]}], "<", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "swap", " ", "the", " ", "cpos", " ", "and", 
                    " ", "toAdvanceTo", " ", 
                    RowBox[{"position", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"toAdvanceTo", ",", "cpos"}], "}"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"cpos", ",", "toAdvanceTo"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{"swap", " ", 
                    RowBox[{"a", "[", "k", "]"}], " ", "and", " ", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "then", " ", "sort", " ", "the", " ", "list", 
                    " ", "from", " ", "cpos1", " ", "to", " ", 
                    "currentblockEnd"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "We", " ", "now", " ", "want", " ", "to", " ", "reverse", 
                    " ", "the", " ", "remaining", " ", "blocks"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "reverse", " ", "the", " ", 
                    "remaining", " ", 
                    RowBox[{"blocks", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"reverse", " ", "the", " ", "b"}], "-", "b", "+", 
                    
                    RowBox[{"1", " ", "block"}], " ", "-", " ", 
                    RowBox[{
                    "would", " ", "probably", " ", "be", " ", "faster", " ", 
                    "if", " ", "went", " ", "the", " ", "other", " ", 
                    "way"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "<", "currentblockEnd"}], ",", 
                    
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "1", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "blockParent", "]"}], "-", "1"}]}],
                     "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "break", " ", "out", " ", "of", 
                    " ", "the", " ", "loop", " ", "of", " ", "k"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0, 1]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"If", " ", "cpos", " ", "is", " ", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], " ", "at", " ", "this", " ", 
                    "point"}], ",", " ", 
                    RowBox[{
                    "then", " ", "we", " ", "have", " ", "reached", " ", 
                    "the", " ", "end", " ", "and", " ", "our", " ", "list", 
                    " ", "is", " ", "in", " ", "reverse", " ", 
                    "lexicographic", " ", 
                    RowBox[{"ordering", ".", " ", "We"}], " ", 
                    RowBox[{"stop", "."}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cpos", "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"cnew", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", "cList"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Internal`BagPart", "[", 
                 RowBox[{"cbag", ",", "All"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{
                  "cList", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "]"}], "+", 
                 RowBox[{"Length", "[", 
                  RowBox[{
                  "prependCharges", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"cbag", ",", "All"}], "]"}], ",", 
                  RowBox[{
                  "typeAlg", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}], ",", 
                RowBox[{
                "typeAlg", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], "//", 
              "DeleteDuplicates"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882858079266975*^9, 3.882858165929459*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"d9d7177b-a1fb-4ca8-aeab-5b97d2cee98a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{
    "\"\<Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple\>\"", ",", 
     
     RowBox[{"{", 
      RowBox[{
      "\"\<Aut\>\"", ",", 
       "\"\<s: A simple Lie algebra.\\n \[CapitalLambda]: a projection matrix \
g'->s.\>\"", ",", "\"\<An 3-tensor of integers.\>\"", ",", 
       "\"\<Finds the inner automrophisms of s which take \[CapitalLambda] to \
a representative based on equivelence classes defined by inner-automorphisms \
of s.\>\""}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "[", 
   RowBox[{"s_", ",", "\[CapitalLambda]_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalPhi]", ",", "\[CapitalLambda]\[CapitalPhi]", ",", 
      "\[CapitalLambda]\[CapitalPhi]S", ",", "n", ",", 
      "\[CapitalLambda]\[CapitalPhi]Split", ",", "index", ",", "tuples", ",", 
      "permutations", ",", "allowedPermutations", ",", "y", ",", "eqs", ",", 
      "P", ",", "Pp", ",", "inner", ",", "intsort", ",", "intsplit", ",", 
      "oddoreven", ",", "leftinverse", ",", "gcd"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Outputs", " ", "the", " ", "set", " ", "of", " ", "inner", " ", 
      "automorphisms", " ", "which", " ", "take", " ", "\[CapitalLambda]", 
      " ", "to", " ", "one", " ", "which", " ", "preseves", " ", "ordering"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "=", 
      RowBox[{
       RowBox[{"Flocci$LinearEquivWeightSystms", "[", "s", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$classicalQ", "[", "s", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{
         "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeClassical", "[", 
          
          RowBox[{"\[CapitalPhi]", ",", "\[CapitalLambda]", ",", 
           RowBox[{"Flocci$AlgStandard", "[", "s", "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "G2", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "F4", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "We", " ", "want", " ", "the", " ", "members", " ", "of", " ", "the", 
         " ", "Weyl", " ", "group", " ", "which", " ", "minimize", " ", "the",
          " ", "order", " ", "of", " ", "\[CapitalPhi]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$InnerAutThroughWeyl", "[", 
          RowBox[{"\[CapitalLambda]", ",", 
           RowBox[{"Flocci$WeylGroup", "[", "E6", "]"}], ",", 
           "\[CapitalPhi]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$E7InnerAut", "[", "\[CapitalLambda]", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"inner", "=", 
         RowBox[{"Flocci$E8InnerAut", "[", "\[CapitalLambda]", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "inner"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.882858022383976*^9, 3.882858070067429*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"8b3d23fd-ab2c-42b9-b15e-edb29db4e60d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{
   "{", "\"\<Flocci$innerAutsMap\[CapitalLambda]ToRepresentative\>\"", "}"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "::", "tag"}], "=", 
   "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "::", "input"}], 
   "=", "\"\<g: A semi-simple Lie algebra.\\n \[CapitalLambda]: a projection \
matrix g'->g.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "::", "output"}], 
   "=", "\"\<A integer 3-tensor.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "::", 
     "description"}], "=", 
    "\"\<Finds the inner automrophisms of g which take \[CapitalLambda] to a \
representative based on equivelence classes defined by inner-automorphisms of \
g.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "[", 
   RowBox[{"g_List", ",", "\[CapitalLambda]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ranklist", ",", "\[CapitalLambda]parts", ",", "listinner", ",", 
      "tuples"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"We", " ", "find", " ", "the", " ", "inner"}], "-", 
      RowBox[{
      "automorphisms", " ", "which", " ", "put", " ", "\[CapitalLambda]", " ",
        "into", " ", "a", " ", "minimal", " ", "form"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ranklist", "=", 
      RowBox[{"Flocci$Rank", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]parts", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"FoldPairList", "[", 
         RowBox[{"TakeDrop", ",", 
          RowBox[{"Transpose", "[", "\[CapitalLambda]", "]"}], ",", 
          "ranklist"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listinner", "=", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{
        "Flocci$innerAutsMap\[CapitalLambda]ToRepresentativeSimple", "[", 
         RowBox[{
          RowBox[{"g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "\[CapitalLambda]parts", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tuples", "=", 
      RowBox[{"Tuples", "[", "listinner", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"Hold", "/@", "#"}], "]"}], "//", "ReleaseHold"}], "//", 
          "ArrayFlatten"}], ")"}], "&"}], ",", "tuples"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867830629348418*^9, 3.867830639647964*^9}, {
  3.867830682591498*^9, 3.867830801278678*^9}, {3.867830919109268*^9, 
  3.8678309343843412`*^9}, {3.867844273954784*^9, 3.867844283990774*^9}, {
  3.8684453868636513`*^9, 3.86844539613523*^9}, {3.875601621029471*^9, 
  3.875601627027738*^9}, {3.87560166670755*^9, 3.875601695160315*^9}, {
  3.877070798696796*^9, 3.877070822379459*^9}, {3.877071626399893*^9, 
  3.877071627323989*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"4335bf2a-1d9d-4a59-8209-668562a0b116"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outer automorphisms and weight system", "Subsection",
 CellChangeTimes->{{3.875606944630865*^9, 
  3.875606949974276*^9}},ExpressionUUID->"0f364bee-6da7-4f31-b487-\
f387376c6802"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{
   "{", "\"\<Flocci$OuterAutTakeWsToMinAndGroupPreserveMin\>\"", "}"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "::", "tag"}], 
   "=", "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "::", "input"}], 
   "=", "\"\<out: The outer-autmorphisms of g.\\n \[CapitalPhi]: A weight \
system of g.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "::", "output"}], 
   "=", "\"\<A pair {or,out\[Beta]} where or is a list of integers, and out\
\[Beta] is a list of lists of integers.\>\""}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "::", "description"}], 
    "=", "\"\<or is an outer automorphrism which takes \[CapitalPhi] to its \
minimum form (after sorting). out\[Beta] is the group of outer automorphisms \
which perserve \[CapitalPhi]\[LeftDoubleBracket]All,or\[RightDoubleBracket] \
(not point-wise). \>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "[", 
   RowBox[{"out_", ",", "\[CapitalPhi]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "or", ",", "out\[Beta]", ",", "rot", ",", "\[CapitalLambda]\[Alpha]t", 
      ",", "\[CapitalLambda]\[Rho]t", ",", "aut\[CapitalLambda]\[Alpha]"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"or", "=", 
      RowBox[{
       RowBox[{"MinimalBy", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Function", "[", 
          RowBox[{"ot", ",", 
           RowBox[{"Sort", "[", 
            RowBox[{"\[CapitalPhi]", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "ot"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rot", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"\[CapitalPhi]", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "or"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out\[Beta]", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Function", "[", 
          RowBox[{"s", ",", 
           RowBox[{"rot", "\[Equal]", 
            RowBox[{"Sort", "[", 
             RowBox[{"rot", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "s"}], "\[RightDoubleBracket]"}], "]"}]}]}],
           "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"or", ",", "out\[Beta]"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870500307333953*^9, 3.870500314517412*^9}, {
  3.870500369821924*^9, 3.870500374254539*^9}, {3.8705020042194147`*^9, 
  3.8705021004221582`*^9}, {3.8705034693446074`*^9, 3.870503525653337*^9}, {
  3.870503574507732*^9, 3.87050358025804*^9}, {3.870505622595274*^9, 
  3.870505624927238*^9}, {3.8752494402070007`*^9, 3.875249443747929*^9}, {
  3.875596060639305*^9, 3.8755960657838163`*^9}, {3.875606775841578*^9, 
  3.875606931928928*^9}, {3.877071034398047*^9, 3.877071038019644*^9}, {
  3.877071071866589*^9, 3.87707107202115*^9}, {3.8770711722438107`*^9, 
  3.8770713305889587`*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"f9332cbb-12d2-47c2-96bf-7d9b32f79ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Composable projection matrices in unique form", "Subsection",
 CellChangeTimes->{{3.8677379672631063`*^9, 3.8677379699809723`*^9}, {
   3.867820629751738*^9, 3.867820632406412*^9}, {3.868443883441812*^9, 
   3.8684439020699663`*^9}, 3.872253776686863*^9, {3.875607328512241*^9, 
   3.875607344513*^9}},ExpressionUUID->"9bf5cf03-9030-44c4-a71b-6521a6c8a527"],

Cell["\<\
We want to find the unique \[CapitalLambda]\[Alpha], and \[CapitalLambda]\
\[Rho] given a set of \[Beta]-preserving outer automorphisms.\
\>", "Text",
 CellChangeTimes->{{3.867822648914105*^9, 
  3.8678226893117313`*^9}},ExpressionUUID->"3279a3e3-3217-4d7e-a0b0-\
fa6b11854268"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$ProjectionMatricesUniqueForm\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ProjectionMatricesUniqueForm", "::", "tag"}], "=", 
   "\"\<Aut\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ProjectionMatricesUniqueForm", "::", "input"}], "=", 
   "\"\<\[CapitalLambda]\[Alpha]sub: The projection matrix of the child \
algebra to the input.\\n \[CapitalLambda]\[Rho]in:The projection matrix from \
the parent to the child.\\n out) Outer-automorphisms which preserve \[Beta] \
of the parent.\\ng) The parent algebra.\\nAutIn) The group of automorphisms \
which preserves \[CapitalLambda]\[Alpha]t.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ProjectionMatricesUniqueForm", "::", "output"}], "=", 
   "\"\<A quadruple.\\n 1) The projection matrix \[CapitalLambda]\[Alpha] of \
the parent in a unique form.\\n 2) The morphisms \[CapitalLambda]\[Rho] in a \
unique form.\\n 3) The group of automorphisms which preserve \[CapitalLambda]\
\[Alpha]. \\n 4) The automorphism used to change \[CapitalLambda]\[Alpha]'s \
form.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ProjectionMatricesUniqueForm", "::", "description"}], "=", 
   " ", "\"\<This takes in \[CapitalLambda]\[Alpha]t, \[CapitalLambda]\[Rho], \
the list of outerautomorphisms of g which preserve \[Beta], and the list of \
automorphisms which preserves \[CapitalLambda]\[Alpha]t. It outputs a unique \
represenative of the equivelence class \[LeftDoubleBracket]\[CapitalLambda]\
\[Alpha]\[RightDoubleBracket]\ndefined by automorphism of g. And a unique \
represenative of \[LeftDoubleBracket]\[CapitalLambda]\[Rho]\
\[RightDoubleBracket] defined by automorphisms of gt and g, such that the \
relation \[CapitalLambda]\[Alpha]t.\[CapitalLambda]\[Rho]=\[CapitalLambda]\
\[Alpha] is preserved.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ProjectionMatricesUniqueForm", "[", 
   RowBox[{
   "\[CapitalLambda]\[Alpha]sub_", ",", "\[CapitalLambda]\[Rho]in_", ",", 
    "out_", ",", "g_", ",", "AutIn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalLambda]\[Alpha]", ",", "\[CapitalLambda]\[Rho]", ",", "AutAll",
       ",", "\[CapitalPhi]pa", ",", "ranklist", ",", "AutAllSort", ",", 
      "Aut\[CapitalLambda]\[Alpha]", ",", "Aut\[CapitalLambda]\[Alpha]Sort", 
      ",", "Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]", ",", 
      "AutSub\[CapitalLambda]\[Rho]Sort", ",", "AutSub\[CapitalLambda]\[Rho]",
       ",", "Aut\[CapitalLambda]\[Alpha]PresT", ",", 
      "Aut\[CapitalLambda]\[Alpha]Pres", ",", "Mi", ",", "outused", ",", 
      "R"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Input", ":", " ", "\[IndentingNewLine]", "\[CapitalLambda]\[Alpha]sub",
        ":", " ", 
       RowBox[{
       "Which", " ", "is", " ", "\[CapitalLambda]\[Alpha]", " ", "of", " ", 
        "the", " ", "sub", " ", "algebra", " ", 
        RowBox[{"gt", ".", "\[IndentingNewLine]", 
         RowBox[{"\[CapitalLambda]\[Rho]in", ":", " ", 
          RowBox[{
          "which", " ", "is", " ", "the", " ", "projection", " ", "matrix", 
           " ", "of", " ", "\[Rho]"}], ":", "gt"}]}]}]}], "\[Rule]", 
      RowBox[{"g", "\[IndentingNewLine]", 
       RowBox[{"out", ":", " ", 
        RowBox[{
         RowBox[{"The", " ", "outer"}], "-", 
         RowBox[{
         "automorphisms", " ", "of", " ", "g", " ", "which", " ", "preserve", 
          " ", "the", " ", "corresponding", " ", 
          RowBox[{"\[Beta]", ".", "\[IndentingNewLine]", "Output"}]}]}], ":", 
        "\[IndentingNewLine]", 
        RowBox[{"a", " ", "pair", " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalLambda]\[Alpha]", ",", "\[CapitalLambda]\[Rho]"}],
           ")"}], " ", "which", " ", "are", " ", "unique", " ", 
         "represenatives", " ", "of", " ", "their", " ", "respective", " ", 
         "equivelence", " ", 
         RowBox[{"classes", "."}]}]}]}]}], " ", "\[IndentingNewLine]", "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "from", " ", "the", " ", "projection", " ", "matrix", " ", 
       "for", " ", "the", " ", "parent", " ", 
       RowBox[{"node", "."}]}],
      FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalLambda]\[Alpha]", "=", 
      RowBox[{
      "\[CapitalLambda]\[Alpha]sub", ".", "\[CapitalLambda]\[Rho]in"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]\[Rho]", "=", "\[CapitalLambda]\[Rho]in"}], ";",
      "\[IndentingNewLine]", " ", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "find", " ", "all", " ", "automorphisms", " ", "which", " ", 
       "put", " ", "\[CapitalLambda]\[Alpha]", " ", "into", " ", "a", " ", 
       "minimal", " ", "form"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       StyleBox[
        RowBox[{"We", " ", "find", " ", "the", " ", 
         StyleBox["set",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["of",
          FontSlant->"Italic"], " ", "automorphisms", " ", "o", " ", "of", 
         " ", "g", " ", "such", " ", "that", " ", "o", " ", "preserves", " ", 
         "\[Beta]", " ", "and", " ", 
         RowBox[{"\[CapitalLambda]\[Alpha]", ".", "o"}], " ", "minimizes", 
         " ", "lexicographically", " ", "its", " ", "value", " ", "on", " ", 
         "the", " ", "set", " ", "weight", " ", "systems"}],
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[",",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], 
       RowBox[{
        StyleBox[
         RowBox[{
         "for", " ", "a", " ", "given", " ", "projectoin", " ", "Inn"}],
         FontColor->RGBColor[1, 0.5, 0.5]], 
        StyleBox["\[Rule]",
         FontColor->RGBColor[1, 0.5, 0.5]], 
        RowBox[{"Out", 
         StyleBox[".",
          FontColor->RGBColor[1, 0.5, 0.5]]}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"out", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "]"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"R", " ", "is", " ", "needed", " ", "to", " ", 
       RowBox[{"`invert", "'"}], " ", "the", " ", "outer", " ", 
       "automorphism"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AutAll", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{"i", ",", 
               RowBox[{"i", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "R"}], "}"}], "]"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                "\[RightDoubleBracket]"}]}], "]"}], ",", 
             RowBox[{
             "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "[", 
              RowBox[{"g", ",", 
               RowBox[{"\[CapitalLambda]\[Alpha]", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}]}], 
              "]"}]}], "]"}], "&"}], ",", "out"}], "]"}], "//", "Timing"}], "//", 
       RowBox[{"Flocci$Timing", "[", "\"\<projMatrix: 2\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "form", " ", "the", " ", "weight", " ", "system", " ", 
        "\[CapitalPhi]pa", " ", "which", " ", "is", " ", "the", " ", "direct",
         " ", "sum", " ", "of", " ", "the", " ", "irreps", " ", "of", " ", 
        "w1", " ", "for", " ", "each", " ", 
        RowBox[{"gi", "."}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ranklist", "=", 
      RowBox[{"Flocci$Rank", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPhi]pa", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Take", "[", 
                    RowBox[{"ranklist", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}],
                 ",", "#", ",", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Take", "[", 
                    RowBox[{"ranklist", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
               "]"}], "&"}], ",", 
             RowBox[{
              RowBox[{"Flocci$LinearEquivWeightSystms", "[", 
               RowBox[{
               "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "choose", " ", 
        StyleBox["the",
         FontSlant->"Italic"], 
        StyleBox[" ",
         FontSlant->"Italic"], 
        StyleBox["set",
         FontSlant->"Italic"], " ", "the", " ", "automorphisms", " ", "which",
         " ", "put", " ", "\[CapitalLambda]\[Alpha]", " ", "the", " ", "form",
         " ", "which", " ", "minimizes", " ", "\[CapitalPhi]pa"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AutAllSort", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"AutAll", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"\[CapitalLambda]\[Alpha]", ".", "#", ".", 
           RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Aut\[CapitalLambda]\[Alpha]", "=", 
      RowBox[{
       RowBox[{"SplitBy", "[", 
        RowBox[{"AutAllSort", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"\[CapitalLambda]\[Alpha]", ".", "#", ".", 
            RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
          "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Given", " ", "these"}], ",", " ", 
       RowBox[{
       "we", " ", "the", " ", "one", " ", "which", " ", "puts", " ", 
        "\[CapitalLambda]\[Rho]", " ", "into", " ", "the", " ", "minimal", 
        " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Aut\[CapitalLambda]\[Alpha]Sort", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{"Aut\[CapitalLambda]\[Alpha]", ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"\[CapitalLambda]\[Rho]", ".", "#", ".", 
           RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]", "=", 
      RowBox[{
       RowBox[{"SplitBy", "[", 
        RowBox[{"Aut\[CapitalLambda]\[Alpha]Sort", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"\[CapitalLambda]\[Rho]", ".", "#", ".", 
            RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
          "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]\[Rho]", "=", " ", 
      RowBox[{"\[CapitalLambda]\[Rho]", ".", 
       RowBox[{
       "Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]", 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]\[Alpha]", "=", 
      RowBox[{"\[CapitalLambda]\[Alpha]", ".", 
       RowBox[{
       "Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]", 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"outused", "=", 
      RowBox[{
      "Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]", 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "find", " ", 
        StyleBox["the",
         FontSlant->"Italic"], 
        StyleBox[" ",
         FontSlant->"Italic"], 
        StyleBox["group",
         FontSlant->"Italic"], " ", "of", " ", "automorphisms", " ", "which", 
        " ", "preserve", " ", "\[CapitalLambda]\[Alpha]"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Mi", "=", 
          RowBox[{"Inverse", "[", 
           RowBox[{
           "Aut\[CapitalLambda]\[Alpha]", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Aut\[CapitalLambda]\[Alpha]Pres", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mi", ".", "#"}], " ", "&"}], ",", " ", 
            "Aut\[CapitalLambda]\[Alpha]"}], "]"}]}], ";"}], "//", "Timing"}],
        ")"}], "//", 
      RowBox[{"Flocci$Timing", "[", "\"\<projMatrix: 4\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "want", " ", "to", " ", "do", " ", "automorphisms", " ", 
       "on", " ", "the", " ", "other", " ", "side", " ", "of", " ", 
       "\[CapitalLambda]\[Rho]"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AutSub\[CapitalLambda]\[Rho]Sort", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{"AutIn", ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"#", ".", "\[CapitalLambda]\[Rho]", ".", 
           RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AutSub\[CapitalLambda]\[Rho]", "=", 
      RowBox[{
       RowBox[{"SplitBy", "[", 
        RowBox[{"AutSub\[CapitalLambda]\[Rho]Sort", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"#", ".", "\[CapitalLambda]\[Rho]", ".", 
            RowBox[{"Transpose", "[", "\[CapitalPhi]pa", "]"}]}], "]"}], 
          "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "can", " ", "then", " ", "take", " ", "any", " ", 
       "automorhpism", " ", "in", " ", 
       "Aut\[CapitalLambda]\[Alpha]\[CapitalLambda]\[Rho]"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[CapitalLambda]\[Alpha]", ",", 
       RowBox[{
        RowBox[{
        "AutSub\[CapitalLambda]\[Rho]", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ".", "\[CapitalLambda]\[Rho]"}], ",", 
       "Aut\[CapitalLambda]\[Alpha]Pres", ",", "outused"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867822700480377*^9, 3.8678229812711782`*^9}, 
   3.867823164669133*^9, {3.867823860672236*^9, 3.8678239456972847`*^9}, 
   3.867823992487903*^9, {3.867831124945922*^9, 3.867831701296097*^9}, {
   3.8678398136786613`*^9, 3.867839824439088*^9}, {3.86783986508638*^9, 
   3.867839907059065*^9}, {3.867839947422881*^9, 3.867840062346285*^9}, {
   3.867844101769763*^9, 3.867844200360222*^9}, {3.867844534244369*^9, 
   3.867844534494052*^9}, {3.86784557619419*^9, 3.8678455837199793`*^9}, {
   3.8678523382170467`*^9, 3.867852376462797*^9}, {3.867852416619791*^9, 
   3.8678524952296867`*^9}, {3.8678526096419764`*^9, 
   3.8678526970278473`*^9}, {3.8678532199836273`*^9, 3.867853220277314*^9}, {
   3.8678532550499973`*^9, 3.867853258481552*^9}, {3.8678532909509287`*^9, 
   3.8678533960752993`*^9}, {3.867856071698635*^9, 3.867856120448786*^9}, {
   3.8678561616950903`*^9, 3.867856273586431*^9}, {3.867856356606851*^9, 
   3.867856442786192*^9}, {3.8678565139103518`*^9, 3.867856515554785*^9}, {
   3.867856553156372*^9, 3.867856555245606*^9}, {3.8678566168425903`*^9, 
   3.867856619375041*^9}, {3.867856660808469*^9, 3.867856661136054*^9}, {
   3.867856707957781*^9, 3.867856748284202*^9}, {3.8678570670878887`*^9, 
   3.867857077320054*^9}, {3.8678571504716673`*^9, 3.867857197145421*^9}, {
   3.867857251587221*^9, 3.867857283408513*^9}, {3.867934021137724*^9, 
   3.867934045715365*^9}, {3.867952699925765*^9, 3.86795270467883*^9}, {
   3.867952797405221*^9, 3.8679527992906113`*^9}, {3.867952846786036*^9, 
   3.8679528542242317`*^9}, {3.867952980533608*^9, 3.867952988993764*^9}, {
   3.868438346924717*^9, 3.868438572937907*^9}, {3.8684494016291*^9, 
   3.868449408404512*^9}, {3.869644606185193*^9, 3.8696446206877117`*^9}, {
   3.869644935894343*^9, 3.869644965650055*^9}, {3.869645028243761*^9, 
   3.869645095845283*^9}, {3.869645139408966*^9, 3.869645139629511*^9}, {
   3.869645192300943*^9, 3.86964519473382*^9}, {3.869645266496028*^9, 
   3.86964526875926*^9}, {3.869645438860631*^9, 3.869645445177169*^9}, {
   3.8696454772686*^9, 3.8696455229803743`*^9}, {3.869645727265819*^9, 
   3.8696457280071297`*^9}, {3.869832057264056*^9, 3.869832065288868*^9}, {
   3.869832222544705*^9, 3.869832243550054*^9}, {3.869832896654009*^9, 
   3.869833022008852*^9}, {3.8698330937734327`*^9, 3.869833244830765*^9}, {
   3.869833312191977*^9, 3.869833320175308*^9}, {3.869833390014329*^9, 
   3.8698334759664183`*^9}, {3.86983359512018*^9, 3.869833613378579*^9}, {
   3.869833653022153*^9, 3.8698338258507338`*^9}, {3.869900967534239*^9, 
   3.8699009679317083`*^9}, {3.872245902702812*^9, 3.872245991849146*^9}, 
   3.8722568793765574`*^9, {3.875083372380274*^9, 3.875083431629653*^9}, {
   3.8752492977955303`*^9, 3.875249300971086*^9}, {3.875282342395893*^9, 
   3.8752824089999933`*^9}, {3.875282475595767*^9, 3.8752825601575937`*^9}, {
   3.875341378168707*^9, 3.875341388205456*^9}, {3.875341427020981*^9, 
   3.8753414357150097`*^9}, 3.875601648399972*^9, {3.875607255810137*^9, 
   3.875607301097885*^9}, {3.875607348256068*^9, 3.875607348950922*^9}, {
   3.876230537784812*^9, 3.876230541362115*^9}, 3.877069986522808*^9, {
   3.877071405009241*^9, 3.877071550082897*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"8178e3bd-f3b0-452f-8b29-fe2a1de67c4a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Embeddings of semi-simple Lie algebras", "Section",
 CellChangeTimes->{{3.868443956578938*^9, 3.868443974983118*^9}, {
  3.8756033542935534`*^9, 
  3.875603360465548*^9}},ExpressionUUID->"a72c1cfe-49e9-4d60-85ba-\
ae3c37ccc696"],

Cell[CellGroupData[{

Cell["\<\
Non semi-simple regular Embeddings (with U(1), which we leave out)\
\>", "Subsection",
 CellChangeTimes->{{3.869924304080771*^9, 3.869924328717197*^9}, 
   3.875608215711132*^9},ExpressionUUID->"c238643f-73de-47db-be65-\
a8b72f2b36ba"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["A", "n"], 
  TraditionalForm]],ExpressionUUID->"0803f8f8-de54-4bb6-abdf-9b7ae85d4fce"]], \
"Text",
 CellChangeTimes->{{3.8699290584581423`*^9, 
  3.869929060656191*^9}},ExpressionUUID->"78c8e961-74d1-47a1-ba6a-\
191ec9e66881"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$NonSSEmbeddingAn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingAn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingAn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent A algebra as an integer, e.g. 4 for \
A4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingAn", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(A\), \(rank\)]\) with one representative projection \
matrix in the format {{\!\(\*SubscriptBox[\(A\), \
\(rank\)]\),{\!\(\*SubscriptBox[\(A\), \(child1\)]\),...},projection \
Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingAn", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(A\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingAn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "<=", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<A\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"resultList", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"origAlg", ",", 
         RowBox[{"{", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<A\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"rank", "-", "1"}], "]"}]}], "]"}], "}"}], ",", 
         RowBox[{"PadRight", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"rank", "-", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
        "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"resultList", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"resultList", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"origAlg", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<A\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"rank", "-", "r", "-", "1"}], "]"}]}], "]"}], ",", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<A\>\"", "<>", 
                RowBox[{"ToString", "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "r", "-", "1"}], "]"}], ",", "0", ",", 
                 "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"IdentityMatrix", "[", "r", "]"}]}], "}"}]}], "}"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"rank", "-", "1"}], ")"}], "/", "2"}], "]"}], ",", 
            RowBox[{"rank", "-", "2"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "resultList", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8699121753712378`*^9, 3.869912488403482*^9}, {
  3.8699125522977533`*^9, 3.8699125644981203`*^9}, {3.869912607985455*^9, 
  3.8699126201649427`*^9}, {3.869912837224345*^9, 3.869912948385805*^9}, {
  3.869913023544574*^9, 3.869913028983157*^9}, {3.869913217966996*^9, 
  3.869913275276301*^9}, {3.869923849027954*^9, 3.8699238512226353`*^9}, {
  3.87102925669313*^9, 3.871029280976542*^9}, {3.87517823984483*^9, 
  3.875178246610425*^9}, {3.875340782672996*^9, 3.875340796363501*^9}, {
  3.876819733402453*^9, 3.876819746664197*^9}, {3.8768197800507812`*^9, 
  3.8768199894299593`*^9}, {3.876820210111121*^9, 3.876820210602791*^9}, {
  3.876820641966148*^9, 3.876820648140956*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"67116743-ef25-4d65-b12d-f89904af2fc7"],

Cell[BoxData[
 SubscriptBox["B", "n"]], "Text",
 CellChangeTimes->{{3.8699290637510242`*^9, 
  3.869929067567617*^9}},ExpressionUUID->"97e6c1b3-be4f-45d0-90f4-\
e625a0bd545c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$NonSSEmbeddingBn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingBn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingBn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent B algebra as an integer, e.g. 4 for \
B4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingBn", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(B\), \(rank\)]\) with one representative projection \
matrix in the format {{\!\(\*SubscriptBox[\(B\), \
\(rank\)]\),{child1,...},projection Matrix},...}\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingBn", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(B\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingBn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "<=", "2"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<B\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "==", "3"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"B3", ",", 
           RowBox[{"{", "C2", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "}"}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"origAlg", ",", 
           RowBox[{"{", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<B\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"rank", "-", "1"}], "]"}]}], "]"}], "}"}], ",", 
           RowBox[{"PadLeft", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"rank", "-", "1"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
          "}"}], "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869913694366556*^9, 3.869913694945402*^9}, {
   3.8699137351768713`*^9, 3.869913739855809*^9}, {3.869913857094265*^9, 
   3.8699139626650257`*^9}, {3.86991949960612*^9, 3.869919595095463*^9}, {
   3.869920061024166*^9, 3.86992007303644*^9}, {3.869920813589857*^9, 
   3.8699208168713503`*^9}, 3.8699239314861717`*^9, {3.875178287152074*^9, 
   3.875178290980002*^9}, {3.875340801604127*^9, 3.8753408036794357`*^9}, {
   3.876820007352035*^9, 3.87682007159916*^9}, {3.876820205790238*^9, 
   3.876820206213879*^9}, {3.87682065911033*^9, 3.876820664419242*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"96399b9b-6082-4933-8129-74a743d64ce7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["C", "n"], 
  TraditionalForm]],ExpressionUUID->"c13d39db-74cd-4f69-960d-d5a980c66258"]], \
"Text",
 CellChangeTimes->{{3.869929072824122*^9, 
  3.869929074290675*^9}},ExpressionUUID->"818d539d-b414-4c42-8e18-\
4b103ed516ea"],

Cell[TextData[{
 "changed minimal rank to rank >= 3 because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "1"], "->", 
    SubscriptBox["C", "2"]}], TraditionalForm]],ExpressionUUID->
  "3f0f5023-7b97-48d3-9bc3-82df6d60043f"],
 " is not maximal (see Gruber & Samuel)"
}], "Text",
 CellChangeTimes->{
  3.8709494702934027`*^9},ExpressionUUID->"5b3fb446-bb87-4122-a30c-\
d3f7ac473fc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$NonSSEmbeddingCn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingCn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingCn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent C algebra as an integer, e.g. 4 for \
C4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingCn", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(C\), \(rank\)]\) with one representative projection \
matrix in the format {{\!\(\*SubscriptBox[\(C\), \
\(rank\)]\),{child1,...},projection Matrix},...}\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingCn", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(C\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingCn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "<=", "2"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<C\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"origAlg", ",", 
         RowBox[{"{", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<A\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"rank", "-", "1"}], "]"}]}], "]"}], "}"}], ",", 
         RowBox[{"PadRight", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"rank", "-", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
        "}"}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869914048650326*^9, 3.869914074451227*^9}, {
   3.869919471245008*^9, 3.869919490041206*^9}, {3.86992018864224*^9, 
   3.869920240684284*^9}, {3.8699208972898397`*^9, 3.869920904119585*^9}, 
   3.8699239344669323`*^9, {3.870949473822008*^9, 3.8709494739337597`*^9}, {
   3.875178294231392*^9, 3.875178296971757*^9}, {3.875340806896414*^9, 
   3.875340809295123*^9}, {3.876820082061674*^9, 3.876820105326016*^9}, {
   3.8768202014474697`*^9, 3.876820201838743*^9}, {3.87682067134969*^9, 
   3.876820675691297*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"a550237f-e4d5-4131-86d0-bcd92824eef9"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["D", "n"], 
  TraditionalForm]],ExpressionUUID->"224f7459-6282-4172-ba52-7204155ecbed"]], \
"Text",
 CellChangeTimes->{{3.869929079090868*^9, 
  3.86992908029576*^9}},ExpressionUUID->"491b3eea-5ce1-4604-a411-\
355204f39e7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$NonSSEmbeddingDn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingDn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingDn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent D algebra as an integer, e.g. 4 for \
D4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingDn", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(D\), \(rank\)]\) with one representative projection \
matrix in the format {{\!\(\*SubscriptBox[\(D\), \
\(rank\)]\),{child1,...},projection Matrix},...}\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingDn", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(D\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingDn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "<=", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "==", "4"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"D4", ",", 
           RowBox[{"{", "A3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
          "}"}], "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rank", "==", "5"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"D5", ",", 
            RowBox[{"{", "A4", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
              "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"D5", ",", 
            RowBox[{"{", "D4", "}"}], ",", 
            RowBox[{"PadLeft", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"origAlg", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<D\>\"", "<>", 
           RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<A\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"rank", "-", "1"}], "]"}]}], "]"}], "}"}], ",", 
             RowBox[{"PadRight", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"rank", "-", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<D\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"rank", "-", "1"}], "]"}]}], "]"}], "}"}], ",", 
             RowBox[{"PadLeft", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"rank", "-", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}]}], 
            "}"}]}], "}"}], "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869914101940041*^9, 3.869914102277658*^9}, {
   3.869914135139123*^9, 3.8699141477188473`*^9}, {3.86992078595863*^9, 
   3.869920866890293*^9}, {3.869920910484407*^9, 3.869920939037624*^9}, 
   3.869923936762084*^9, {3.870163934839436*^9, 3.870163935251082*^9}, {
   3.8751783027523108`*^9, 3.875178305778297*^9}, {3.875340812945056*^9, 
   3.8753408150193768`*^9}, {3.876820116486733*^9, 3.8768201847732277`*^9}, {
   3.8768206856372223`*^9, 3.8768206932865963`*^9}, {3.878034632035111*^9, 
   3.878034686265308*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"03dbd778-2082-478b-9772-15886a7d775f"],

Cell["\<\
Exceptional Algebras without applying outer automorphisms of the child\
\>", "Text",
 CellChangeTimes->{{3.869929032098871*^9, 3.869929036858287*^9}, {
  3.87114508084338*^9, 
  3.871145095108119*^9}},ExpressionUUID->"136c5de0-ebcf-449c-8290-\
e797fc365faf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingE6Old", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"E6", ",", 
      RowBox[{"{", "D5", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
         "}"}]}], "}"}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingE7Old", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"E7", ",", 
      RowBox[{"{", "E6", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
         "}"}]}], "}"}]}], "}"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.871145105492118*^9, 3.871145108282278*^9}},
 CellLabel->
  "In[753]:=",ExpressionUUID->"785a3806-cbce-440c-9add-570b97cb296b"],

Cell["\<\
Exceptional Algebras after applying outer automorphisms of the child\
\>", "Text",
 CellChangeTimes->{{3.871145157382968*^9, 
  3.871145161777446*^9}},ExpressionUUID->"6472490c-6d71-4451-ae20-\
90f5e5e9f9f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$NonSSEmbeddingE6\>\"", ",", 
     "\"\<Flocci$NonSSEmbeddingE7\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE6", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE7", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingE6", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE6", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(E\), \(6\)]\) with one representative projection matrix \
in the format {{\!\(\*SubscriptBox[\(E\), \(6\)]\),{child1,...},projection \
Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE6", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(E\), \(6\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$NonSSEmbeddingE7", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE7", "::", "output"}], "=", 
   "\"\<List of non semi-simple regular embeddings (without U(1)) into \
\!\(\*SubscriptBox[\(E\), \(7\)]\) with one representative projection matrix \
in the format {{\!\(\*SubscriptBox[\(E\), \(7\)]\),{child1,...},projection \
Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$NonSSEmbeddingE7", "::", "description"}], "=", 
   "\"\<Returns all non semi-simple regular embeddings (without U(1)) into \!\
\(\*SubscriptBox[\(E\), \(7\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingE6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "D5", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "D5", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonSSEmbeddingE7", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E7", ",", 
        RowBox[{"{", "E6", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
           "}"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "1"}], ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869924053926413*^9, 3.869924095514027*^9}, {
  3.869924135597875*^9, 3.869924171620949*^9}, {3.869924228349111*^9, 
  3.869924230649681*^9}, {3.8711451167551117`*^9, 3.871145147615316*^9}, {
  3.875178312909857*^9, 3.875178323124834*^9}, {3.875340818295542*^9, 
  3.875340825338179*^9}, {3.8768202262621803`*^9, 3.876820317947132*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"a7db0745-24c5-4436-9df6-42bcef38db8c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Semi-Simple regular embeddings", "Subsection",
 CellChangeTimes->{{3.869924476722097*^9, 
  3.869924482888137*^9}},ExpressionUUID->"70156406-7879-4110-8daa-\
ead624b8d472"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["B", "n"], 
  TraditionalForm]],ExpressionUUID->"dc9078ec-0c5d-41c8-9dc4-4eaa26645762"]], \
"Text",
 CellChangeTimes->{{3.8699292524321117`*^9, 
  3.869929253502747*^9}},ExpressionUUID->"0b615199-9a60-480b-abf8-\
6783c9748055"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SSEmbeddingBn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingBn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingBn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent B algebra as an integer, e.g. 4 for \
B4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingBn", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(B\), \
\(rank\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(B\), \(rank\)]\),{\!\(\*SubscriptBox[\(child\), \(1\)]\
\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingBn", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(B\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingBn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<B\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rank", "<=", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"B3", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "A1", ",", "A1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"B3", ",", 
            RowBox[{"{", "A3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"B4", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "A1", ",", "C2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"B4", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "A3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"B4", ",", 
            RowBox[{"{", "D4", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"B5", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "A1", ",", "B3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}],
              "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"B5", ",", 
            RowBox[{"{", 
             RowBox[{"A3", ",", "C2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}],
              "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"B5", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "D4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
              "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"B5", ",", 
            RowBox[{"{", "D5", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}],
        ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A1", ",", "A1", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<B\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "2"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"{", "1", "}"}], ",", "rank"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}], ",", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "2"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "2"}], ",", "rank"}], "}"}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A3", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<B\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "3"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "rank"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}], ",", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "3"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "3"}], ",", "rank"}], "}"}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"origAlg", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<B\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}]}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<D\>\"", "<>", 
                  RowBox[{"ToString", "[", "k", "]"}]}], "]"}]}], "}"}], ",", 
              
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "k"}], ",", "rank"}], "}"}]}], "]"}],
                 ",", 
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"k", "-", "1"}], ",", "rank"}], "}"}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], ",", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}]}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "4", ",", 
              RowBox[{"rank", "-", "3"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"C2", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "2"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"Reverse", "[", 
                  RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "rank"}], "}"}]}], "]"}], ",", 
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"Reverse", "[", 
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"rank", "-", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "3"}], ",", "rank"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}]}], "]"}]}], 
            "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A1", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"{", "1", "}"}], ",", "rank"}], "]"}], "}"}], ",", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "[", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"rank", "-", "3"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"rank", "-", "3"}], ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "3"}], ",", "rank"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"{", "1", "}"}], ",", "rank"}], "]"}], "}"}]}], 
              "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"\"\<D\>\"", "<>", 
                RowBox[{"ToString", "[", "rank", "]"}]}], "]"}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"Reverse", "[", 
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"rank", "-", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "2"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}]}], "]"}], "}"}]}], "]"}]}], 
            "}"}], "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/eTnuqe+V9845h0+CqYZfne7+QHpD8Zn/EE0s5F0
CIjetONlBJh+engZiP6e9mQtiH7udnUTiNbrk9oGovN+3zwFomu2eZ8B0b/u
8l0F0dN8jt8B0ZWnjz4A0anLS56A6Jy27D8g+lpg/V8QnblavNYfSPfmyfSA
6LT404dBtFBWwwUQvW5isU4AkK6dnGAMoi94rg8C0e0X74HpeZZXSsC069NK
EJ2y9/AqEL2gPGUjiNaSdNoGotetX7EdRFuUXX4Iov9pFbwA0SW3faUCgbQR
/0QZEH3IMe11wP03jm0azm9A9LT0s84LgPQVBlkXEH1MPeZp0aM3jhl7f74D
0QCkqsG1
  "],
 CellLabel->
  "In[427]:=",ExpressionUUID->"0da0b825-4da1-4cda-a812-280ff8e949f6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["C", "n"], 
  TraditionalForm]],ExpressionUUID->"f493b71f-1237-4d6f-b64a-9b56cf978e33"]], \
"Text",
 CellChangeTimes->{{3.869935989234436*^9, 
  3.8699359919129667`*^9}},ExpressionUUID->"090de3d4-107c-4903-83cf-\
85ebea8217ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SSEmbeddingCn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingCn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingCn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent C algebra as an integer, e.g. 4 for \
C4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingCn", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(C\), \
\(rank\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(C\), \(rank\)]\),{\!\(\*SubscriptBox[\(child\), \(1\)]\
\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingCn", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(C\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingCn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<C\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rank", "<", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"C2", ",", 
           RowBox[{"{", 
            RowBox[{"A1", ",", "A1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}], "}"}], "]"}], 
       ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A1", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<C\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"1", ",", " ", "rank"}], "]"}], "}"}], ",", " ", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "1"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "1"}], ",", "rank"}], "}"}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"origAlg", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<C\>\"", "<>", 
                  RowBox[{"ToString", "[", "k", "]"}]}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<C\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"k", "-", "1"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"k", "-", "1"}], ",", "rank"}], "}"}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], ",", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"rank", "-", "k", "+", "1"}]}], "]"}]}], "]"}], 
                 "}"}], ",", 
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "k"}], ",", "rank"}], "}"}]}], 
                 "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "2", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{"rank", "/", "2"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8699359972696238`*^9, 3.8699359976428823`*^9}, {
   3.869936179806192*^9, 3.869936209495481*^9}, 3.86993624081695*^9, {
   3.86993643818829*^9, 3.869936558741787*^9}, {3.869936625150036*^9, 
   3.869936641068502*^9}, {3.8699366748892508`*^9, 3.869936700794981*^9}, 
   3.869937045548774*^9, 3.869937087565095*^9, {3.8699371218070087`*^9, 
   3.8699371493239727`*^9}, {3.87517834196495*^9, 3.875178345071991*^9}, {
   3.875340836925748*^9, 3.875340839553144*^9}, {3.8768208724065647`*^9, 
   3.876820899045665*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"04017701-c929-4dfa-8df9-ce981878fdeb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["D", "n"], 
  TraditionalForm]],ExpressionUUID->"0794ff56-ab01-4213-b594-3d84838cce65"]], \
"Text",
 CellChangeTimes->{{3.87000387464349*^9, 
  3.870003876813945*^9}},ExpressionUUID->"ba1dd3f5-406a-4967-b686-\
ff34d24f34a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SSEmbeddingDn\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingDn", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingDn", "::", "input"}], "=", 
    "\"\<rank: rank of the parent D algebra as an integer, e.g. 4 for \
D4\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingDn", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(D\), \
\(rank\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(D\), \(rank\)]\),{\!\(\*SubscriptBox[\(child\), \(1\)]\
\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingDn", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(D\), \(rank\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingDn", "[", "rank_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"origAlg", ",", "resultList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"origAlg", "=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<D\>\"", "<>", 
        RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rank", "<=", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"D4", ",", 
           RowBox[{"{", 
            RowBox[{"A1", ",", "A1", ",", "A1", ",", "A1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
          "}"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"D5", ",", 
           RowBox[{"{", 
            RowBox[{"A1", ",", "A1", ",", "A3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
            "}"}]}], "}"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rank", "==", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"D6", ",", 
            RowBox[{"{", 
             RowBox[{"A1", ",", "A1", ",", "D4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
               "}"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"D6", ",", 
            RowBox[{"{", 
             RowBox[{"A3", ",", "A3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
               "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A1", ",", "A1", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "2"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"{", "1", "}"}], ",", "rank"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "3"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "}"}], ",", " ", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "2"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "2"}], ",", "rank"}], "}"}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"origAlg", ",", 
             RowBox[{"{", 
              RowBox[{"A3", ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"rank", "-", "3"}], "]"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "rank"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "3"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "}"}], ",", " ", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"rank", "-", "3"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"rank", "-", "3"}], ",", "rank"}], "}"}]}], 
                "]"}]}], "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"origAlg", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<D\>\"", "<>", 
                  RowBox[{"ToString", "[", "k", "]"}]}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<D\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"k", "-", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"k", "-", "2"}], ",", 
                    RowBox[{"rank", "-", "1"}]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"k", "-", "2"}], ",", "rank"}], "}"}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], ",", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"rank", "-", "3"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "rank"}], "]"}], "}"}], ",", 
                " ", 
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", 
                   RowBox[{"rank", "-", "k"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"rank", "-", "k"}], ",", "rank"}], "}"}]}], 
                 "]"}]}], "]"}]}], " ", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "4", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{"rank", "/", "2"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8700038891537848`*^9, 3.870003892808743*^9}, 
   3.870004084161058*^9, {3.870004141892249*^9, 3.870004144951951*^9}, {
   3.870004196032371*^9, 3.87000422218143*^9}, {3.870162712668786*^9, 
   3.870162872062997*^9}, {3.870162914845351*^9, 3.87016294416153*^9}, 
   3.87016317453522*^9, {3.870163234807733*^9, 3.8701632542690372`*^9}, {
   3.870163383488476*^9, 3.870163403725925*^9}, {3.8701634468945713`*^9, 
   3.870163476118866*^9}, 3.870163827700865*^9, {3.875178348746517*^9, 
   3.8751783510309*^9}, {3.875340844302354*^9, 3.8753408471929493`*^9}, {
   3.8768209088889236`*^9, 3.876820935873128*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"feeee8f4-7685-4c92-b0e5-2e98143949a5"],

Cell["Exceptional Algebras before applying outer automorphisms", "Text",
 CellChangeTimes->{{3.8699290400750217`*^9, 3.869929043585785*^9}, {
  3.871144874985203*^9, 
  3.871144884750126*^9}},ExpressionUUID->"d8915862-f593-4707-a137-\
5a17e3a1972a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE6Old", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E6", ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E6", ",", 
       RowBox[{"{", 
        RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE7Old", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E7", ",", 
       RowBox[{"{", "A7", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E7", ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "D6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E7", ",", 
       RowBox[{"{", 
        RowBox[{"A2", ",", "A5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE8Old", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E8", ",", 
       RowBox[{"{", 
        RowBox[{"A4", ",", "A4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E8", ",", 
       RowBox[{"{", "D8", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E8", ",", 
       RowBox[{"{", "A8", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E8", ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "E7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E8", ",", 
       RowBox[{"{", 
        RowBox[{"A2", ",", "E6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingF4Old", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"F4", ",", 
       RowBox[{"{", "B4", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"F4", ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "C3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"F4", ",", 
       RowBox[{"{", 
        RowBox[{"A2", ",", "A2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingG2Old", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G2", ",", 
       RowBox[{"{", "A2", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"G2", ",", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.871144901224305*^9, 3.871144914666086*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"40829a63-a8d7-4ec6-9b93-68247f0faa7a"],

Cell["Exceptional Algebras after applying outer automorphisms", "Text",
 CellChangeTimes->{{3.871144891292898*^9, 
  3.8711448983856287`*^9}},ExpressionUUID->"04788746-15ee-4081-8d5e-\
ae5181f4f3a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$SSEmbeddingE6\>\"", ",", "\"\<Flocci$SSEmbeddingE7\>\"", ",", 
     "\"\<Flocci$SSEmbeddingE8\>\"", ",", "\"\<Flocci$SSEmbeddingG2\>\"", 
     ",", "\"\<Flocci$SSEmbeddingF4\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE6", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE7", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE8", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingG2", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingF4", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingE6", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE6", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(E\), \
\(6\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(E\), \(6\)]\),{\!\(\*SubscriptBox[\(child\), \
\(1\)]\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE6", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(E\), \(6\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingE7", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE7", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(E\), \
\(7\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(E\), \(7\)]\),{\!\(\*SubscriptBox[\(child\), \
\(1\)]\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE7", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(E\), \(7\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingE8", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE8", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(E\), \
\(8\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(E\), \(8\)]\),{\!\(\*SubscriptBox[\(child\), \
\(1\)]\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingE8", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(E\), \(8\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingG2", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingG2", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(G\), \
\(2\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(G\), \(2\)]\),{\!\(\*SubscriptBox[\(child\), \
\(1\)]\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingG2", "::", "description"}], "=", 
   "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(G\), \(2\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingF4", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SSEmbeddingF4", "::", "output"}], "=", 
   "\"\<List of semi-simple regular embeddings into \!\(\*SubscriptBox[\(F\), \
\(4\)]\) with one representative projection matrix in the format \
{{\!\(\*SubscriptBox[\(F\), \(4\)]\),{\!\(\*SubscriptBox[\(child\), \
\(1\)]\),...},projection Matrix},...}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SSEmbeddingF4", "::", "description"}], "=", 
    "\"\<Returns all semi-simple regular embeddings into \
\!\(\*SubscriptBox[\(F\), \(4\)]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A7", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "2"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "D6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "D6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingE8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A4", ",", "A4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1", 
           ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A4", ",", "A4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1", 
           ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "D8", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "D8", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
           ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A8", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "E7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "2", ",", "4", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", 
           ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "E6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "E6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "4"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "0", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingF4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", "B4", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "C3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "3"}], ",", 
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SSEmbeddingG2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G2", ",", 
         RowBox[{"{", "A2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G2", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G2", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8711429998721*^9, 3.871143076161213*^9}, {
  3.87114314686642*^9, 3.871143283256941*^9}, {3.871143800247486*^9, 
  3.871144000894927*^9}, {3.871144133269136*^9, 3.871144848260433*^9}, {
  3.871572313697619*^9, 3.8715723162670307`*^9}, {3.8715723865016403`*^9, 
  3.871572472551407*^9}, {3.871572545563732*^9, 3.871572570628715*^9}, {
  3.871572678173316*^9, 3.871572759337796*^9}, {3.871572915869669*^9, 
  3.871572931881383*^9}, {3.871572966374083*^9, 3.871572994611575*^9}, {
  3.875178358780983*^9, 3.875178392570003*^9}, {3.875340852544937*^9, 
  3.8753408706425533`*^9}, {3.8768209483082314`*^9, 3.87682108566574*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"beea8365-741f-4440-b38f-7156c9bc58c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Special Embeddings", "Subsection",
 CellChangeTimes->{{3.870797293664074*^9, 
  3.870797296577847*^9}},ExpressionUUID->"36ac5fa2-1c37-4892-be48-\
1390a4ec56e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$FindProjMatrix\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindProjMatrix", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FindProjMatrix", "::", "input"}], "=", 
    "\"\<parent: parent algebra, e.g. A7. child: child algebra in the format \
{alg}, e.g. {D4} or {A1,A3}. repChild: representation of child algebra that \
embedds into parent in the format {rep1,rep2,...}, e.g. {{1,0,0,0}} for D4 or \
{{1},{1,0,0}} for {A1,A3}. repParent:(optional) representation into which the \
embedding occurs in the format {rep}. The default is the fundamental \
representation, i.e. {{1,0,...}}.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindProjMatrix", "::", "output"}], "=", 
   "\"\<projection matrix.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindProjMatrix", "::", "description"}], "=", 
   "\"\<Returns one representative projection matrix for the special \
embedding child->parent through given representations.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$FindProjMatrix", "[", 
   RowBox[{"parent_", ",", "child_", ",", "repChild_", ",", 
    RowBox[{"repParent_", ":", "False"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rkParent", ",", "rkChild", ",", "projMatrixAnsatz", ",", "p", ",", 
      "projSol", ",", "wsParent", ",", "wsChild", ",", "repTarget"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Computes", " ", "the", " ", "projection", " ", "matrix", " ", "for", 
       " ", "the", " ", "embedding", " ", "child"}], " ", "->", " ", 
      RowBox[{
       RowBox[{
       "parent", " ", "via", " ", "the", " ", "representations", " ", 
        "repChild"}], " ", "->", " ", 
       RowBox[{
        RowBox[{"repParent", ".", " ", "If"}], " ", "no", " ", "repParent", 
        " ", "is", " ", "specified", " ", "it", " ", "is", " ", "assumed", 
        " ", "to", " ", "be", " ", "the", " ", "fundamental", " ", 
        RowBox[{"representation", ".", " ", "The"}], " ", "output", " ", "is",
         " ", "a", " ", "projection", " ", "matrix", " ", "or", " ", "False", 
        " ", "if", " ", "finding", " ", "the", " ", "projection", " ", 
        "matrix", " ", "was", " ", "unseccessful"}]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rkParent", "=", 
      RowBox[{"Flocci$Rank", "[", "parent", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rkChild", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"Flocci$Rank", "[", "child", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"repParent", "===", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"repTarget", "=", 
        RowBox[{"{", 
         RowBox[{"PadRight", "[", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", "rkParent"}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"repTarget", "=", "repParent"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$Dim", "[", 
         RowBox[{"child", ",", 
          RowBox[{"{", 
           RowBox[{"Flatten", "[", "repChild", "]"}], "}"}]}], "]"}], "!=", 
        RowBox[{"Flocci$Dim", "[", 
         RowBox[{
          RowBox[{"{", "parent", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Flatten", "[", "repTarget", "]"}], "}"}]}], "]"}]}], ",", 
       
       RowBox[{"(*", 
        RowBox[{"Print", "[", "\"\<Irrep Dimensions don't match\>\"", "]"}], 
        "*)"}], 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"wsChild", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$WeightSystem", "[", 
         RowBox[{"child", ",", "repChild"}], "]"}], "//", "Timing"}], "//", 
       RowBox[{"Flocci$Timing", "[", "\"\<FindProj: wsChild\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"wsParent", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$WeightSystem", "[", 
         RowBox[{
          RowBox[{"{", "parent", "}"}], ",", "repTarget"}], "]"}], "//", 
        "Timing"}], "//", 
       RowBox[{"Flocci$Timing", "[", "\"\<FindProj: wsParent\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"projMatrixAnsatz", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"rkChild", ",", "rkParent"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"projSol", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"wsParent", ".", 
           RowBox[{"Transpose", "[", "projMatrixAnsatz", "]"}]}], "==", 
          "wsChild"}], "]"}], "//", "Timing"}], "//", 
       RowBox[{
       "Flocci$Timing", "[", "\"\<FindProj: solveProjMatrix\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "projSol", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"projMatrixAnsatz", "/.", 
         RowBox[{"projSol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "False", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8704379032537613`*^9, 3.870437903468363*^9}, {
  3.870438144874243*^9, 3.870438156448391*^9}, {3.870438223215314*^9, 
  3.87043822737886*^9}, {3.870438342991107*^9, 3.87043834318134*^9}, {
  3.8704392620307627`*^9, 3.870439262378942*^9}, {3.870884060474114*^9, 
  3.870884076191492*^9}, {3.8708842507828703`*^9, 3.870884259298024*^9}, {
  3.8708845102546864`*^9, 3.8708845273204737`*^9}, {3.871139598485594*^9, 
  3.8711396022629642`*^9}, {3.871139671449862*^9, 3.871139678874913*^9}, {
  3.873966448328438*^9, 3.873966495900996*^9}, {3.874718731041304*^9, 
  3.874718745757277*^9}, {3.875178398681797*^9, 3.875178416753186*^9}, {
  3.875340876937977*^9, 3.8753408794158497`*^9}, {3.8762305480270844`*^9, 
  3.876230552261434*^9}, {3.8768211304046917`*^9, 3.8768212391971416`*^9}, {
  3.876821732197995*^9, 3.8768218579531097`*^9}, {3.8768218925912933`*^9, 
  3.876822050760927*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"22a46675-ea49-4990-8a31-3fda4ab70edd"],

Cell[TextData[{
 "Embeddings and also partially the projection matrices are taken from \
Lorente and Gruber.\nNote that the embedding ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", "2"], "+", 
     SubscriptBox["C", "2"]}], "->", 
    SubscriptBox["D", "5"]}], TraditionalForm]],ExpressionUUID->
  "c49013b8-067c-4091-8824-c8a519148784"],
 " is not included in the general rule for semi-simple S-embeddings but in \
their Table XII.\nSome projection matrices are taken from LieArt."
}], "Text",
 CellChangeTimes->{{3.870970016930595*^9, 
  3.870970133673212*^9}},ExpressionUUID->"ff214cae-c3ce-4384-ad54-\
052f5ec37e1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$SpecialEmbeddings\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddings", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddings", "::", "input"}], "=", 
    "\"\<userWS: weightsystem in format {weight1,weight2,...}.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddings", "::", "output"}], "=", 
   "\"\<list of special embeddings in the format \
{{parent,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddings", "::", "description"}], "=", 
   "\"\<Returns all maximal special embeddings into parent algebras whose \
lowest dimensional non-anomalous representation has dimension \[LessEqual] \
dim(userWS). Embeddings are only added to the list if they satisfy the \
constraints of Flocci$checkAlgebraEmbedding.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddings", "[", 
   RowBox[{"userWS_", ",", 
    RowBox[{"check_", ":", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rank", ",", "irreps", ",", "wsParent", ",", "wsChild", ",", "algChild", 
      ",", "projMatrixAnsatz", ",", "projMatrix", ",", "algParent", ",", 
      "testVec", ",", "projSol", ",", "algList", ",", "alg", ",", "childRep", 
      ",", "dim", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Finds", " ", "all", " ", "maximal", " ", "special", " ", "embeddings", 
       " ", "with", " ", "irreducible", " ", "representation"}], " ", "<=", 
      " ", 
      RowBox[{"dim", "\[IndentingNewLine]", "  ", 
       RowBox[{"Input", ":", "    ", 
        RowBox[{"-", " ", "dim"}], ":", " ", 
        RowBox[{
        "maximal", " ", "dimension", " ", "of", " ", "irreducible", " ", 
         "representation", " ", 
         RowBox[{"(", "integer", ")"}], " ", "\[IndentingNewLine]", 
         RowBox[{"Output", ":", "   ", 
          RowBox[{
           RowBox[{"-", " ", "list"}], " ", "of", " ", "embeddings", " ", 
           "of", " ", "the", " ", "form", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"parentAlgebra", ",", 
               RowBox[{"{", 
                RowBox[{"child1", ",", "child2", ",", "..."}], "}"}], ",", 
               RowBox[{"Projection", " ", "Matrix"}]}], "}"}], ",", "..."}], 
            "}"}]}]}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Special", " ", "embeddings", " ", "map", " ", "the", " ", "fundamental",
       " ", "representation", " ", "of", " ", "parent", " ", "algebra", " ", 
      "to", " ", "N", " ", "dim", " ", "irrep", " ", "of", " ", "child"}], 
     " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "list", " ", "of", " ", "algebra", " ", "types", " ", "and", " ", 
      "minimal", " ", "ranks"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dim", "=", 
      RowBox[{"Length", "[", "userWS", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"algList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<A\>\"", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<B\>\"", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<C\>\"", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<D\>\"", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<F\>\"", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<G\>\"", ",", "2"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "go", " ", "through", " ", "all", " ", "algebras", " ", "in", " ", 
       "algList"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{
       RowBox[{"Reap", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"**", "**"}], "*", "  ", "maximal", " ", "simple", " ", 
          "embeddings"}], " ", "******)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Doing simple S-embeddings\>\"", "]"}], 
          ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "initialize", " ", "current", " ", "algebra", " ", "and", " ", 
            "starting", " ", "rank"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"alg", "=", 
             RowBox[{"algList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rank", "=", 
             RowBox[{"algList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "Go", " ", "through", " ", "alg", " ", "until", " ", "there", 
               " ", "is", " ", "no", " ", "irrep", " ", "with", " ", 
               "dimension"}], " ", "<=", " ", "dim"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{"True", ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"define", " ", "child", " ", "algebra"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"algChild", "=", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"alg", "<>", 
                  RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<Current Child algebra \>\"", ",", "algChild"}],
                   "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "Get", " ", "all", " ", "irreps", " ", "of", " ", "child", 
                  " ", "algebra", " ", "with", " ", "dimension"}], " ", "<=", 
                 " ", "dim"}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"irreps", "=", 
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
                   RowBox[{"algChild", ",", "dim"}], "]"}], ",", "1"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "if", " ", "there", " ", "is", " ", "no", " ", "irrep", " ", 
                 "exit", " ", "the", " ", "loop"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "irreps", "]"}], "==", "0"}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "define", " ", "testvector", " ", "for", " ", "bilinear", " ",
                  "form", " ", "for", " ", "each", " ", "algebra"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"k", "*", 
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "k", "+", "1"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeBQ", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rank", "+", "k"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "k", "+", "1"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "rank", ",", "2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "rank", 
                    RowBox[{"(", 
                    RowBox[{"rank", "+", "1"}], ")"}]}], "}"}]}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeCQ", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "k", "+", "1"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rank", "+", "k", "+", "1"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "rank", ",", "2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"rank", "^", "2"}], "*", 
                    RowBox[{"1", "/", "2"}], "rank", 
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "1"}], ")"}]}], "}"}]}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "k", "+", "1"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rank", "+", "k", "-", "2"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "rank", ",", "3", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "rank", 
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "1"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "rank", 
                    RowBox[{"(", 
                    RowBox[{"rank", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeG2Q", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"{", 
                   RowBox[{"10", ",", "6"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeF4Q", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"{", 
                   RowBox[{"22", ",", "42", ",", "30", ",", "16"}], "}"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeE6Q", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"{", 
                   RowBox[{
                   "16", ",", "30", ",", "42", ",", "30", ",", "16", ",", 
                    "22"}], "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"{", 
                   RowBox[{
                   "34", ",", "66", ",", "96", ",", "75", ",", "52", ",", 
                    "27", ",", "49"}], "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$TypeE8Q", "[", "algChild", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"testVec", "=", 
                  RowBox[{"{", 
                   RowBox[{
                   "92", ",", "182", ",", "270", ",", "220", ",", "168", ",", 
                    "114", ",", "58", ",", "270"}], "}"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "Go", " ", "through", " ", "all", " ", "irreps", " ", "and", 
                 " ", "find", " ", "maximal", " ", "embeddings"}], " ", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
               "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "first", " ", "check", " ", "special", " ", "cases"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"An", " ", "<", " ", 
                  RowBox[{"A_", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], 
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"n", "+", "2"}], ")"}]}], "}"}], " ", "for", " ", 
                   "n"}], " ", ">", " ", "3"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", ">", "3"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "1", ",", 
                    RowBox[{"Repeated", "[", "0", "]"}]}], "}"}]}], "]"}]}], 
                    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 1\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"An", " ", "<", " ", 
                    RowBox[{"A_", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "n", 
                    RowBox[{"(", 
                    RowBox[{"n", "+", "3"}], ")"}]}], "}"}], " ", "for", " ", 
                    "n"}], " ", ">", " ", "1"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", ">", "1"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"RepeatedNull", "[", "0", "]"}]}], "}"}]}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 2\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"B_", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1"}], "}"}]}], " ", "<", " ", 
                    RowBox[{"D_", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2"}], "}"}], " ", "for", " ", 
                    "n"}], " ", ">", " ", "1"}], ",", " ", 
                    RowBox[{"k", ">=", "1"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeBQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", ">", "1"}], "&&", 
                    RowBox[{"OddQ", "[", "rank", "]"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Repeated", "[", "0", "]"}], ",", "x_"}], "}"}], "/;", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "x", "]"}], "&&", 
                    RowBox[{"x", ">", "0"}]}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 3\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"G_", 
                    RowBox[{"{", "2", "}"}]}], " ", "<", " ", 
                    RowBox[{"B_", "3", " ", "for", " ", "n"}], " ", ">", " ", 
                    "1"}], ",", " ", 
                    RowBox[{"k", ">=", "1"}], ",", " ", 
                    RowBox[{"note", ":", " ", 
                    RowBox[{
                    "LG", " ", "hw", " ", "assignment", " ", "for", " ", "G2",
                     " ", "is", " ", "swapped"}]}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeG2Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "0"}], "}"}], "/;", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "x", "]"}], "&&", 
                    RowBox[{"x", ">", "1"}]}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 4\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"A1", " ", "<", " ", 
                    RowBox[{"G2", " ", "via", " ", 
                    RowBox[{"{", "6", "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", "6", "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 5\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"A5", " ", "<", " ", 
                    RowBox[{"C10", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "..."}], 
                    "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "5"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 6\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"B4", " ", "<", " ", 
                    RowBox[{"D8", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], " ", 
                    "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "0", ",", "...", ",", "0", 
                    ",", "1", ",", "0"}], "}"}]}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeBQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "4"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
                    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 7\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"C3", " ", "<", " ", 
                    RowBox[{"C7", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "0"}], "}"}], " ", "into", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "..."}], 
                    "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeCQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "3"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "0"}], "}"}]}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 8\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"C3", " ", "<", " ", 
                    RowBox[{"C7", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "0"}], "}"}], " ", "into", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeCQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "3"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "0"}], "}"}]}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 9\>\"", "]"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"D5", " ", "<", " ", 
                    RowBox[{"A15", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "5"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 10\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"D6", " ", "<", " ", 
                    RowBox[{"C16", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "..."}], 
                    "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "6"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 11\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"D6", " ", "<", " ", 
                    RowBox[{"C16", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"rank", "==", "6"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 12\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E6", " ", "<", " ", 
                    RowBox[{"A26", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE6Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 13\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E6", " ", "<", " ", 
                    RowBox[{"A26", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}], 
                    "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE6Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}], 
                    "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 14\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E7", " ", "<", " ", 
                    RowBox[{"C28", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
                    ",", "0"}], "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "..."}], 
                    "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
                    ",", "0"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 15\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E7", " ", "<", " ", 
                    RowBox[{"C28", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
                    ",", "0"}], "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "..."}],
                     "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
                    ",", "0"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 16\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E7", " ", "<", " ", 
                    RowBox[{"C28", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
                    ",", "0"}], "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
                    ",", "..."}], "}"}]}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
                    ",", "0"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 17\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"E7", " ", "<", " ", 
                    RowBox[{"C28", " ", "via", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "1"}], "}"}], " ", "into", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0", ",", "0", ",", "...", ",", "0", ",", "1", 
                    ",", "0"}], "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", 
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "1"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<Exception 18\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "does", " ", "algebra", " ", "have", " ", "a", " ", 
                    "bilinear", " ", 
                    RowBox[{"form", " ", "?"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], "||", 
                    RowBox[{"Flocci$TypeBQ", "[", "algChild", "]"}], "||", 
                    RowBox[{"Flocci$TypeCQ", "[", "algChild", "]"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"EvenQ", "[", "rank", "]"}]}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flocci$TypeDQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"EvenQ", "[", "rank", "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "==", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}]}], "]"}], "]"}], "==", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}]}], ")"}], "||", 
                    RowBox[{"Flocci$TypeG2Q", "[", "algChild", "]"}], "||", 
                    RowBox[{"Flocci$TypeF4Q", "[", "algChild", "]"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flocci$TypeE6Q", "[", "algChild", "]"}], "&&", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}]}], "]"}], "]"}], "==", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}]}], ")"}], "||", 
                    RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "||", 
                    RowBox[{"Flocci$TypeE8Q", "[", "algChild", "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<has bilinear form\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Check", " ", "if", " ", "bilinear", " ", "form", " ", 
                    "is", " ", "symmetric", " ", "or", " ", "antisymmetric"}],
                     " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EvenQ", "[", 
                    RowBox[{"testVec", ".", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"symmetric", " ", "bilinear", " ", "form"}], " ", 
                    "=", 
                    RowBox[{
                    RowBox[{">", " ", 
                    RowBox[{
                    "contained", " ", "in", " ", "Bn", " ", "if", " ", 
                    "N"}]}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "n"}], "+", 
                    RowBox[{
                    "1", " ", "and", " ", "Dn", " ", "if", " ", "N"}]}], "=", 
                    
                    RowBox[{"2", "n"}]}]}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<symmetric\>\"", "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EvenQ", "[", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"embedding", " ", "into", " ", "Dn"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"algParent", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], "]"}]}], 
                    "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"embedding", " ", "into", " ", "Bn"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"algParent", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}], "/", 
                    "2"}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"antisymmetric", " ", "bilinear", " ", "form"}], 
                    " ", "=", 
                    RowBox[{
                    RowBox[{">", " ", 
                    RowBox[{
                    "contained", " ", "in", " ", "Cn", " ", "with", " ", 
                    "N"}]}], "=", 
                    RowBox[{"2", "n"}]}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<antisymmetric\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"algParent", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<C\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], "]"}]}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"no", " ", "bilinear", " ", "form"}], " ", "=", 
                    RowBox[{
                    RowBox[{">", " ", 
                    RowBox[{
                    "contained", " ", "in", " ", "An", " ", "with", " ", 
                    "N"}]}], "=", 
                    RowBox[{"n", "+", "1"}]}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<has no bilinear form\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"algParent", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<A\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}]}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "take", " ", "into", " ", "account", " ", "isomorphisms"}],
                    " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"algParent", "=", 
                   RowBox[{"algParent", "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"B1", "->", "A1"}], ",", 
                    RowBox[{"C1", "->", "A1"}], ",", 
                    RowBox[{"D1", "->", "A1"}], ",", 
                    RowBox[{"B2", "->", "C2"}], ",", 
                    RowBox[{"D3", "->", "A3"}]}], "}"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    "if", " ", "embedding", " ", "is", " ", "into", " ", 
                    "same", " ", "algebra", " ", "the", " ", "maximal", " ", 
                    "embedding", " ", "is", " ", "into", " ", "An", " ", 
                    "with", " ", "N"}], "=", 
                    RowBox[{"n", "+", 
                    RowBox[{
                    "1", " ", "or", " ", "nothing", " ", "for", " ", 
                    "An"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"algParent", "===", "algChild"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algChild", "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"rank", "==", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ")"}]}], 
                    ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<A algebra embedding into itself\>\"", 
                    "]"}], ";"}], "*)"}], 
                    RowBox[{"Continue", "[", "]"}], ",", 
                    RowBox[{"algParent", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<A\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}]}], 
                    "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<Embedding into \>\"", "<>", 
                    RowBox[{"ToString", "[", "algParent", "]"}]}], "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "if", " ", "algParent", " ", "is", " ", "an", " ", "A"}], 
                    "-", 
                    RowBox[{
                    "type", " ", "algebra", " ", "we", " ", "do", " ", "not", 
                    " ", "have", " ", "to", " ", "consider", " ", "rank"}]}], 
                    " ", ">", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "2"}], " ", "due", 
                    " ", "to", " ", "anomaly", " ", "cancelation"}]}], " ", 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$TypeAQ", "[", "algParent", "]"}], "&&", 
                    RowBox[{"rank", ">", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"dim", "-", "1"}], ")"}], "/", "2"}]}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "if", " ", "parent", " ", "algebra", " ", "does", " ", 
                    "not", " ", "satisfy", " ", "embedding", " ", "check", 
                    " ", "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"Or", "[", 
                    RowBox[{
                    RowBox[{"!", "check"}], ",", 
                    RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "Find", " ", "the", " ", "projection", " ", "matrix"}], 
                   " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"projMatrix", "=", 
                   RowBox[{"Flocci$FindProjMatrix", "[", 
                    RowBox[{"algParent", ",", 
                    RowBox[{"{", "algChild", "}"}], ",", 
                    RowBox[{"ir", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"projMatrix", "===", "False"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Could not find the projection matrix for \>\"", " ", 
                    "<>", 
                    RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                    "\"\<->\>\"", "<>", 
                    RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                    "\"\< with the representation \>\"", "<>", 
                    RowBox[{"ToString", "[", "ir", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"add", " ", "result", " ", "to", " ", "list"}], 
                    " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                    ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", 
                    RowBox[{"{", "algChild", "}"}], ",", "projMatrix"}], 
                    "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"ir", ",", "irreps"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "increase", " ", "the", " ", "rank", " ", "by", " ", "one", 
                 " ", "unit", " ", "or", " ", "directly", " ", "move", " ", 
                 "on", " ", "to", " ", "next", " ", "algebra", " ", "type", 
                 " ", "if", " ", "exceptionial"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flocci$TypeG2Q", "[", "algChild", "]"}], "||", 
                  RowBox[{"Flocci$TypeE6Q", "[", "algChild", "]"}], "||", 
                  RowBox[{"Flocci$TypeE7Q", "[", "algChild", "]"}], "||", 
                  RowBox[{"Flocci$TypeE8Q", "[", "algChild", "]"}], "||", 
                  RowBox[{"Flocci$TypeF4Q", "[", "algChild", "]"}]}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"rank", "+=", "1"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "algList", "]"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"**", "**"}], "*", "  ", "maximal", " ", "semi"}], "-", 
           RowBox[{"simple", " ", "embeddings"}]}], " ", "******)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<Finding semi-simple S-embeddings\>\"", "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
           "Print", "[", 
            "\"\<Type I: \!\(\*SubscriptBox[\(A\), \
\(n\)]\)+\!\(\*SubscriptBox[\(A\), \(m\)]\) \[Subset] \
\!\(\*SubscriptBox[\(A\), \(\((n + 1)\)\((m + 1)\) - 1\)]\) with 1<= n <= m\>\
\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Consider", " ", "two", " ", "cases", " ", "for", " ", "each", " ",
             "algebra", " ", 
            RowBox[{"pair", ":", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "..."}], "}"}], "+", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "..."}], "}"}], " ", "and", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0", ",", "..."}], "}"}]}], "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "...", ",", "0", ",", "1"}], "}"}]}]}]}], 
           ",", " ", 
           RowBox[{"both", " ", "embedded", " ", "into", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "..."}], "}"}]}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<A\>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<A\>\"", "<>", 
                   RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<A\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "1"}], ")"}]}], "-", "1"}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                   RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dim", "/", 
                   RowBox[{"(", 
                    RowBox[{"m", "+", "1"}], ")"}]}], "-", "1"}], ",", "m"}], 
                "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", 
             RowBox[{
              RowBox[{"dim", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type II a: \!\(\*SubscriptBox[\(C\), \
\(n\)]\)+\!\(\*SubscriptBox[\(D\), \(m\)]\) \[Subset] \
\!\(\*SubscriptBox[\(C\), \(2 nm\)]\) with 1<= n, 3<= m\>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Consider", " ", "one", " ", "cases", " ", "for", " ", "each", " ", 
           "algebra", " ", 
           RowBox[{"pair", ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "..."}], "}"}], "+", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "..."}], "}"}], " ", "embedded", 
              " ", "into", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "..."}], "}"}]}]}]}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<C\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"C1", "->", "A1"}], ",", 
                  RowBox[{"D3", "->", "A3"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<C\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"2", "n", "*", "m"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "===", "A3"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"projMatrix", "=", 
                 RowBox[{"Flocci$FindProjMatrix", "[", 
                  RowBox[{"algParent", ",", "algChild", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"projMatrix", "=", 
                 RowBox[{"Flocci$FindProjMatrix", "[", 
                  RowBox[{"algParent", ",", "algChild", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                  "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"dim", "/", 
                RowBox[{"(", 
                 RowBox[{"4", "m"}], ")"}]}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "3", ",", 
             RowBox[{"dim", "/", "4"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type II b i): \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(C\), \(n\)]\) \[Subset] \
\!\(\*SubscriptBox[\(C\), \(3 n\)]\) with 1<= n, 3<= m\>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"algChild", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"A1", ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<C\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}]}], "]"}]}], "}"}], "/.", 
              RowBox[{"{", 
               RowBox[{"C1", "->", "A1"}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"algParent", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<C\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"3", "n"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
              " ", "satisfy", " ", "embedding", " ", "check", " ", 
              "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"projMatrix", "=", 
             RowBox[{"Flocci$FindProjMatrix", "[", 
              RowBox[{"algParent", ",", "algChild", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "n"}], "]"}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"projMatrix", "===", "False"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                "\"\<->\>\"", "<>", 
                RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                "\"\< with the representation \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "2", "}"}], ",", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}]}], "}"}], 
                 "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], ",", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}], 
                   "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"dim", "/", 
              RowBox[{"(", "6", ")"}]}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type II b ii): \!\(\*SubscriptBox[\(B\), \
\(n\)]\)+\!\(\*SubscriptBox[\(C\), \(m\)]\) \[Subset] \
\!\(\*SubscriptBox[\(C\), \(m\((2 n + 1)\)\)]\) with 1<=m, 2<=n\>\"", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<C\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"B2", "->", " ", "C2"}], ",", 
                  RowBox[{"C1", "->", "A1"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<C\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"m", "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1"}], ")"}]}], "]"}]}], "]"}]}],
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "===", "C2"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"projMatrix", "=", 
                 RowBox[{"Flocci$FindProjMatrix", "[", 
                  RowBox[{"algParent", ",", "algChild", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"projMatrix", "=", 
                 RowBox[{"Flocci$FindProjMatrix", "[", 
                  RowBox[{"algParent", ",", "algChild", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                  "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1", ",", 
               RowBox[{"dim", "/", 
                RowBox[{"(", 
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "1"}], ")"}]}], ")"}]}]}], 
              "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "2"}], ")"}], "/", "4"}]}], "}"}]}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type II b iii): \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(A\), \(1\)]\)+\!\(\*SubscriptBox[\(A\), \
\(1\)]\) \[Subset] \!\(\*SubscriptBox[\(C\), \(4\)]\) \>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"dim", ">=", "8"}], ",", " ", 
           RowBox[{"Sow", "[", 
            RowBox[{"{", 
             RowBox[{"C4", ",", 
              RowBox[{"{", 
               RowBox[{"A1", ",", "A1", ",", "A1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "1", ",", "0"}], "}"}]}], 
               "}"}]}], "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type III: \!\(\*SubscriptBox[\(C\), \
\(n\)]\)+\!\(\*SubscriptBox[\(C\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(C\), \
\(2 nm\)]\) n,m >= 1\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<C\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<C\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"C1", "->", "A1"}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"2", "m", "*", "n"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Min", "[", 
                RowBox[{"m", ",", 
                 RowBox[{"dim", "/", 
                  RowBox[{"(", 
                   RowBox[{"4", "m"}], ")"}]}]}], "]"}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "2", ",", 
             RowBox[{
              RowBox[{"(", "dim", ")"}], "/", "4"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV a: \!\(\*SubscriptBox[\(D\), \
\(n\)]\)+\!\(\*SubscriptBox[\(D\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(2 nm\)]\) n,m >= 3\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"D3", "->", "A3"}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"2", "m", "*", "n"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"childRep", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "===", "A3"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "===", "A3"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", "childRep"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", "childRep", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "3", ",", 
               RowBox[{"Min", "[", 
                RowBox[{"m", ",", 
                 RowBox[{"dim", "/", 
                  RowBox[{"(", 
                   RowBox[{"4", "m"}], ")"}]}]}], "]"}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "3", ",", 
             RowBox[{
              RowBox[{"(", "dim", ")"}], "/", "4"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV b i): \!\(\*SubscriptBox[\(B\), \
\(n\)]\)+\!\(\*SubscriptBox[\(D\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(m\((2 n + 1)\)\)]\) m>=3 n>= 2\>\"", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"D3", "->", "A3"}], ",", 
                  RowBox[{"B2", "->", "C2"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"m", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "1"}], ")"}]}], "]"}]}], "]"}]}],
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"childRep", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "===", "C2"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "===", "A3"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", "childRep"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", "childRep", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "2", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"dim", "-", 
                  RowBox[{"2", "m"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"4", "m"}], ")"}]}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "3", ",", 
             RowBox[{
              RowBox[{"(", "dim", ")"}], "/", "10"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV b ii): \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(D\), \(n\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(3 n\)]\) n>=3\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"algChild", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"A1", ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<D\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}]}], "]"}]}], "}"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"D3", "->", "A3"}], ",", 
                RowBox[{"B2", "->", "C2"}]}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"algParent", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<D\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"3", "n"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
              " ", "satisfy", " ", "embedding", " ", "check", " ", 
              "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"childRep", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "2", "}"}], ",", 
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", "n"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"algChild", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "===", "A3"}], ",", 
              RowBox[{
               RowBox[{"childRep", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"projMatrix", "=", 
             RowBox[{"Flocci$FindProjMatrix", "[", 
              RowBox[{"algParent", ",", "algChild", ",", "childRep"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"projMatrix", "===", "False"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                "\"\<->\>\"", "<>", 
                RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                "\"\< with the representation \>\"", "<>", 
                RowBox[{"ToString", "[", "childRep", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], ",", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}], 
                   "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "3", ",", 
             RowBox[{"dim", "/", 
              RowBox[{"(", "6", ")"}]}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV c i): \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(B\), \(n\)]\)\[Subset]\!\(\*SubscriptBox[\(B\), \
\(3 n + 1\)]\) n>=2\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"algChild", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"A1", ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<B\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}]}], "]"}]}], "}"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"D3", "->", "A3"}], ",", 
                RowBox[{"B2", "->", "C2"}]}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"algParent", "=", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<B\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{"3", "n"}], "+", "1"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
              " ", "satisfy", " ", "embedding", " ", "check", " ", 
              "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"childRep", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "2", "}"}], ",", 
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", "n"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"algChild", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "===", "C2"}], ",", 
              RowBox[{
               RowBox[{"childRep", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"projMatrix", "=", 
             RowBox[{"Flocci$FindProjMatrix", "[", 
              RowBox[{"algParent", ",", "algChild", ",", "childRep"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"projMatrix", "===", "False"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                "\"\<->\>\"", "<>", 
                RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                "\"\< with the representation \>\"", "<>", 
                RowBox[{"ToString", "[", "childRep", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], ",", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}], 
                   "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "3"}], ")"}], "/", 
              RowBox[{"(", "6", ")"}]}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV c i): \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(A\), \(1\)]\)\[Subset]\!\(\*SubscriptBox[\(B\), \
\(4\)]\)\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"dim", ">=", "9"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"B4", ",", 
               RowBox[{"{", 
                RowBox[{"A1", ",", "A1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", "4", ",", "6", ",", "3"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "0", ",", "1"}], "}"}]}], 
                "}"}]}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Type IV c iii): \!\(\*SubscriptBox[\(B\), \
\(n\)]\)+\!\(\*SubscriptBox[\(B\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(B\), \
\(2 n\\\ m + n + m\)]\) m>=n>=2\>\"", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"algChild", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"D3", "->", "A3"}], ",", 
                  RowBox[{"B2", "->", "C2"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"algParent", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<B\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"2", "m", "*", "n"}], "+", "m", "+", "n"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
                " ", "satisfy", " ", "embedding", " ", "check", " ", 
                "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Or", "[", 
                  RowBox[{
                   RowBox[{"!", "check"}], ",", 
                   RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{"algParent", ",", "userWS"}], "]"}]}], "]"}]}], 
                ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"childRep", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "n"}], "]"}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"{", "1", "}"}], ",", "m"}], "]"}]}], "}"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "===", "C2"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"algChild", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "===", "C2"}], ",", 
                RowBox[{
                 RowBox[{"childRep", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"projMatrix", "=", 
               RowBox[{"Flocci$FindProjMatrix", "[", 
                RowBox[{"algParent", ",", "algChild", ",", "childRep"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"projMatrix", "===", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Could not find the projection matrix for \>\"", " ", "<>", 
                  RowBox[{"ToString", "[", "algChild", "]"}], "<>", 
                  "\"\<->\>\"", "<>", 
                  RowBox[{"ToString", "[", "algParent", "]"}], "<>", 
                  "\"\< with the representation \>\"", "<>", 
                  RowBox[{"ToString", "[", "childRep", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"add", " ", "result", " ", "to", " ", "list"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "projMatrix", "]"}], ">", "0"}], 
                   ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"algParent", ",", "algChild", ",", "projMatrix"}],
                     "}"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "2", ",", 
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dim", "-", 
                    RowBox[{"2", "m"}], "-", "1"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"4", "m"}], "+", "2"}], ")"}]}], ",", "m"}], 
                "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "2", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "5"}], ")"}], "/", "10"}]}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception \!\(\*SubscriptBox[\(B\), \
\(n\)]\)+\!\(\*SubscriptBox[\(B\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(n + m + 1\)]\) m>=n>=1 and n+m>=4\>\"", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "These", " ", "are", " ", "all", " ", "taken", " ", "from", " ", 
           "LieArt"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception i) \!\(\*SubscriptBox[\(A\), \
\(1\)]\)+\!\(\*SubscriptBox[\(B\), \(n\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(n + 2\)]\) n>=3\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", " ", 
            "satisfy", " ", "embedding", " ", "check", " ", "continue"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"n", "+", "2"}], "]"}]}], "]"}], ",", "userWS"}], 
                  "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"n", "+", "2"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"A1", ",", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<B\>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"2", ",", "n"}], "]"}], ",", 
                    RowBox[{"n", "+", "2"}], ",", "1"}], "]"}], "}"}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"n", "-", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "-", "1"}], ",", "n"}], "}"}]}], "]"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "-", "1"}], ",", 
                    RowBox[{"n", "+", "2"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"PadLeft", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"n", "+", "2"}]}], "]"}], "}"}]}], "]"}]}], "}"}],
              "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "3", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "4"}], ")"}], "/", "2"}]}], "}"}]}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception ii) \!\(\*SubscriptBox[\(C\), \
\(2\)]\)+\!\(\*SubscriptBox[\(B\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(m + 3\)]\) m>=3\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", " ", 
            "satisfy", " ", "embedding", " ", "check", " ", "continue"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"m", "+", "3"}], "]"}]}], "]"}], ",", "userWS"}], 
                  "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"projMatrix", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "1", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"2", ",", "m"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"m", "+", "3"}]}], "]"}], "}"}], ",", 
               RowBox[{"PadLeft", "[", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "-", "1"}], ",", 
                    RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"m", "-", "1"}], ",", 
                   RowBox[{"m", "+", "3"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"PadLeft", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], ",", 
                  RowBox[{"m", "+", "3"}]}], "]"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"projMatrix", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "=", 
             RowBox[{"projMatrix", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"m", "+", "3"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"C2", ",", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<B\>\"", "<>", 
                   RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], ",",
                "projMatrix"}], "}"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "3", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "6"}], ")"}], "/", "2"}]}], "}"}]}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception iii) \!\(\*SubscriptBox[\(C\), \
\(2\)]\)+\!\(\*SubscriptBox[\(C\), \(2\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(5\)]\)\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"dim", ">=", "10"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"D5", ",", 
               RowBox[{"{", 
                RowBox[{"C2", ",", "C2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2", ",", "2", ",", "1", ",", "1"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", 
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
                  "}"}]}], "}"}]}], "}"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception iv) \!\(\*SubscriptBox[\(B\), \
\(n\)]\)+\!\(\*SubscriptBox[\(B\), \(m\)]\)\[Subset]\!\(\*SubscriptBox[\(D\), \
\(n + m + 1\)]\) n,m>=3\>\"", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", 
               " ", "satisfy", " ", "embedding", " ", "check", " ", 
               "continue"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"Or", "[", 
                   RowBox[{
                    RowBox[{"!", "check"}], ",", 
                    RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"n", "+", "m", "+", "1"}], "]"}]}], "]"}], ",", 
                    "userWS"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"projMatrix", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"n", "-", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "-", "1"}], ",", 
                    RowBox[{"n", "+", "m", "+", "1"}]}], "}"}]}], "]"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"2", ",", "m"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"n", "+", "m", "+", "1"}]}], "]"}], "}"}], ",", 
                  RowBox[{"PadLeft", "[", 
                   RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "-", "1"}], ",", 
                    RowBox[{"m", "+", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "-", "1"}], ",", 
                    RowBox[{"m", "+", "n", "+", "1"}]}], "}"}]}], "]"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"n", "+", "m", "+", "1"}]}], "]"}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Sow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"n", "+", "m", "+", "1"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "n", "]"}]}], "]"}], ",", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<B\>\"", "<>", 
                    RowBox[{"ToString", "[", "m", "]"}]}], "]"}]}], "}"}], 
                  ",", "projMatrix"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "3", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dim", "-", 
                    RowBox[{"2", "m"}], "-", "2"}], ")"}], "/", "2"}], ",", 
                  "m"}], "]"}]}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "3", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "8"}], ")"}], "/", "2"}]}], "}"}]}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"**", "**"}], "*", "  ", "Exceptional", " ", 
           RowBox[{"Algebras", " ", "**"}]}], "******)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<Going through exceptional algebras:\>\"", "]"}],
            ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Special", " ", "embeddings", " ", "into", " ", "exceptional", " ", 
           "algebras", " ", "are", " ", "now", " ", "handled", " ", 
           "separately", " ", "in", " ", "the", " ", "function", " ", 
           "Flocci$GenerateMaxEmbeddingList"}], " ", "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"**", "**"}], "*", " ", "add", " ", "exceptions"}], " ", 
          "******)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<Going through all exceptions:\>\"", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Note", " ", "all", " ", "but", " ", "exception", " ", "3", " ", 
           "and", " ", "19", " ", "do", " ", "not", " ", "give", " ", "new", 
           " ", "embeddings"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"B_", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "n"}], "+", "1"}], "}"}]}], " ", "<", " ", 
            RowBox[{"D_", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "n"}], "+", "2"}], "}"}], " ", "for", " ", "n"}], 
            " ", ">", " ", "1"}], ",", " ", 
           RowBox[{"k", ">=", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Exception 3: \!\(\*SubscriptBox[\(B\), \(2 n + 1\)]\)\
\[Subset]\!\(\*SubscriptBox[\(D\), \(2 n + 2\)]\) n>0\>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"dim", ">=", "8"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"D4", ",", 
               RowBox[{"{", "B3", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], " ", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
                "}"}]}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "if", " ", "parent", " ", "algebra", " ", "does", " ", "not", " ", 
            "satisfy", " ", "embedding", " ", "check", " ", "continue"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"!", "check"}], ",", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<D\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2"}], "]"}]}], "]"}], ",", 
                   "userWS"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"\"\<D\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"2", "n"}], "+", "2"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<B\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{
                    RowBox[{"2", "n"}], "+", "1"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"2", "n"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "n"}], ",", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"PadLeft", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"2", "n"}], "+", "2"}]}], "]"}], "}"}]}], "]"}]}],
               "}"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "4"}], ")"}], "/", "4"}]}], "}"}]}], "]"}],
          ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "res", "]"}], ">", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"res", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870277844475502*^9, 3.870278130059318*^9}, {
   3.870278445634449*^9, 3.8702785425190973`*^9}, {3.870279032761799*^9, 
   3.8702791427539*^9}, {3.870279204819825*^9, 3.870279216249836*^9}, {
   3.8702792538373737`*^9, 3.8702792595405607`*^9}, {3.87027932231793*^9, 
   3.870279323238276*^9}, {3.8702793793096943`*^9, 3.870279387577549*^9}, {
   3.870279432859045*^9, 3.8702794493292713`*^9}, {3.870279488839472*^9, 
   3.870279739311544*^9}, {3.870279775053378*^9, 3.87027978275975*^9}, {
   3.870279846278452*^9, 3.8702800557339077`*^9}, {3.870280156052478*^9, 
   3.870280465363749*^9}, {3.870280641061411*^9, 3.8702806663105707`*^9}, {
   3.8702807510513563`*^9, 3.870280768195929*^9}, {3.870280815311017*^9, 
   3.870280818686058*^9}, {3.870280877002838*^9, 3.8702808772209167`*^9}, {
   3.870280917700944*^9, 3.8702809290335712`*^9}, {3.870284035111434*^9, 
   3.870284117753565*^9}, {3.870284159570113*^9, 3.870284339571994*^9}, {
   3.870284428414794*^9, 3.8702845716506643`*^9}, {3.870284603443652*^9, 
   3.870284624841673*^9}, {3.870284686458644*^9, 3.8702848178483047`*^9}, {
   3.8703463393648243`*^9, 3.87034635483313*^9}, {3.870346413221216*^9, 
   3.870346678346528*^9}, {3.870346866610642*^9, 3.8703468871891737`*^9}, {
   3.870348007883827*^9, 3.870348102858745*^9}, 3.8703482159022303`*^9, {
   3.8703482533602858`*^9, 3.870348253633833*^9}, {3.8703483893351173`*^9, 
   3.870348479911872*^9}, {3.870348516036118*^9, 3.870348556087904*^9}, {
   3.870348603349495*^9, 3.870348681246913*^9}, {3.870348842790085*^9, 
   3.8703488572456293`*^9}, {3.870348956891644*^9, 3.8703490019767027`*^9}, {
   3.870349073117298*^9, 3.870349283249503*^9}, {3.870349386786436*^9, 
   3.870349436451582*^9}, {3.870349502592209*^9, 3.870349527534861*^9}, {
   3.8703504637484617`*^9, 3.8703505464435673`*^9}, {3.870350583780691*^9, 
   3.870350739855427*^9}, {3.870350868592998*^9, 3.8703509678586683`*^9}, {
   3.870351040878663*^9, 3.870351050678054*^9}, {3.870351191379253*^9, 
   3.870351233521491*^9}, {3.870351304265333*^9, 3.87035135125511*^9}, {
   3.870351381877771*^9, 3.870351429364374*^9}, {3.870351487988143*^9, 
   3.870351489989827*^9}, {3.870351542866562*^9, 3.870351734935904*^9}, {
   3.8703517738925858`*^9, 3.8703517785292788`*^9}, {3.870352113086384*^9, 
   3.87035212740655*^9}, {3.8703523678777*^9, 3.870352374199271*^9}, {
   3.870352577658164*^9, 3.870352601192193*^9}, {3.870352755657571*^9, 
   3.870352758457054*^9}, {3.8703654629955378`*^9, 3.8703655843303843`*^9}, {
   3.870365615057761*^9, 3.8703656773345537`*^9}, {3.8704224746642857`*^9, 
   3.870422475459467*^9}, {3.870426011463793*^9, 3.870426012618826*^9}, {
   3.8704262447671328`*^9, 3.8704262468259287`*^9}, {3.870426284612849*^9, 
   3.870426417709169*^9}, {3.8704267406099453`*^9, 3.870427005811572*^9}, {
   3.870427080037656*^9, 3.870427338095179*^9}, {3.87042747018931*^9, 
   3.87042747941257*^9}, {3.870427509415906*^9, 3.8704275277981453`*^9}, 
   3.870427625389089*^9, {3.870428324226996*^9, 3.8704283415034523`*^9}, {
   3.8704283715447407`*^9, 3.8704283784579897`*^9}, {3.870428449034584*^9, 
   3.870428510529372*^9}, {3.870428552580799*^9, 3.87042856075182*^9}, {
   3.870428600268293*^9, 3.870428610325593*^9}, {3.8704286549115887`*^9, 
   3.870428678837118*^9}, {3.8704289982656813`*^9, 3.870429510189805*^9}, {
   3.870429544513596*^9, 3.870429918853557*^9}, {3.870429961937307*^9, 
   3.8704300838386717`*^9}, {3.8704301634297743`*^9, 
   3.8704301745116243`*^9}, {3.87043020757556*^9, 3.870430338476144*^9}, {
   3.870430452448164*^9, 3.870430470642288*^9}, {3.870430514928946*^9, 
   3.870430528439186*^9}, {3.870430619495145*^9, 3.8704306325898647`*^9}, {
   3.870430787195356*^9, 3.8704307980064983`*^9}, {3.870430923779293*^9, 
   3.870430949977881*^9}, {3.8704309908379517`*^9, 3.87043102935505*^9}, {
   3.870431062228867*^9, 3.870431087472426*^9}, {3.870431334556416*^9, 
   3.870431355270185*^9}, {3.870436089008025*^9, 3.870436123862763*^9}, {
   3.870436200101386*^9, 3.870436411069138*^9}, {3.8704364456617126`*^9, 
   3.870436487274846*^9}, {3.870436517592909*^9, 3.870436576656231*^9}, 
   3.870436640574985*^9, {3.8704366808606453`*^9, 3.8704366979377403`*^9}, {
   3.870436739250321*^9, 3.870436740920884*^9}, {3.8704368809111557`*^9, 
   3.870436900894005*^9}, {3.870436940831272*^9, 3.870436946432675*^9}, {
   3.8704370118613987`*^9, 3.870437100023044*^9}, {3.870438374652783*^9, 
   3.87043837697081*^9}, {3.870438447549108*^9, 3.870438451216352*^9}, {
   3.8704384917703037`*^9, 3.870438494074651*^9}, {3.870438635333246*^9, 
   3.8704387253738213`*^9}, {3.8704388863173857`*^9, 3.87043889291964*^9}, {
   3.870438966537114*^9, 3.870439113512982*^9}, 3.870439321412343*^9, {
   3.870439364755803*^9, 3.8704393697059517`*^9}, {3.870439740856698*^9, 
   3.870439798049877*^9}, {3.870439852252966*^9, 3.870439914965652*^9}, {
   3.8704399530682697`*^9, 3.8704400170280523`*^9}, {3.870440101186531*^9, 
   3.870440116608884*^9}, {3.870440253384117*^9, 3.8704403995737667`*^9}, {
   3.87044066606107*^9, 3.870440669106029*^9}, {3.870440736020453*^9, 
   3.870440736681553*^9}, {3.870440820775652*^9, 3.870440885922608*^9}, {
   3.870440920361197*^9, 3.8704409298527822`*^9}, {3.870441347780053*^9, 
   3.8704415045689383`*^9}, {3.87044153671033*^9, 3.870441572750802*^9}, {
   3.870441712049715*^9, 3.870441713622254*^9}, {3.8704441977756767`*^9, 
   3.870444210894478*^9}, {3.870444736997939*^9, 3.870444779047827*^9}, {
   3.8704449679001493`*^9, 3.8704451213896933`*^9}, {3.870445302319408*^9, 
   3.87044533179368*^9}, {3.870445382664576*^9, 3.870445431995604*^9}, {
   3.870445462878851*^9, 3.870445558870388*^9}, {3.8704456612133293`*^9, 
   3.870445698869042*^9}, {3.87044578352225*^9, 3.870445927845189*^9}, {
   3.8704460579730186`*^9, 3.870446155650556*^9}, {3.870446243524494*^9, 
   3.870446293946046*^9}, {3.87044633030796*^9, 3.87044642401331*^9}, {
   3.870446501436542*^9, 3.870446543106638*^9}, {3.87044663159881*^9, 
   3.870446660304379*^9}, {3.870446751767762*^9, 3.870446755152269*^9}, {
   3.870446812403081*^9, 3.8704468615393457`*^9}, {3.8704469379577417`*^9, 
   3.870447010409421*^9}, {3.870447097908718*^9, 3.870447152089078*^9}, {
   3.870447277111101*^9, 3.8704472848971043`*^9}, {3.870447384066779*^9, 
   3.870447433117982*^9}, {3.870448437269095*^9, 3.870448499930139*^9}, {
   3.870448550219515*^9, 3.87044865792045*^9}, {3.8704492331088057`*^9, 
   3.870449305031919*^9}, {3.87044985409727*^9, 3.870449876917416*^9}, {
   3.870452155670837*^9, 3.8704522221916428`*^9}, {3.8704522875608664`*^9, 
   3.870452440504005*^9}, 3.870452475015873*^9, {3.870452519330991*^9, 
   3.870452575026607*^9}, {3.870452628567442*^9, 3.870452628911934*^9}, {
   3.870511197802842*^9, 3.8705112216646833`*^9}, {3.8705112585856247`*^9, 
   3.8705112800671167`*^9}, {3.870511315395033*^9, 3.8705113958485527`*^9}, {
   3.870511454127212*^9, 3.870511604341565*^9}, {3.870511640438752*^9, 
   3.8705116724599*^9}, {3.870511738635384*^9, 3.870511839689355*^9}, {
   3.87051188107482*^9, 3.870511921172249*^9}, {3.8705119623029623`*^9, 
   3.87051199207089*^9}, {3.870512022662981*^9, 3.8705120342944193`*^9}, {
   3.870512092878585*^9, 3.870512102259387*^9}, {3.870512138128484*^9, 
   3.870512139809538*^9}, {3.8705121894817944`*^9, 3.8705122928572283`*^9}, {
   3.8705123358690157`*^9, 3.870512713511194*^9}, {3.870513149413477*^9, 
   3.870513205529023*^9}, {3.870513236995357*^9, 3.870513241675699*^9}, {
   3.8705134903676577`*^9, 3.870513507930563*^9}, {3.870514389522519*^9, 
   3.870514404697033*^9}, {3.8705147441390133`*^9, 3.870514744368816*^9}, {
   3.870514778521369*^9, 3.870514793714357*^9}, {3.870515022391809*^9, 
   3.870515127464286*^9}, {3.870515174848042*^9, 3.8705152406715117`*^9}, {
   3.870515292397542*^9, 3.8705153539003*^9}, {3.870515404086212*^9, 
   3.870515468784402*^9}, {3.8705155294721622`*^9, 3.870515572698477*^9}, {
   3.870787349816113*^9, 3.87078737260843*^9}, {3.870787485286296*^9, 
   3.870787501026589*^9}, {3.8707875329866962`*^9, 3.8707875331673317`*^9}, {
   3.8707879681269913`*^9, 3.870788002735154*^9}, 3.8708836291207237`*^9, {
   3.870883728547183*^9, 3.870883730982778*^9}, {3.870883969276897*^9, 
   3.8708839743794947`*^9}, {3.870941156148353*^9, 3.870941286603051*^9}, {
   3.8709415704109373`*^9, 3.870941686172634*^9}, {3.870942137362378*^9, 
   3.87094214046103*^9}, {3.870962128185948*^9, 3.870962230888311*^9}, {
   3.870962282503783*^9, 3.870962283743935*^9}, {3.8709623167260113`*^9, 
   3.870962350806354*^9}, {3.8709693150541077`*^9, 3.870969396077714*^9}, {
   3.8709695022796*^9, 3.87096950576772*^9}, {3.870969617392253*^9, 
   3.870969685927909*^9}, {3.8709697634543552`*^9, 3.87096976527505*^9}, {
   3.8710566996448708`*^9, 3.871056713851632*^9}, {3.871056788056055*^9, 
   3.871056811200984*^9}, {3.871056885622869*^9, 3.871056888683433*^9}, {
   3.871057070122366*^9, 3.871057080393749*^9}, {3.8710571333013353`*^9, 
   3.871057139826934*^9}, {3.8710571974899054`*^9, 3.871057197856493*^9}, {
   3.871550191172029*^9, 3.871550197021262*^9}, {3.8715712401816*^9, 
   3.8715712442085667`*^9}, {3.871573514332003*^9, 3.871573520850998*^9}, {
   3.871635437539165*^9, 3.8716354932234373`*^9}, {3.87346882765761*^9, 
   3.8734688311582413`*^9}, {3.873468945900153*^9, 3.873468966158757*^9}, {
   3.8734689970394297`*^9, 3.8734690708054333`*^9}, {3.8734691064244547`*^9, 
   3.8734691089183807`*^9}, {3.873469206632725*^9, 3.873469320291007*^9}, {
   3.873469351070676*^9, 3.873469417888959*^9}, {3.874719702053132*^9, 
   3.8747198715911713`*^9}, {3.875178421710699*^9, 3.8751784250897417`*^9}, {
   3.8753408825479727`*^9, 3.8753408848934813`*^9}, {3.876822081022285*^9, 
   3.87682209399457*^9}, {3.8768221379894247`*^9, 3.876822206205801*^9}, {
   3.876822257508642*^9, 3.876822378677389*^9}, {3.876822485423532*^9, 
   3.876822524595388*^9}, {3.8768226112841377`*^9, 3.8768226125918818`*^9}, {
   3.876823821655756*^9, 3.8768238657838173`*^9}, {3.876934882961294*^9, 
   3.8769348875568943`*^9}, {3.87693495654607*^9, 3.876935111199891*^9}, {
   3.876935141263672*^9, 3.876935199975706*^9}, {3.876998243309026*^9, 
   3.876998245537018*^9}, {3.8908116478198347`*^9, 3.8908116520890303`*^9}, 
   3.890811690051972*^9},
 CellLabel->
  "In[477]:=",ExpressionUUID->"57e7761c-604a-4daf-8621-5f932d30f210"],

Cell["\<\
Special embeddings into exceptional algebras without including outer \
automorphisms of the child algebra\
\>", "Text",
 CellChangeTimes->{{3.871635507574849*^9, 
  3.871635550167932*^9}},ExpressionUUID->"a67a84a1-eacb-44e4-8546-\
51955a89c9ae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G2specialOld", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"G2", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], "}"}]}], "}"}], "]"}], ";"}], 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F4specialOld", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4", ",", "8", ",", "6", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"22", ",", "42", ",", "30", ",", "16"}], "}"}], "}"}]}], 
        "}"}], "]"}], ";"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E6specialOld", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "A2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "5", ",", "5", ",", "2", ",", "4"}], 
            "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "G2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}], 
            "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "C4", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "F4", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], "]"}], ";", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], "]"}], ";"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E7specialOld", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "34", ",", "66", ",", "96", ",", "75", ",", "52", ",", "27", ",", 
            "49"}], "}"}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "26", ",", "50", ",", "72", ",", "57", ",", "40", ",", "21", ",", 
            "37"}], "}"}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "4", ",", "6", ",", "11", ",", "7", ",", "6", ",", "0", ",", 
             "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "9", ",", "11", ",", "10", ",", "6", ",", "6", ",", 
             "7"}], "}"}]}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "24", ",", "18", ",", "12", ",", "6", ",", 
             "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "2", ",", "0", ",", "3", ",", "4", ",", "3", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "4", ",", "5", ",", "4", ",", "1", ",", "3"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "2", ",", "4", ",", "4", ",", "1", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "F4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "3"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
             "}"}]}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"C3", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E8specialOld", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "72", ",", "142", ",", "210", ",", "172", ",", "132", ",", "90", 
            ",", "46", ",", "106"}], "}"}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "60", ",", "118", ",", "174", ",", "142", ",", "108", ",", "74", 
            ",", "38", ",", "88"}], "}"}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "92", ",", "182", ",", "270", ",", "220", ",", "168", ",", "114", 
            ",", "58", ",", "136"}], "}"}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "C2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "16", ",", "12", ",", "8", ",", "8", ",", "2",
              ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "9", ",", "8", ",", "7", ",", "3", ",", "3", 
             ",", "6"}], "}"}]}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "22", ",", "16", ",", "14", ",", "10", ",", 
             "6", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "8", ",", "6", ",", "4", ",", "4", ",", "1", 
             ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "5", ",", "6", ",", "4", ",", "1", ",", "1", 
             ",", "3"}], "}"}]}], "}"}]}], "}"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"F4", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.871571418955867*^9, 3.87157143565399*^9}, {
  3.871573659783454*^9, 3.871573677359898*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"bd6da155-3a8b-4c7f-883f-dd860b0e8720"],

Cell["\<\
Special embeddings into exceptional algebras including outer automorphisms of \
the child algebra\
\>", "Text",
 CellChangeTimes->{{3.8716355614600677`*^9, 
  3.87163556834796*^9}},ExpressionUUID->"5085c1ff-e0bb-419a-a801-\
b05afd404a03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Flocci$SpecialEmbeddG2\>\"", ",", "\"\<Flocci$SpecialEmbeddF4\>\"", 
     ",", "\"\<Flocci$SpecialEmbeddE6\>\"", ",", 
     "\"\<Flocci$SpecialEmbeddE7\>\"", ",", 
     "\"\<Flocci$SpecialEmbeddE8\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddG2", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddF4", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE6", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE7", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE8", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddG2", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddG2", "::", "output"}], "=", 
   "\"\<list of special embeddings into G2 in the format \
{{G2,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddG2", "::", "description"}], "=", 
   "\"\<Returns all maximal special embeddings into G2.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddF4", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddF4", "::", "output"}], "=", 
   "\"\<list of special embeddings into F4 in the format \
{{F4,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddF4", "::", "description"}], "=", 
   "\"\<Returns all maximal special embeddings into F4.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddE6", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE6", "::", "output"}], "=", 
   "\"\<list of special embeddings into E6 in the format \
{{E6,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE6", "::", "description"}], "=", 
   "\"\<Returns all maximal special embeddings into E6.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddE7", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE7", "::", "output"}], "=", 
   "\"\<list of special embeddings into E7 in the format \
{{E7,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE7", "::", "description"}], "=", 
   "\"\<Returns all maximal special embeddings into E7.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddE8", "::", "input"}], "=", "\"\<-\>\""}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SpecialEmbeddE8", "::", "output"}], "=", 
   "\"\<list of special embeddings into E8 in the format \
{{E8,{child1,child2,...},projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SpecialEmbeddE8", "::", "description"}], "=", 
    "\"\<Returns all maximal special embeddings into E8.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddG2", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"G2", ",", 
        RowBox[{"{", "A1", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2"}], "}"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}], "}"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddF4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"4", ",", "8", ",", "6", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"F4", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"22", ",", "42", ",", "30", ",", "16"}], "}"}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"18", ",", "14", ",", "6", ",", "2"}], "}"}], "}"}]}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddE6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "A2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "5", ",", "5", ",", "2", ",", "4"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", "0", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "G2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "5", ",", "2", ",", "2", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "C4", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", "0", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", "F4", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", "0", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", "0", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E6", ",", 
         RowBox[{"{", 
          RowBox[{"A2", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "0", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", "0", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddE7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "34", ",", "66", ",", "96", ",", "75", ",", "52", ",", "27", ",", 
            "49"}], "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"22", ",", "10", ",", "0", ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "4"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "5"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "26", ",", "50", ",", "72", ",", "57", ",", "40", ",", "21", ",", 
            "37"}], "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"16", ",", "6", ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "4"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "5"}]}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", "A2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "4", ",", "6", ",", "11", ",", "7", ",", "6", ",", "0", ",", 
             "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "9", ",", "11", ",", "10", ",", "6", ",", "6", ",", 
             "7"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "2", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "2", ",", 
           RowBox[{"-", "4"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "2", ",", "0", ",", "3", ",", "4", ",", "3", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "24", ",", "18", ",", "12", ",", "6", ",", 
             "12"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "2", ",", "0", ",", "0", ",", "2", ",", "6", ",", "2", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "24", ",", "18", ",", "12", ",", "6", ",", 
             "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "2", ",", "0", ",", "3", ",", "4", ",", "3", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6", ",", "4", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "5"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "4", ",", "5", ",", "4", ",", "1", ",", "3"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "2", ",", "4", ",", "4", ",", "1", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4", ",", "4", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "9"}], ",", 
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "3", ",", "4", ",", "4", ",", "3", ",", "1", ",", "2"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "F4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "6", ",", "5", ",", "4", ",", "3", ",", "3"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "2", ",", "3", ",", "4", ",", "3", ",", "2", ",", "1", ",", "2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "0", ",", "0"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
          "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E7", ",", 
         RowBox[{"{", 
          RowBox[{"C3", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "0"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}],
             "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "0", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "0", ",", "2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "2", ",", "4", ",", "4", ",", "3", ",", "2", ",", "2", ",", "2"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpecialEmbeddE8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "72", ",", "142", ",", "210", ",", "172", ",", "132", ",", "90", 
            ",", "46", ",", "106"}], "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "38", ",", "30", ",", "24", ",", "16", ",", "10", ",", "6", ",", "2",
           ",", "4"}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "60", ",", "118", ",", "174", ",", "142", ",", "108", ",", "74", 
            ",", "38", ",", "88"}], "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "32", ",", "26", ",", "22", ",", "16", ",", "10", ",", "6", ",", "2",
           ",", "4"}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "A1", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "92", ",", "182", ",", "270", ",", "220", ",", "168", ",", "114", 
            ",", "58", ",", "136"}], "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "48", ",", "38", ",", "30", ",", "20", ",", "12", ",", "6", ",", "2",
           ",", "4"}], "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", "C2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "16", ",", "12", ",", "8", ",", "8", ",", "2",
              ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "4", ",", "8", ",", "9", ",", "8", ",", "7", ",", "3", ",", "3", 
             ",", "6"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6", ",", "4", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "4", ",", "2", ",", "1", ",", 
           "0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"A1", ",", "A2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "8", ",", "16", ",", "22", ",", "16", ",", "14", ",", "10", ",", 
             "6", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "5", ",", "6", ",", "4", ",", "1", ",", "1", 
             ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "4", ",", "8", ",", "6", ",", "4", ",", "4", ",", "1", 
             ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "4", ",", "6", ",", "9", ",", "6", ",", "4", ",", "2", ",", "1", 
           ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E8", ",", 
         RowBox[{"{", 
          RowBox[{"F4", ",", "G2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
           ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "9"}], ",", 
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "6"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "4"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", 
           ",", "2"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.871569987434278*^9, 3.871570001090555*^9}, {
   3.871570169514085*^9, 3.871570211902635*^9}, 3.8715710128436317`*^9, 
   3.8715712132945337`*^9, 3.871571364854945*^9, 3.87157140819639*^9, {
   3.871571450517359*^9, 3.8715715273212023`*^9}, {3.871571600373446*^9, 
   3.871571708374815*^9}, {3.871571783147056*^9, 3.8715718199866953`*^9}, 
   3.871573247946864*^9, {3.871573305782371*^9, 3.8715734625715303`*^9}, {
   3.87517843842426*^9, 3.8751784859588737`*^9}, {3.875340895322628*^9, 
   3.875340913409607*^9}, {3.876822551428007*^9, 3.876822743351989*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"bc29c25b-6c26-410e-a3f3-f82806450ca1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Function to obtain all maximal embeddings into a simple Lie algebra s\
\>", "Subsection",
 CellChangeTimes->{{3.8699119423432693`*^9, 3.8699119477219877`*^9}, {
  3.8699242664577227`*^9, 
  3.869924291220496*^9}},ExpressionUUID->"6d2c32ff-3105-40b9-b63e-\
dc10258910ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$Unique\[CapitalLambda]\[Rho]\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "::", "input"}], "=", 
    "\"\<g: parent algebra in format {alg1,alg2,...}. \[CapitalLambda]\[Rho]: \
projection matrix\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "::", "output"}], "=", 
   "\"\<unique projection matrix.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "::", "description"}], 
    "=", "\"\<Returns unique form of the projection matrix.\>\""}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Maybe", " ", "move", " ", "this", " ", "function", " ", "to", " ", "the", 
    " ", "automorphism", " ", "section"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "[", 
   RowBox[{"g_", ",", "\[CapitalLambda]\[Rho]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ranklist", ",", "\[CapitalPhi]pa", ",", "outlist"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ranklist", "=", 
      RowBox[{"Flocci$Rank", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPhi]pa", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Take", "[", 
                    RowBox[{"ranklist", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}],
                 ",", "#", ",", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Take", "[", 
                    RowBox[{"ranklist", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
               "]"}], "&"}], ",", 
             RowBox[{
              RowBox[{"Flocci$LinearEquivWeightSystms", "[", 
               RowBox[{
               "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outlist", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[CapitalLambda]\[Rho]", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "o"}], "\[RightDoubleBracket]"}], ".", 
              "#"}], "&"}], ",", 
            RowBox[{
            "Flocci$innerAutsMap\[CapitalLambda]ToRepresentative", "[", 
             RowBox[{"g", ",", 
              RowBox[{"\[CapitalLambda]\[Rho]", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "o"}], "\[RightDoubleBracket]"}]}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"o", ",", 
            RowBox[{"Flocci$OuterAutomorphisms", "[", "g", "]"}]}], "}"}]}], 
         "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MinimalBy", "[", 
       RowBox[{"outlist", ",", 
        RowBox[{
         RowBox[{"\[CapitalPhi]pa", ".", 
          RowBox[{"Transpose", "[", "#", "]"}]}], "&"}]}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8680907497701178`*^9, 3.8680908664238377`*^9}, {
   3.8680910151298437`*^9, 3.868091026789344*^9}, {3.8680910955781527`*^9, 
   3.868091124032503*^9}, {3.868092386805566*^9, 3.8680924324011393`*^9}, {
   3.868355621862759*^9, 3.868355631866838*^9}, {3.8684454063171864`*^9, 
   3.868445407154832*^9}, {3.869640317959363*^9, 3.869640344152989*^9}, {
   3.869640404851572*^9, 3.869640417496622*^9}, {3.869643448788059*^9, 
   3.869643466537656*^9}, {3.8701853939044247`*^9, 3.870185405015245*^9}, 
   3.876582105121709*^9, {3.876582996356372*^9, 3.876583018101722*^9}, 
   3.876583070054308*^9, {3.876583164354268*^9, 3.876583164823709*^9}, {
   3.876583327870675*^9, 3.876583339072227*^9}, {3.876822952183416*^9, 
   3.876822984370029*^9}, {3.876823141652774*^9, 3.8768232617466*^9}, {
   3.8769964870798807`*^9, 3.876996495505664*^9}, {3.876996635096754*^9, 
   3.876996635308833*^9}, 3.877015062385209*^9, 3.877069998315817*^9},
 CellLabel->
  "In[509]:=",ExpressionUUID->"52de837f-c69d-411c-95b1-ee2173e64d4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$ApplyChildOutAutomorphisms\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ApplyChildOutAutomorphisms", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$ApplyChildOutAutomorphisms", "::", "input"}], "=", 
    "\"\<embedding: embedding of the form {parent,{child},projection matrix}.\
\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$ApplyChildOutAutomorphisms", "::", "output"}], "=", 
   "\"\<unique projection matrix.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$ApplyChildOutAutomorphisms", "::", "description"}], "=", 
    "\"\<Applies all child outer automorphisms to projection matrix.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ApplyChildOutAutomorphisms", "[", "embedding_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "outAutom", ",", "transResult", ",", "uniqueForm", ",", "duplicates"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "applies", " ", "all", " ", "child", " ", "outer", " ", "automorphisms", 
      " ", "to", " ", "projection", " ", "matrix", "\[IndentingNewLine]", 
      RowBox[{"Input", ":", "      ", 
       RowBox[{
        RowBox[{"-", " ", "embedding"}], " ", "of", " ", "the", " ", "form", 
        " ", 
        RowBox[{"{", 
         RowBox[{"parent", ",", 
          RowBox[{"{", "child", "}"}], ",", 
          RowBox[{"projection", " ", "matrix"}]}], "}"}], 
        "\[IndentingNewLine]", "Output"}], ":", "   ", 
       RowBox[{
        RowBox[{"-", " ", "list"}], " ", "of", " ", "resulting", " ", 
        "embeddings", " ", "of", " ", "the", " ", "form", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"parent", ",", 
            RowBox[{"{", "child", "}"}], ",", 
            RowBox[{
             RowBox[{"O1", ".", "projection"}], " ", "matrix"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"parent", ",", 
            RowBox[{"{", "child", "}"}], ",", 
            RowBox[{
             RowBox[{"O2", ".", "projection"}], " ", "matrix"}]}], "}"}], ",",
           "..."}], "}"}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "generate", " ", "outer", " ", "automorphisms", " ", "for", " ", "child",
       " ", "algebra"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outAutom", "=", 
      RowBox[{"Flocci$OuterAutomorphisms", "[", 
       RowBox[{"embedding", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "apply", " ", "all", " ", "of", " ", "the", " ", "outer", " ", 
       "automorphisms", " ", "to", " ", "the", " ", "projection", " ", 
       "matrix", " ", "and", " ", "return", " ", "the", " ", "result"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"transResult", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"embedding", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"embedding", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"embedding", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "out"}], "\[RightDoubleBracket]"}], "]"}]}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"out", ",", "outAutom"}], "}"}]}], "]"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"uniqueForm", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "transResult", "\[LeftDoubleBracket]", "ml", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{
           "transResult", "\[LeftDoubleBracket]", "ml", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "transResult", "\[LeftDoubleBracket]", "ml", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "}"}], "]"}], ",", 
            RowBox[{
             RowBox[{
             "transResult", "\[LeftDoubleBracket]", "ml", 
              "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ml", ",", "1", ",", 
          RowBox[{"Length", "[", "transResult", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"duplicates", "=", 
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Range", "@", 
         RowBox[{"Length", "[", "uniqueForm", "]"}]}], ",", 
        RowBox[{
         RowBox[{"uniqueForm", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"transResult", "[", 
           RowBox[{"[", 
            RowBox[{"dup", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"uniqueForm", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"dup", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dup", ",", "duplicates"}], "}"}]}], "]"}], "//", 
      "DeleteDuplicates"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8707898941708117`*^9, 3.870790251378792*^9}, {
   3.870790812198773*^9, 3.870790814650222*^9}, {3.871033716975945*^9, 
   3.87103383817393*^9}, {3.8710340354791327`*^9, 3.871034088152165*^9}, {
   3.87103511900448*^9, 3.8710351492104063`*^9}, {3.8710416484104843`*^9, 
   3.8710416516303453`*^9}, {3.871043671559351*^9, 3.8710436764512777`*^9}, {
   3.871045232303597*^9, 3.871045297810903*^9}, {3.875178499283708*^9, 
   3.875178522731247*^9}, {3.8753409184695797`*^9, 3.875340920856189*^9}, 
   3.876581802286807*^9, {3.876582928263974*^9, 3.876582957424088*^9}, 
   3.876823016783204*^9, {3.87682327957829*^9, 3.876823336761881*^9}, {
   3.8769962556349497`*^9, 3.8769962692005987`*^9}, {3.8769963160605307`*^9, 
   3.8769963231531973`*^9}, {3.876996431727017*^9, 3.876996435691574*^9}, {
   3.8769966060055103`*^9, 3.8769966293784122`*^9}, 3.877015068064012*^9},
 CellLabel->
  "In[515]:=",ExpressionUUID->"c69e931a-1e58-4529-84ee-e2d86bcb2502"],

Cell[TextData[{
 "We do not apply child outer automorphisms to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "n"], "->", 
    SubscriptBox["A", 
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "22634d1a-4821-43ba-87c5-848edaa60ff6"],
 " embeddings"
}], "Text",
 CellChangeTimes->{{3.8709703510587053`*^9, 
  3.870970386249426*^9}},ExpressionUUID->"68bb8258-4777-47fa-a76f-\
e0893b827844"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$MaximalRegularEmbeddings\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalRegularEmbeddings", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalRegularEmbeddings", "::", "input"}], "=", 
    "\"\<s: simple Lie algebra, e.g. A5.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalRegularEmbeddings", "::", "output"}], "=", 
   "\"\<list of embeddings of the form {{parent,{child},projection \
matrix},...}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalRegularEmbeddings", "::", "description"}], "=", 
    "\"\<Returns all maximal regular embeddings into s including ones \
obtained by outer automorphisms on the child algebra.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MaximalRegularEmbeddings", "[", "s_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rank", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Returns", " ", "all", " ", "maximal", " ", "regular", " ", 
       "embeddings", " ", "into", " ", "s", " ", "including", " ", "ones", 
       " ", "obtained", " ", "by", " ", "outer", " ", "automorphisms", " ", 
       "on", " ", "the", " ", "child", " ", "algebra", "\[IndentingNewLine]", 
       
       RowBox[{"Input", ":", "    ", 
        RowBox[{
         RowBox[{"-", " ", "simple"}], " ", "Lie", " ", "algebra"}]}]}], ",", 
      " ", 
      RowBox[{
       RowBox[{"e", ".", "g", ".", " ", "A5"}], "\[IndentingNewLine]", 
       RowBox[{"Output", ":", "   ", 
        RowBox[{
         RowBox[{"-", " ", "list"}], " ", "of", " ", "embeddings", " ", "of", 
         " ", "the", " ", "form", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"parent", ",", 
             RowBox[{"{", "child", "}"}], ",", 
             RowBox[{"projection", " ", "matrix"}]}], "}"}], ",", "..."}], 
          "}"}]}]}]}]}], "  ", "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rank", "=", 
      RowBox[{"Flocci$Rank", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"Flocci$ApplyChildOutAutomorphisms", ",", 
           RowBox[{"Flocci$NonSSEmbeddingAn", "[", "rank", "]"}]}], "]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"Flocci$ApplyChildOutAutomorphisms", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flocci$NonSSEmbeddingBn", "[", "rank", "]"}], ",", 
             RowBox[{"Flocci$SSEmbeddingBn", "[", "rank", "]"}]}], "]"}]}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"Flocci$ApplyChildOutAutomorphisms", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flocci$NonSSEmbeddingCn", "[", "rank", "]"}], ",", 
             RowBox[{"Flocci$SSEmbeddingCn", "[", "rank", "]"}]}], "]"}]}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{"Flocci$ApplyChildOutAutomorphisms", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flocci$NonSSEmbeddingDn", "[", "rank", "]"}], ",", 
             RowBox[{"Flocci$SSEmbeddingDn", "[", "rank", "]"}]}], "]"}]}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", "Flocci$SSEmbeddingG2", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"Flocci$NonSSEmbeddingE6", ",", "Flocci$SSEmbeddingE6"}], 
         "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"Flocci$NonSSEmbeddingE7", ",", "Flocci$SSEmbeddingE7"}], 
         "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", "Flocci$SSEmbeddingE8", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", "Flocci$SSEmbeddingF4", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869921660328676*^9, 3.8699216763991632`*^9}, 
   3.8699231578327627`*^9, {3.869923227623437*^9, 3.869923266826322*^9}, {
   3.869923839882403*^9, 3.8699239039603443`*^9}, {3.8699239547253428`*^9, 
   3.8699240124683228`*^9}, {3.8699240708781967`*^9, 3.869924072160681*^9}, {
   3.8699241467258453`*^9, 3.869924147795723*^9}, {3.869924341868285*^9, 
   3.869924348676412*^9}, {3.869926555150042*^9, 3.869926583036882*^9}, {
   3.869928998035116*^9, 3.869929020480589*^9}, {3.869936015610444*^9, 
   3.869936017486299*^9}, {3.870003906268074*^9, 3.870003908933093*^9}, {
   3.870164245006916*^9, 3.870164247978198*^9}, {3.8705157430964003`*^9, 
   3.87051580786908*^9}, {3.870790609252315*^9, 3.8707906876670637`*^9}, {
   3.870790880842225*^9, 3.87079100048062*^9}, {3.870883171449974*^9, 
   3.870883190395668*^9}, {3.870970338553523*^9, 3.870970341116398*^9}, {
   3.87102821288526*^9, 3.8710282166596937`*^9}, {3.871030638849523*^9, 
   3.871030641826089*^9}, {3.871033621685597*^9, 3.871033625839079*^9}, {
   3.871144949307802*^9, 3.871144951782063*^9}, {3.871145201539156*^9, 
   3.871145227649938*^9}, {3.875178527563826*^9, 3.875178530135798*^9}, {
   3.8753409240848513`*^9, 3.8753409269926653`*^9}, {3.876582728812711*^9, 
   3.876582741220861*^9}, {3.876582778775372*^9, 3.8765828157524137`*^9}, {
   3.8768233503174553`*^9, 3.876823412484372*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"c294b8a9-d825-46f1-8130-1933fc892592"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$FindPairs\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindPairs", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FindPairs", "::", "input"}], "=", 
    "\"\<ws: weightsystem in format {weight1,weight2,...}.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindPairs", "::", "output"}], "=", 
   "\"\<number of weight pairs.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FindPairs", "::", "description"}], "=", 
    "\"\<Returns number of (weight,-weight) pairs in weightsystem, including \
identical pairs, but excluding zero weight vectors.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$FindPairs", "[", "ws_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"woZero", ",", "i", ",", "wsDoubled", ",", "pairCount"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Drop", " ", "zero", " ", "rows"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pairCount", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"woZero", "=", "ws"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"woZero", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"ws", ",", 
          RowBox[{
           RowBox[{"#", "!=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"ws", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
           "&"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "woZero", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"woZero", ",", 
            RowBox[{"-", 
             RowBox[{"woZero", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"pairCount", "=", 
           RowBox[{"pairCount", "+", "1"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"pairCount", "/", "2"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8662111883196373`*^9, 3.866211201279023*^9}, {
  3.8662115392233152`*^9, 3.8662115485831423`*^9}, {3.866211608738023*^9, 
  3.866211690222978*^9}, {3.866211750953936*^9, 3.8662118186334257`*^9}, {
  3.866211942555513*^9, 3.866211988297743*^9}, {3.866212082720183*^9, 
  3.866212140062146*^9}, {3.866298854116418*^9, 3.8662988571292143`*^9}, {
  3.866299004854123*^9, 3.866299008756266*^9}, {3.8751785338296432`*^9, 
  3.8751785378080673`*^9}, {3.8753409301098433`*^9, 3.8753409328097267`*^9}, {
  3.8768234261641283`*^9, 3.8768234553831787`*^9}, {3.8768235045421877`*^9, 
  3.8768236221714373`*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"2e34350c-97f5-4175-9e4d-58802573c1af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$FindUniquePairs\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindUniquePairs", "::", "tag"}], "=", "\"\<Embed\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FindUniquePairs", "::", "input"}], "=", 
    "\"\<ws: weightsystem in format {weight1,weight2,...}.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FindUniquePairs", "::", "output"}], "=", 
   "\"\<number of unique weight pairs.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$FindUniquePairs", "::", "description"}], "=", 
    "\"\<Returns number of unique (weight,-weight) pairs in weightsystem, \
excluding zero weight vectors.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$FindUniquePairs", "[", "ws_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "woZero", ",", "i", ",", "wsDoubled", ",", "pairCount", ",", 
      "uniqueList"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Drop", " ", "zero", " ", "rows"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pairCount", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"uniqueList", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Tally", "[", "ws", "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "1"}], "}"}], ":>", "x"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"woZero", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"uniqueList", ",", 
        RowBox[{
         RowBox[{"#", "!=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"uniqueList", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "woZero", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"woZero", ",", 
            RowBox[{"-", 
             RowBox[{"woZero", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"pairCount", "=", 
           RowBox[{"pairCount", "+", "1"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"pairCount", "/", "2"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866212186054708*^9, 3.866212187290678*^9}, {
  3.8662124114272842`*^9, 3.866212474604577*^9}, {3.875178540018099*^9, 
  3.8751785422996693`*^9}, {3.8753409367015753`*^9, 3.875340939935648*^9}, {
  3.8768236368862333`*^9, 3.876823667634643*^9}, {3.8768237134295273`*^9, 
  3.876823729585833*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"2a5e3747-d5cb-4bb0-b7d6-85e0c73f7f3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$CheckAlgebraEmbedding\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CheckAlgebraEmbedding", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$CheckAlgebraEmbedding", "::", "input"}], "=", 
    "\"\<alg: algebra. userWs: user specified weightsystem in format \
{weight1,weight2,...}.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CheckAlgebraEmbedding", "::", "output"}], "=", 
   "\"\<True or False.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$CheckAlgebraEmbedding", "::", "description"}], "=", 
    "\"\<Checks if the algebra alg contains irreps with dimension \
\[LessEqual] dim(userWS)/3 or dim(userWS) \[GreaterEqual] dimension \
\[GreaterEqual] dim(userWS)/3 and corresponding weightsystem has  # unique \
pairs \[LessEqual] pairs in userWS.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
   RowBox[{"alg_", ",", "userWS_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "userWSPairs", ",", "userWSDim", ",", "irrepList", ",", "currrep", ",", 
      "bool"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "checks", " ", "if", " ", "the", " ", "algebra", " ", "alg", " ", 
       "contains", " ", "irreps", " ", "with", " ", "dimension"}], " ", "<=", 
      " ", 
      RowBox[{"dim", 
       RowBox[{
        RowBox[{"(", "userWS", ")"}], "/", "3"}], " ", "or", " ", "dim", 
       RowBox[{"(", "userWS", ")"}]}], " ", ">=", " ", "dimension", " ", ">=",
       " ", 
      RowBox[{"dim", 
       RowBox[{
        RowBox[{"(", "userWS", ")"}], "/", "3"}], " ", "and", " ", 
       "corresponding", " ", "weightsystem", " ", "has", "  ", "#", " ", 
       "unique", " ", "pairs"}], " ", "<=", " ", 
      RowBox[{"pairs", " ", "in", " ", "userWS", "\[IndentingNewLine]", 
       RowBox[{"Output", ":", "  ", 
        RowBox[{
         RowBox[{"-", " ", "True"}], " ", "if", " ", "there", " ", "is", " ", 
         "such", " ", "an", " ", "irrep", " ", "and", " ", "False", " ", 
         "otherwise"}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"userWSDim", "=", 
      RowBox[{"Length", "[", "userWS", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"userWSPairs", "=", 
      RowBox[{"Flocci$FindPairs", "[", "userWS", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"Flocci$TypeAQ", "[", "alg", "]"}], ",", 
          RowBox[{"Flocci$TypeBQ", "[", "alg", "]"}]}], "]"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Flocci$Rank", "[", "alg", "]"}], ">", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"userWSDim", "-", "1"}], ")"}], "/", "2"}]}], ")"}]}], 
       ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"Flocci$TypeCQ", "[", "alg", "]"}], ",", 
          RowBox[{"Flocci$TypeDQ", "[", "alg", "]"}]}], "]"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Flocci$Rank", "[", "alg", "]"}], ">", 
          RowBox[{
           RowBox[{"(", "userWSDim", ")"}], "/", "2"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"irrepList", "=", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Flocci$SimpleIrrepsWithDim", "[", 
         RowBox[{"alg", ",", "userWSDim"}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bool", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"currrep", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", 
           RowBox[{"userWSDim", "/", "3"}]}], ",", 
          RowBox[{
           RowBox[{"bool", "=", "True"}], ";", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flocci$FindUniquePairs", "[", 
            RowBox[{"Flocci$WeightSystem", "[", 
             RowBox[{"alg", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"currrep", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "]"}], "<=", 
           "userWSPairs"}], ",", 
          RowBox[{
           RowBox[{"bool", "=", "True"}], ";", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"currrep", ",", "irrepList"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "bool", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873463548577694*^9, 3.8734635856430492`*^9}, {
   3.873463656125024*^9, 3.873463675553877*^9}, {3.873463705558015*^9, 
   3.873463807959812*^9}, {3.873463855017474*^9, 3.8734640150398827`*^9}, {
   3.873464199792107*^9, 3.873464232698229*^9}, 3.8734642750550137`*^9, {
   3.873464364955285*^9, 3.873464505200285*^9}, {3.87346489085019*^9, 
   3.873464964185629*^9}, {3.873465014918456*^9, 3.873465035445251*^9}, {
   3.8734650660286293`*^9, 3.873465101292081*^9}, {3.8734652450526533`*^9, 
   3.8734652532269373`*^9}, {3.873965893970985*^9, 3.873965895027623*^9}, {
   3.8739659337397947`*^9, 3.873966072647963*^9}, {3.874660351349224*^9, 
   3.874660407523219*^9}, {3.874660438298456*^9, 3.8746605601674843`*^9}, {
   3.8746606543101254`*^9, 3.874660665694262*^9}, {3.8746607030660458`*^9, 
   3.874660706194743*^9}, {3.874660755978166*^9, 3.874660758089673*^9}, {
   3.875178545446991*^9, 3.875178548158966*^9}, {3.875340943102396*^9, 
   3.87534094740107*^9}, 3.876823472852996*^9, 3.876823681378734*^9, {
   3.876823747990828*^9, 3.876823769979978*^9}, {3.876823928768961*^9, 
   3.87682397754757*^9}, {3.876824026009736*^9, 3.876824059141589*^9}, {
   3.876998258821591*^9, 3.8769982607799597`*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"8adbe5d3-da46-4a9e-82a3-e5391b7cf13a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$GenerateMaxEmbeddingList\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$GenerateMaxEmbeddingList", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$GenerateMaxEmbeddingList", "::", "input"}], "=", 
    "\"\<userWs: user specified weightsystem in format {weight1,weight2,...}.\
\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$GenerateMaxEmbeddingList", "::", "output"}], "=", 
   "\"\<list of maximal embeddings of the form {{parent,{child},projection \
matrix},...}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$GenerateMaxEmbeddingList", "::", "description"}], "=", 
    "\"\<Generates list of independent maximal embeddings for parent algebras \
with lowest dimensional irrep \[LessEqual] dim.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$GenerateMaxEmbeddingList", "[", "userWS_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "embeddList", ",", "currResults", ",", "algList", ",", "dim", ",", 
      "specialEmbedd", ",", "message"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "generates", " ", "list", " ", "of", " ", "maximal", " ", "embeddings", 
       " ", "for", " ", "parent", " ", "algebras", " ", "with", " ", "lowest",
        " ", "dimensional", " ", "irrep"}], " ", "<=", " ", 
      RowBox[{"dim", "\[IndentingNewLine]", "  ", 
       RowBox[{"Input", ":", "      ", 
        RowBox[{
         RowBox[{"-", " ", "upper"}], " ", "bound", " ", "on", " ", "the", 
         " ", "lowest", " ", "dimension", " ", "of", " ", "the", " ", 
         "parent", " ", "algebra", "  ", "\[IndentingNewLine]", "Output"}], 
        ":", "     ", 
        RowBox[{
         RowBox[{"-", " ", "list"}], " ", "of", " ", "maximal", " ", 
         "embeddings", " ", "of", " ", "the", " ", "form", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"parent", ",", 
             RowBox[{"{", "child", "}"}], ",", 
             RowBox[{"projection", " ", "matrix"}]}], "}"}], ",", "..."}], 
          "}"}]}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"embeddList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dim", "=", 
      RowBox[{"Length", "[", "userWS", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"algList", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<A\>\"", ",", "1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", "-", "1"}], ")"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<B\>\"", ",", "3", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", "-", "1"}], ")"}], "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<C\>\"", ",", "2", ",", 
          RowBox[{"dim", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<D\>\"", ",", "4", ",", 
          RowBox[{"dim", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<G\>\"", ",", "2", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"2", ",", 
            RowBox[{"2", "+", "dim", "-", "7"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<F\>\"", ",", "4", ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"4", "+", "dim", "-", "26"}], ",", "4"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "6", ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"6", "+", "dim", "-", "27"}], ",", "6"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "7", ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"7", "+", "dim", "-", "56"}], ",", "7"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<E\>\"", ",", "8", ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"8", "+", "dim", "-", "248"}], ",", "8"}], "]"}]}], 
         "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"message", "=", 
      RowBox[{
      "PrintTemporary", "[", "\"\<Generating minimal superalgebras...\>\"", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Go through regular embeddings...\>\"", "]"}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"alg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<>", 
              "\"\< algebras up to rank \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"alg", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"alg", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
            ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{"alg", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<>", 
                    RowBox[{"ToString", "[", "fpd", "]"}]}], "]"}], ",", 
                   "userWS"}], "]"}]}], ",", 
                RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"currResults", "=", 
               RowBox[{"Flocci$MaximalRegularEmbeddings", "[", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{
                  RowBox[{"alg", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "[", "fpd", "]"}]}], "]"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"embeddList", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"embeddList", ",", "currResults"}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"fpd", ",", 
               RowBox[{"alg", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"alg", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"alg", ",", "algList"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"alg", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "fpd"}], "}"}]}], "]"}], "//",
        "Timing"}], "//", 
      RowBox[{"Flocci$Timing", "[", "\"\<genList: regular\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Go through special embeddings...\>\"", "]"}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"specialEmbedd", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$SpecialEmbeddings", "[", "userWS", "]"}], "//", 
        "Timing"}], "//", 
       RowBox[{"Flocci$Timing", "[", "\"\<genList: special\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Found Special Embeddings\>\"", "]"}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"embeddList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"embeddList", ",", 
          RowBox[{"Join", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
            "Flocci$ApplyChildOutAutomorphisms", ",", "specialEmbedd"}], 
            "]"}]}]}], "]"}], "//", "Timing"}], "//", 
       RowBox[{
       "Flocci$Timing", "[", "\"\<genList: unique special\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Add", " ", "special", " ", "embeddings", " ", "for", " ", 
       "exceptional", " ", "algebras"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dim", ">=", "7"}], "&&", 
        RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
         RowBox[{"G2", ",", "userWS"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"embeddList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"embeddList", ",", "Flocci$SpecialEmbeddG2"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<F4\>\"", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dim", " ", ">=", "26"}], "&&", 
        RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
         RowBox[{"F4", ",", "userWS"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"embeddList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"embeddList", ",", "Flocci$SpecialEmbeddF4"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<E6\>\"", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dim", ">=", "27"}], "&&", 
        RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
         RowBox[{"E6", ",", "userWS"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"embeddList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"embeddList", ",", "Flocci$SpecialEmbeddE6"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<E7\>\"", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dim", ">=", "56"}], "&&", 
        RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
         RowBox[{"E7", ",", "userWS"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"embeddList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"embeddList", ",", "Flocci$SpecialEmbeddE7"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<E8\>\"", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dim", ">=", "248"}], "&&", 
        RowBox[{"Flocci$CheckAlgebraEmbedding", "[", 
         RowBox[{"E8", ",", "userWS"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"embeddList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"embeddList", ",", "Flocci$SpecialEmbeddE8"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "message", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Return", " ", "result"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"embeddList", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}]}], "]"}], "[", 
       
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8707910110086737`*^9, 3.870791128825034*^9}, {
   3.870791187096719*^9, 3.870791194352571*^9}, {3.870791277125388*^9, 
   3.870791326870721*^9}, {3.870791394773211*^9, 3.8707914109834433`*^9}, {
   3.87079144323593*^9, 3.8707914707971992`*^9}, {3.870791502183099*^9, 
   3.870791692299102*^9}, {3.870791775118245*^9, 3.8707918765185547`*^9}, {
   3.8707920051812477`*^9, 3.87079202591288*^9}, {3.870792075231084*^9, 
   3.870792076604149*^9}, {3.870792129138113*^9, 3.870792129385899*^9}, {
   3.870792164562294*^9, 3.870792343991611*^9}, {3.870792475802958*^9, 
   3.8707924992675943`*^9}, {3.870792917939621*^9, 3.8707929227647533`*^9}, {
   3.87079308848096*^9, 3.870793092462243*^9}, {3.870795146062922*^9, 
   3.870795246966216*^9}, {3.870796075432642*^9, 3.870796192976161*^9}, 
   3.870796246461898*^9, {3.870796345791314*^9, 3.870796371136032*^9}, {
   3.870796403953536*^9, 3.8707964205026503`*^9}, {3.870796740661416*^9, 
   3.870796758366885*^9}, {3.870796797347886*^9, 3.870796807291168*^9}, {
   3.8707968995404377`*^9, 3.870796903904398*^9}, {3.870883184222288*^9, 
   3.870883188214466*^9}, {3.870941121399921*^9, 3.870941137667148*^9}, {
   3.870949492858082*^9, 3.87094949580588*^9}, {3.871035335120449*^9, 
   3.871035368870085*^9}, {3.8710354030073013`*^9, 3.871035403372829*^9}, {
   3.871036951395589*^9, 3.871036954240984*^9}, {3.8710406924450407`*^9, 
   3.871040706154139*^9}, {3.8710408559582243`*^9, 3.871040862396059*^9}, {
   3.871041237779646*^9, 3.8710412451275043`*^9}, {3.871041762602421*^9, 
   3.871041772327993*^9}, {3.871045332575945*^9, 3.871045340618815*^9}, {
   3.871045383167038*^9, 3.871045407241205*^9}, {3.871045651067865*^9, 
   3.871045653463251*^9}, {3.8710456836231194`*^9, 3.8710457037403183`*^9}, {
   3.871486289254932*^9, 3.871486290569993*^9}, {3.871547324623521*^9, 
   3.871547375675255*^9}, {3.8715735353840647`*^9, 3.871573629489257*^9}, {
   3.87213610479462*^9, 3.872136111920557*^9}, {3.873465334783*^9, 
   3.873465445389402*^9}, {3.873465530532536*^9, 3.873465558518458*^9}, {
   3.8734656537354193`*^9, 3.873465754042315*^9}, {3.873468886780549*^9, 
   3.873468893509788*^9}, {3.8734689246678762`*^9, 3.873468927575568*^9}, {
   3.873474379733611*^9, 3.873474418060053*^9}, {3.873474449842132*^9, 
   3.873474540475342*^9}, {3.873474997832037*^9, 3.8734749995961*^9}, {
   3.873475051393765*^9, 3.87347508264447*^9}, {3.873475319824029*^9, 
   3.873475336751574*^9}, {3.873965290639895*^9, 3.8739653537616873`*^9}, {
   3.873966252922097*^9, 3.873966314381137*^9}, {3.873966522432225*^9, 
   3.8739665390256653`*^9}, {3.874719994481346*^9, 3.87471999754723*^9}, {
   3.875178552737896*^9, 3.875178555096644*^9}, {3.8753409509237757`*^9, 
   3.875340982060544*^9}, {3.87623056660503*^9, 3.876230572435754*^9}, {
   3.876582653804283*^9, 3.8765826785656233`*^9}, {3.876823783581085*^9, 
   3.876823803343527*^9}, {3.8768240715638647`*^9, 3.876824150796907*^9}, {
   3.890804854252988*^9, 3.890804856098583*^9}, {3.8908048948247004`*^9, 
   3.890804939746173*^9}, {3.890804972103735*^9, 3.8908049726445637`*^9}, {
   3.895914792991597*^9, 
   3.895914859283201*^9}},ExpressionUUID->"b6ae5317-f3b5-4bd2-bc33-\
9a8ab7153232"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.890804961086812*^9, 
  3.890804989622077*^9}},ExpressionUUID->"f99694d0-acdd-4960-b0ca-\
b34231d7e3b3"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Part","partw",
    "\"Part \\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\) of \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"}\\\"}], TraditionalForm]\\) does not \
exist.\"",2,817,4,30972884307212100657,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.890804962702312*^9},
 CellLabel->
  "During evaluation of \
In[817]:=",ExpressionUUID->"258f832c-f21f-4670-85a5-aa27172e014e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Null", ",", 
     RowBox[{"{", "}"}]}], "}"}], "\[LeftDoubleBracket]", 
   RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.890804962915571*^9},
 CellLabel->
  "Out[817]=",ExpressionUUID->"14347067-2a66-45cc-a3e9-d040b76e0b8c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal Subalgebras", "Subsection",
 CellChangeTimes->{{3.876839111747636*^9, 3.87683911828273*^9}, {
  3.8769140273273373`*^9, 
  3.87691405384382*^9}},ExpressionUUID->"91a0a829-e466-4891-be4d-\
54260812a415"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$MaximalSubAlgebraSimple\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalSubAlgebraSimple", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalSubAlgebraSimple", "::", "input"}], "=", 
    "\"\<parentAlg: simple Lie algebra s.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalSubAlgebraSimple", "::", "output"}], "=", 
   "\"\<list of inequivalent maximal subalgebras of s with projection matrix \
in the format {{s,{child1,child2,...},Projection matrix},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalSubAlgebraSimple", "::", "description"}], "=", 
    "\"\<Returns a list of inequivalent maximal subalgebras of s with \
projection matrices.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MaximalSubAlgebraSimple", "[", "parentAlg_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "maxEmbeddList", ",", "parentRank", ",", "childRankList", ",", "algList",
       ",", "specialEmbeddtemp", ",", "specialEmbedd"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "generate", " ", "list", " ", "of", " ", "maximal", " ", "embeddings", 
      " ", "into", " ", "at", " ", "most", " ", "parentAlg"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"parentRank", "=", 
      RowBox[{"Flocci$Rank", "[", "parentAlg", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"generate", " ", "regular", " ", "embeddings"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddList", "=", 
      RowBox[{"Flocci$MaximalRegularEmbeddings", "[", "parentAlg", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"//", "Timing"}], "//", 
       RowBox[{
       "Flocci$Timing", "[", "\"\<MaximalSubAlgebraSimple: regular\>\"", 
        "]"}]}], "*)"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"generate", " ", "special", " ", "embeddings"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Flocci$classicalQ", "[", "parentAlg", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"specialEmbeddtemp", "=", 
         RowBox[{"Flocci$SpecialEmbeddings", "[", 
          RowBox[{
           RowBox[{"Flocci$WeightSystem", "[", 
            RowBox[{
             RowBox[{"{", "parentAlg", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"PadRight", "[", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", "parentRank"}], "]"}], "}"}]}], 
            "]"}], ",", "False"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"//", "Timing"}], "//", 
          RowBox[{
          "Flocci$Timing", "[", "\"\<MaximalSubAlgebraSimple: special\>\"", 
           "]"}]}], "*)"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"specialEmbedd", "=", 
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
           "Flocci$ApplyChildOutAutomorphisms", ",", "specialEmbeddtemp"}], 
           "]"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"//", "Timing"}], "//", 
          RowBox[{
          "Flocci$Timing", "[", 
           "\"\<MaximalSubAlgebraSimple: unique special\>\"", "]"}]}], "*)"}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Add", " ", "special", " ", "embeddings", " ", "for", " ", 
          "exceptional", " ", "algebras"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Flocci$TypeG2Q", "[", "parentAlg", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"specialEmbedd", "=", "Flocci$SpecialEmbeddG2"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$TypeF4Q", "[", "parentAlg", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"specialEmbedd", "=", "Flocci$SpecialEmbeddF4"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$TypeE6Q", "[", "parentAlg", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"specialEmbedd", "=", "Flocci$SpecialEmbeddE6"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$TypeE7Q", "[", "parentAlg", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"specialEmbedd", "=", "Flocci$SpecialEmbeddE7"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$TypeE8Q", "[", "parentAlg", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"specialEmbedd", "=", "Flocci$SpecialEmbeddE8"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Delete", " ", "equivalent", " ", "ones"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddList", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"maxEmbeddList", ",", 
        RowBox[{"Select", "[", 
         RowBox[{"specialEmbedd", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", "parentAlg"}], 
           "&"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Delete", " ", "equivalent", " ", "ones"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddList", "=", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"maxEmbeddList", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}]}], "]"}], "[", 
       
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "maxEmbeddList", "]"}]}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzWkowwEABfARRaEl2WrKMeRocyZzZQizRQk5wyKK2D44QkaZM0KIWo65
ipmWJNlay7Uk0gqF1YTkjghh/u//4fX78l7PXVidXmpJoVCYRODsWe554+UD
N2PT1aqJcMiL7QBL6hg0OKtpYMLAgUxv6LRaFAzjqsdCoLx+mkPuVmQp8O6x
PB1aF9rlw1SFaxWkDv00wdtPQQ/ZqzD2QqsJziAUvneMQH9jgAyygnhy8u+r
cBnqEse18Nog3YGeYoUBDusPTuGaSXIOm9WsYQmhjZkxCi9W32gthO2iKzoM
Fm7YTxCqCuKpkJp83Q9j4j3m4FxlmRI6BOatwV8pXw3d7LQaGOW1ooOR9mFb
cO8vYA+yFQuHUBN+dAGNfPkz1BczPuDN8S5pqFhlMUnI07AcoTNz2xmG3T/R
4Kl4nQEF86OesGZJGQrbcr9Jm128I6DcVk+axX/lwtbOswTYLSoSwL6TR9LX
F1kGjC0wZ0MfkyhygbDBXJ8E/Sa1OdBRVZEPeWUzNfApuqsW+qZN7cNe+iLp
Pyp7Qp4=
  "],
 CellLabel->
  "In[551]:=",ExpressionUUID->"db452633-1f40-454b-b382-44dba54584d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$MaximalSubAlgebraSS\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalSubAlgebraSS", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalSubAlgebraSS", "::", "input"}], "=", 
    "\"\<parentAlg: semi-simple Lie algebra {s1,s2,...}.\>\""}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MaximalSubAlgebraSS", "::", "output"}], "=", 
   "\"\<list of inequivalent maximal subalgebras of s with projection matrix \
in the format {{{s1,s2,...},{child1,child2,...},Projection \
matrix},...}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MaximalSubAlgebraSS", "::", "description"}], "=", 
    "\"\<Returns a list of inequivalent maximal subalgebras of {s1,s2,...} \
with projection matrices.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MaximalSubAlgebraSS", "[", "parentAlg_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "maxEmbeddtemp", ",", "maxEmbedd", ",", "maxEmbeddListstep1", ",", "i", 
      ",", "idList", ",", "currList", ",", "diagF", ",", "maxEmbeddList", ",",
       "A1Pos", ",", "maxEmbeddListstep2", ",", "doubles", ",", "doublesPos", 
      ",", "doub", ",", "maxEmbeddListstep3", ",", "RankList", ",", 
      "currMat"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "If", " ", "parentAlg", " ", "contains", " ", "only", " ", "one", " ", 
       "algebra"}], ",", " ", 
      RowBox[{
      "return", " ", "the", " ", "result", " ", "of", " ", 
       "Flocci$MaximalSubAlgebraSimple"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RankList", "=", 
      RowBox[{"Flocci$Rank", "[", "parentAlg", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "parentAlg", "]"}], "==", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Flocci$MaximalSubAlgebraSimple", "[", 
         RowBox[{"parentAlg", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "1.", " ", "consider", " ", "branching", " ", "of", " ", "one", " ", 
       "of", " ", "the", " ", "simple", " ", "factors"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"idList", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"parentAlg", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"parentAlg", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"Flocci$Rank", "[", 
            RowBox[{"parentAlg", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "parentAlg", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddListstep1", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"currList", "=", "idList"}], ";", 
              RowBox[{
               RowBox[{"currList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", "#"}], ";", "currList"}],
              ")"}], "&"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"parentAlg", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "===", "A1"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"A1", ",", 
                RowBox[{"{", "A1", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"{", "1", "}"}], "}"}]}], "}"}], "}"}], ",", 
             RowBox[{"Flocci$MaximalSubAlgebraSimple", "[", 
              RowBox[{"parentAlg", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "parentAlg", "]"}]}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"diagF", "=", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", 
          RowBox[{"{", "##", "}"}]}], "]"}], "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Reassamble", " ", "embeddings"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddListstep1", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"diagF", "@@", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}], "&"}], ",", 
        "maxEmbeddListstep1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"2.", " ", "Delete", " ", 
       RowBox[{"A1", "'"}], "s"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"A1Pos", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"parentAlg", ",", "A1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "A1Pos", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"maxEmbeddListstep2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"parentAlg", ",", 
            RowBox[{"Delete", "[", 
             RowBox[{"parentAlg", ",", 
              RowBox[{"A1Pos", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"Total", "[", "RankList", "]"}], "]"}], ",", 
              RowBox[{"A1Pos", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "A1Pos", "]"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"maxEmbeddListstep2", "=", 
        RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3.", " ", "Diagonal", " ", "Embeddings"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"doubles", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Tally", "@", "parentAlg"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", 
           RowBox[{"n_", "/;", 
            RowBox[{"n", ">", "1"}]}]}], "}"}], ":>", "x"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddListstep3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"doublesPos", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"Subsets", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"parentAlg", ",", "doub"}], "]"}], "]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"currMat", "=", 
          RowBox[{"Join", "@@", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"doublesPos", ",", "i"}], "]"}]}], ",", 
                 RowBox[{"PadRight", "[", 
                  RowBox[{
                   RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Total", "[", "RankList", "]"}]}], "}"}]}], "]"}],
                  ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "==", 
                    RowBox[{"doublesPos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"ArrayFlatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"PadLeft", "[", 
                    RowBox[{
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    RowBox[{"doublesPos", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}], 
                    "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RankList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Total", "[", "RankList", "]"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "parentAlg", "]"}]}], "}"}]}], "]"}], 
             ",", "Null"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"parentAlg", ",", 
           RowBox[{"Delete", "[", 
            RowBox[{"parentAlg", ",", 
             RowBox[{"doublesPos", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "currMat"}], 
          "}"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"doub", ",", "doubles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"maxEmbeddtemp", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Flocci$CanonicalizeEmbedding", ",", 
         RowBox[{"Join", "[", 
          RowBox[{
          "maxEmbeddListstep1", ",", "maxEmbeddListstep2", ",", 
           "maxEmbeddListstep3"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxEmbedd", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Map", "[", 
        RowBox[{"Flocci$ApplyChildOutAutomorphisms", ",", "maxEmbeddtemp"}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"maxEmbedd", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}]}], "]"}], "[", 
       
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8769144825066833`*^9, 3.876914560996601*^9}, 
   3.876933312855103*^9, {3.8769333680355577`*^9, 3.87693362385004*^9}, {
   3.8769337186764107`*^9, 3.876933741054495*^9}, {3.876933772281254*^9, 
   3.876933794298932*^9}, {3.876935419640462*^9, 3.876935461600553*^9}, {
   3.876935517186953*^9, 3.876935550037229*^9}, {3.876935857193056*^9, 
   3.876935933940342*^9}, {3.8769359758564034`*^9, 3.8769359858694267`*^9}, {
   3.8769362171590776`*^9, 3.876936378920649*^9}, {3.876936422603241*^9, 
   3.8769364332234507`*^9}, {3.876936561924205*^9, 3.8769366379861298`*^9}, {
   3.87693667388727*^9, 3.876936729133525*^9}, {3.876949865468318*^9, 
   3.8769498948906603`*^9}, 3.876949982910945*^9, {3.876950086533256*^9, 
   3.876950153473152*^9}, {3.876950272947083*^9, 3.876950275706346*^9}, {
   3.876950409389819*^9, 3.876950435225511*^9}, {3.876950474497758*^9, 
   3.8769505573617153`*^9}, {3.876950836944582*^9, 3.8769508931232157`*^9}, {
   3.8769510559274406`*^9, 3.876951058141418*^9}, {3.8769510950739717`*^9, 
   3.87695116569744*^9}, {3.876951254920719*^9, 3.876951341274927*^9}, {
   3.876951387894329*^9, 3.876951393285918*^9}, {3.8769514465080748`*^9, 
   3.87695147137432*^9}, {3.87695151880587*^9, 3.876951541894415*^9}, 
   3.876952180498205*^9, {3.876952531461917*^9, 3.8769525542271023`*^9}, {
   3.876952708968218*^9, 3.876952724825235*^9}, {3.876952765806677*^9, 
   3.876952900394114*^9}, {3.8769533548946733`*^9, 3.876953407050076*^9}, {
   3.876953437946866*^9, 3.876953443340166*^9}, {3.876953598861692*^9, 
   3.87695361868434*^9}, {3.8769536513779583`*^9, 3.876953741000022*^9}, {
   3.8769537720944347`*^9, 3.876953825288109*^9}, {3.876992399552951*^9, 
   3.876992422940606*^9}, {3.876992458188264*^9, 3.8769924704703617`*^9}, {
   3.876993351579368*^9, 3.8769933987715673`*^9}, {3.876993459723081*^9, 
   3.876993719810766*^9}, {3.8769937591297197`*^9, 3.8769938460532913`*^9}, {
   3.876993898953292*^9, 3.876993981980997*^9}, {3.876994067457221*^9, 
   3.8769941638428497`*^9}, {3.876994228098199*^9, 3.876994228681566*^9}, {
   3.876994311763558*^9, 3.87699433414844*^9}, {3.876994593990782*^9, 
   3.876994656324951*^9}, {3.8769947959500723`*^9, 3.876994826323241*^9}, {
   3.876995477850031*^9, 3.876995520611796*^9}, {3.8769955584464493`*^9, 
   3.876995596428787*^9}, {3.8769956930747633`*^9, 3.876995694553556*^9}, {
   3.8769967640386133`*^9, 3.8769967882562447`*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"7a934e3c-2a34-489c-b239-a2360f2c488c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$CanonicalizeEmbedding\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CanonicalizeEmbedding", "::", "tag"}], "=", 
   "\"\<Embed\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$CanonicalizeEmbedding", "::", "input"}], "=", 
    "\"\<embedd: embedding of the form \
{parentAlg,{child1,child2,...},projection matrix}.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CanonicalizeEmbedding", "::", "output"}], "=", 
   "\"\<{parentAlg,{child1,child2,...},projection matrix} with child algebra \
lexicographically sorted and projection matrix adjusted.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$CanonicalizeEmbedding", "::", "description"}], "=", 
    "\"\<Sorts the child algebras lexicographically and adjusts the \
projection matrix accordingly.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$CanonicalizeEmbedding", "[", "embedd_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sortList", ",", "indexList", ",", "algList", ",", "i", ",", 
      "rankList"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"algList", "=", 
      RowBox[{"embedd", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rankList", "=", 
      RowBox[{"Flocci$Rank", "[", "algList", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sortList", "=", 
      RowBox[{"Ordering", "[", "algList", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"indexList", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"rankList", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "]"}], "+", "1"}], 
            ",", 
            RowBox[{"Total", "[", 
             RowBox[{"rankList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "sortList", "]"}]}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "sortList", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"embedd", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"algList", "[", 
         RowBox[{"[", "sortList", "]"}], "]"}], ",", 
        RowBox[{"embedd", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "indexList"}], "]"}], "]"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8769373295216084`*^9, 3.876937348892803*^9}, {
  3.876937524133937*^9, 3.876937646984241*^9}, {3.876937694076818*^9, 
  3.8769378467060633`*^9}, {3.87694949128374*^9, 3.876949563919855*^9}, {
  3.8769496425702477`*^9, 3.8769496687192297`*^9}, {3.876949769784511*^9, 
  3.876949774785*^9}, {3.87694991359124*^9, 3.876949914039529*^9}, {
  3.8769968358054943`*^9, 3.876996985128718*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"cd336687-f058-48e7-b6aa-b52032ec05e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minimal super-algebras", "Subsection",
 CellChangeTimes->{{3.867737933353322*^9, 3.867737946704221*^9}, {
  3.868080646127039*^9, 
  3.868080651040318*^9}},ExpressionUUID->"6ffcc5bb-05f9-454b-bcd0-\
28618ba77e5b"],

Cell["\<\
Given a gt it outputs all maximal \\rho: gt -> g. I.e. we want minimal super \
algebra
We need \\rho up to outer-automorphism, so not \\rho and o.\\rho with o \
outer, just \\rho.\
\>", "Text",
 CellChangeTimes->{{3.868004562225428*^9, 3.8680046089397917`*^9}, {
  3.868005057000002*^9, 
  3.86800506196836*^9}},ExpressionUUID->"9be2fed4-a175-4525-bfaf-\
f20bbd643887"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$MinimalSupAlgebras\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MinimalSupAlgebras", "::", "tag"}], "=", "\"\<Embed\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MinimalSupAlgebras", "::", "input"}], "=", 
    "\"\<gt: algebra in format {s1,s2,...}.\>\""}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MinimalSupAlgebras", "::", "output"}], "=", 
   "\"\<list of minimal superalgebras and projection matrix in the format \
{{parent,projection matrix},...}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MinimalSupAlgebras", "::", "description"}], "=", 
   "\"\<This takes in a gt, and a list of maximal embeddings into simple Lie \
algebras. It outputs the corresponding list of minimal super-algebras of \
gt.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MinimalSupAlgebras", "::", "clear"}], "=", "\"\<3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$MinimalSupAlgebras", "[", 
    RowBox[{"gt_", ",", "maxlist_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Flocci$MinimalSupAlgebras", "[", 
     RowBox[{"gt", ",", "maxlist"}], "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "maximal", ",", "ranklist", ",", "rank", ",", "g", ",", " ", 
        "\[CapitalLambda]", ",", "\[CapitalLambda]identity", ",", 
        "\[CapitalLambda]p", ",", "format", ",", "gtmaxlist", ",", "si", ",", 
        "\[CapitalLambda]i", ",", "subsets", ",", "gsub", ",", "gsubind", ",",
         "gsubSorted", ",", "\[CapitalLambda]sub", ",", 
        "\[CapitalLambda]mPart", ",", "id", ",", "out"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "This", " ", "assumes", " ", "that", " ", "gt", " ", "is", " ", 
        "sorted"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"maximal", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ranklist", "=", 
        RowBox[{"Flocci$Rank", "[", "gt", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rank", "=", 
        RowBox[{"Total", "[", "ranklist", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[CapitalLambda]identity", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"ranklist", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
                RowBox[{
                "ranklist", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{
             "ranklist", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"ranklist", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
                RowBox[{
                "ranklist", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "ranklist", "]"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"Step", ":", " ", 
          RowBox[{
          "We", " ", "define", " ", "a", " ", "function", " ", "which", " ", 
           "formats", " ", "our", " ", "pair", " ", 
           RowBox[{"(", 
            RowBox[{"g", ",", "\[CapitalLambda]"}], ")"}], " ", "which", " ", 
           "defines", " ", "the", " ", "minimal", " ", "super", " ", 
           RowBox[{"algebra", "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"format", "[", 
         RowBox[{"g_", ",", "\[CapitalLambda]p_"}], "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gsort", ",", " ", "\[CapitalLambda]psort"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"gsort", "=", 
            RowBox[{"Sort", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[CapitalLambda]psort", "=", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{
                  "\[CapitalLambda]p", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"gsort", ",", 
             RowBox[{"Map", "[", 
              RowBox[{"Flatten", ",", 
               RowBox[{"Transpose", "[", "\[CapitalLambda]psort", "]"}]}], 
              "]"}]}], "}"}]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"I", "'"}], "m", " ", "confused", " ", "why", " ", "I", 
           " ", 
           RowBox[{"don", "'"}], "t", " ", "have", " ", "a", " ", "transpose",
            " ", "here"}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{"Step", ":", " ", 
           RowBox[{
           "We", " ", "include", " ", "in", " ", "our", " ", "list", " ", 
            "the", " ", "embedding", " ", "gt"}]}], "\[Rule]", 
          RowBox[{
           RowBox[{"gt", "+", 
            RowBox[{"A1", " ", "where", " ", "gt"}]}], "\[Rule]", 
           RowBox[{"A1", " ", "is", " ", "the", " ", "zero", " ", 
            RowBox[{"map", "."}]}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"gt", ",", "A1"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalLambda]p", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"\[CapitalLambda]identity", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"rank", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"maximal", ",", 
         RowBox[{"format", "[", 
          RowBox[{"g", ",", "\[CapitalLambda]p"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{"Step", ":", " ", 
            RowBox[{
            "Let", " ", "s", " ", "be", " ", "a", " ", "simple", " ", "ideal",
              " ", "in", " ", 
             RowBox[{"gt", ".", " ", "Then"}], " ", "we", " ", "include", " ",
              "in", " ", "our", " ", "list", " ", "the", " ", "embedding", 
             " ", "gt"}]}], "\[Rule]", 
           RowBox[{"gt", "+", "s"}]}], ",", " ", 
          RowBox[{
           RowBox[{"where", " ", "s"}], "\[Rule]", 
           RowBox[{"s", "+", 
            RowBox[{"s", " ", "is", " ", "the", " ", "diagonal", " ", 
             RowBox[{"embedding", "."}]}]}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"gt", ",", " ", 
             RowBox[{
             "gt", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalLambda]p", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"\[CapitalLambda]identity", ",", 
             RowBox[{
             "\[CapitalLambda]identity", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"maximal", ",", 
            RowBox[{"format", "[", 
             RowBox[{"g", ",", "\[CapitalLambda]p"}], "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", 
           RowBox[{"Length", "[", "gt", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"For", " ", "each", " ", "sit", " ", "in", " ", "gt"}], ",", 
         " ", 
         RowBox[{
         "which", " ", "sits", " ", "maximally", " ", "in", " ", "si"}], ",", 
         " ", 
         RowBox[{
         "then", " ", "g", " ", "has", " ", "sit", " ", "replaced", " ", 
          "with", " ", 
          RowBox[{"si", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Taking", " ", "a", " ", "subset", " ", 
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], " ", "of", " ", 
          "simple", " ", "ideals", " ", "of", " ", "gt"}], ",", " ", 
         RowBox[{
          RowBox[{
          "and", " ", "asking", " ", "if", " ", "there", " ", "is", " ", "a", 
           " ", "maximal", " ", "embedding", " ", 
           RowBox[{"{", 
            RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}]}], "\[Rule]", " ", 
          RowBox[{"M", " ", "for", " ", "some", " ", "simple", " ", 
           RowBox[{"M", ".", "\[IndentingNewLine]", "If"}], " ", "there", " ",
            "is"}]}], ",", " ", 
         RowBox[{"then", " ", "replacing", " ", 
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], " ", "in", " ", "gt", 
          " ", "with", " ", "M", " ", "gives", " ", "a", " ", "maximal", " ", 
          
          RowBox[{"embedding", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"Step", ":"}],
         FontColor->RGBColor[1, 0.5, 0.5]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"subsets", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "gt", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">", " ", "0"}], " ", "&"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "We", " ", "need", " ", "subsets", " ", "of", " ", "indices"}], ",", 
         " ", 
         RowBox[{
         "rather", " ", "thne", " ", "subsets", " ", "of", " ", "the", " ", 
          "algebras", " ", "themselves"}], ",", " ", 
         RowBox[{"as", " ", "this", " ", "is", " ", "on", " ", "gt"}], ",", 
         " ", "and"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"gsub", "=", 
           RowBox[{
           "gt", "\[LeftDoubleBracket]", "sub", "\[RightDoubleBracket]"}]}], 
          " ", ";", "\[IndentingNewLine]", 
          RowBox[{"gtmaxlist", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"maxlist", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "]"}], "\[Equal]", 
               RowBox[{"Sort", "[", "gsub", "]"}]}], "&"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"I", "'"}], "m", " ", "assuming", " ", "that", " ", 
              "maxlist", " ", "has", " ", "two", " ", "embeddings", " ", 
              "for", " ", "each", " ", 
              RowBox[{"e", ".", "g", ".", " ", "A1x"}], " ", "A1"}], 
             "\[Rule]", " ", "D4"}], ",", " ", 
            RowBox[{
            "which", " ", "are", " ", "inequivelent", " ", "on", " ", 
             "swapping"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"gsubind", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "gsub", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "sub", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "sub", "]"}]}], "}"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"gsubSorted", "=", 
              RowBox[{"SortBy", "[", 
               RowBox[{"gsubind", ",", "\[IndentingNewLine]", 
                RowBox[{"Function", "[", 
                 RowBox[{"s", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    "m", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], 
                   "\[LeftDoubleBracket]", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"gsubind", ",", " ", 
                    RowBox[{"Function", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{
                    RowBox[{
                    "p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "==", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ",", "s"}],
                     "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "This", " ", "sorts", " ", "gsubind", " ", "to", " ", "match", 
                " ", "the", " ", "ordering", " ", "of", " ", 
                RowBox[{
                "m", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                ",", " ", 
               RowBox[{
                RowBox[{"for", " ", "example", " ", "if", " ", 
                 RowBox[{
                 "m", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "=", 
                RowBox[{"{", 
                 RowBox[{"A1", ",", "A2", ",", "A1"}], "}"}]}], ",", " ", 
               RowBox[{
                RowBox[{"then", " ", "gsubSorted"}], "=", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["A", "1"], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["A", "2"], ",", "3"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["A", "1"], ",", "2"}], "}"}]}], "}"}], " ", 
                 "or", " ", "similar"}]}]}], "*)"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"\[CapitalLambda]mPart", "=", " ", 
              RowBox[{"TakeList", "[", 
               RowBox[{
                RowBox[{
                "m", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{"Flocci$Rank", "[", 
                 RowBox[{
                 "m", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 "]"}]}], "]"}]}], ";", 
             RowBox[{"(*", 
              RowBox[{"We", " ", "want", " ", "to", " ", "partition", " ", 
               RowBox[{
               "m", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               " ", "into", " ", "rows", " ", "for", " ", "each", " ", 
               "seperate", " ", "simple", " ", "ideal", " ", "of", " ", "the",
                " ", 
               RowBox[{"subalgebra", "."}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "We", " ", "now", " ", "want", " ", "to", " ", "from", " ", 
               "our", " ", "new", " ", "part", " ", "of", " ", "the", " ", 
               "projection", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"\[CapitalLambda]i", "=", 
              RowBox[{"Join", "@@", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"sub", ",", "r"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"id", "=", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"gsubSorted", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "r"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    "\[CapitalLambda]mPart", "\[LeftDoubleBracket]", "id", 
                    "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Flocci$Rank", "[", 
                    RowBox[{
                    "gt", "\[LeftDoubleBracket]", "r", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{
                    "m", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "gt", "]"}], "]"}]}], "}"}]}], 
                "]"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"g", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"gt", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", "#", "}"}], "&"}], ",", "sub"}], "]"}]}], 
                 "]"}], ",", 
                RowBox[{
                "m", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"\[CapitalLambda]p", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"\[CapitalLambda]identity", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", "#", "}"}], "&"}], ",", "sub"}], "]"}]}], 
                 "]"}], ",", "\[CapitalLambda]i"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"maximal", ",", 
               RowBox[{"format", "[", 
                RowBox[{"g", ",", "\[CapitalLambda]p"}], "]"}]}], "]"}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "gtmaxlist"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"sub", ",", "subsets"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"Step", ":", " ", 
          RowBox[{
          "We", " ", "remove", " ", "any", " ", "embedding", " ", "which", 
           " ", "is", " ", "an", " ", 
           RowBox[{"automorphism", "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maximal", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"maximal", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "===",
               "gt"}], ")"}]}], " ", "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{"Step", ":", " ", 
           RowBox[{
           "The", " ", "code", " ", "below", " ", "puts", " ", 
            "\[CapitalLambda]\[Rho]", " ", "into", " ", "a", " ", "unique", 
            " ", 
            RowBox[{"form", ".", " ", "As"}], " ", "long", " ", "as", " ", 
            "the", " ", "inputed", " ", "list", " ", "of", " ", "maximal", 
            " ", "algebras", " ", "is", " ", "in", " ", "this", " ", 
            "form"}]}], ",", " ", "however", ",", " ", 
          RowBox[{"I", " ", 
           RowBox[{"don", "'"}], "t", " ", "think", " ", "we", " ", "get", 
           " ", "any", " ", "duplicates", " ", "so", " ", "we", " ", "can", 
           " ", "ignore", " ", "this", " ", 
           RowBox[{"step", "."}]}]}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"Flocci$Unique\[CapitalLambda]\[Rho]", "[", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], " ", "&"}], 
            ",", "maximal"}], "]"}], "//", "DeleteDuplicates"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "maximal"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867743397163224*^9, 3.867743475728792*^9}, {
   3.867743508477886*^9, 3.867743516389483*^9}, {3.8677435878062277`*^9, 
   3.8677436167166023`*^9}, {3.867743652038116*^9, 3.8677436577171707`*^9}, {
   3.86774372029305*^9, 3.867743729320381*^9}, {3.86774997778377*^9, 
   3.867749993128002*^9}, {3.867750185690919*^9, 3.8677501878605347`*^9}, {
   3.8677511907288437`*^9, 3.867751229347446*^9}, {3.867915015161618*^9, 
   3.867915060992762*^9}, {3.867924475868746*^9, 3.8679245626862993`*^9}, {
   3.867924641037867*^9, 3.8679247048768*^9}, {3.867925065607194*^9, 
   3.8679251105340023`*^9}, {3.868004672629697*^9, 3.868004689805434*^9}, {
   3.868004722744577*^9, 3.868004791547892*^9}, {3.868090032267454*^9, 
   3.868090033128014*^9}, {3.86809011140053*^9, 3.8680901373997793`*^9}, {
   3.86809018503972*^9, 3.8680902494420233`*^9}, {3.8680902978076563`*^9, 
   3.8680903147876177`*^9}, {3.868090589694812*^9, 3.868090603912758*^9}, {
   3.8680906430019407`*^9, 3.8680906478678427`*^9}, {3.868090716325107*^9, 
   3.868090716778304*^9}, {3.868090900762356*^9, 3.8680909766524143`*^9}, {
   3.868091148396184*^9, 3.868091155111939*^9}, {3.868091201593707*^9, 
   3.868091216080319*^9}, {3.868091503106793*^9, 3.868091510819331*^9}, 
   3.8680920021169977`*^9, {3.868092169062014*^9, 3.868092220051949*^9}, {
   3.868092342736906*^9, 3.868092348681394*^9}, {3.86809246245894*^9, 
   3.8680924721601753`*^9}, {3.8680925366510468`*^9, 3.868092568551908*^9}, {
   3.868092612154496*^9, 3.8680926171303596`*^9}, {3.868092647219397*^9, 
   3.8680926512848673`*^9}, {3.868092681852104*^9, 3.8680929602608957`*^9}, {
   3.8680930341757936`*^9, 3.868093036865052*^9}, {3.868093096139433*^9, 
   3.8680931055524073`*^9}, {3.868093285961933*^9, 3.8680932882264957`*^9}, {
   3.868093358936508*^9, 3.86809339163361*^9}, {3.868093473114993*^9, 
   3.868093498984989*^9}, {3.868355204485565*^9, 3.868355280264187*^9}, {
   3.8683553318373528`*^9, 3.868355373244467*^9}, {3.868355477605838*^9, 
   3.868355560446138*^9}, {3.8683556070179243`*^9, 3.8683556144380713`*^9}, {
   3.868355644502977*^9, 3.8683556896762123`*^9}, 3.868355749284553*^9, {
   3.868355792808441*^9, 3.8683559427381268`*^9}, {3.868356025635358*^9, 
   3.8683561534911337`*^9}, {3.86835621487006*^9, 3.868356220442041*^9}, 
   3.868356392643219*^9, {3.868356427569757*^9, 3.868356511888253*^9}, 
   3.868356584654538*^9, {3.868435604597666*^9, 3.8684356657389297`*^9}, 
   3.86843957341348*^9, {3.868444445004899*^9, 3.86844444982478*^9}, {
   3.8684494133682632`*^9, 3.868449428924405*^9}, {3.868627807438199*^9, 
   3.8686278316580257`*^9}, {3.8686309033066673`*^9, 3.868630919190178*^9}, {
   3.868697915008852*^9, 3.868697943566584*^9}, {3.869840211021031*^9, 
   3.869840212381023*^9}, {3.875249307076847*^9, 3.875249310029056*^9}, {
   3.8753413635735064`*^9, 3.8753413666105013`*^9}, 3.875341736388034*^9, {
   3.8756033148501053`*^9, 3.875603325825077*^9}, 3.875603442469419*^9, {
   3.875608395324545*^9, 3.87560840250432*^9}, 3.8768230392660847`*^9, {
   3.876824200401678*^9, 3.876824246547597*^9}, {3.876824296060658*^9, 
   3.8768243668414183`*^9}, {3.877420913905046*^9, 3.877420922297577*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"d0220bb5-9ed0-4ee6-b047-f25fc7b7672b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["U(1) factors ", "Section",
 CellChangeTimes->{{3.8737980634700613`*^9, 3.873798079149087*^9}, {
   3.873798489965427*^9, 3.8737984933638887`*^9}, 
   3.875603536423728*^9},ExpressionUUID->"768a87a2-95d3-4821-ba88-\
822ce71f4a30"],

Cell[CellGroupData[{

Cell["Permutations", "Subsection",
 CellChangeTimes->{{3.873798135974834*^9, 
  3.87379813857388*^9}},ExpressionUUID->"6fb02cb4-3066-410c-90b1-\
f6a34acdbfca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$PartitionsWithinBlocks\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PartitionsWithinBlocks", "::", "tag"}], "=", 
   "\"\<U1\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PartitionsWithinBlocks", "::", "input"}], "=", 
   "\"\<vecIn: A lexicographically sorted 2-tensor e.g. \
{{1,-1},{2,-3},{4,-6}}.\\nblockParent: A 1-tensor e.g. {1,1,1}. \
\\nchildBlock: A 1-tensor e.g. {2,1}. \\nchildBlockRange: A 2-tensor e.g. \
{{1,2},{3,3}}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PartitionsWithinBlocks", "::", "output"}], "=", 
   "\"\<A 1-tensor of a stream of charges: \
{1,-1,2,-3,2,-3,1,-1,4,-6,8,2}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PartitionsWithinBlocks", "::", "description"}], "=", 
   "\"\<Finds inequivelent partitions within blocks. \nInequivelent \
permutations of vecIn are found within each childBlock. Permutations within \
blockParent are considered equivelent. The output is a stream of charges \
where permutations within each childBlock are placed next to each \
other.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PartitionsWithinBlocks", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vecIn", ",", "_Integer", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"blockParent", ",", "_Integer", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"childBlock", ",", "_Integer", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"childBlockRange", ",", "_Integer", ",", "2"}], "}"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        StyleBox[
         RowBox[{
         "The", " ", "input", " ", "to", " ", "this", " ", "code", " ", 
          RowBox[{"is", ":", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"A", " ", "2"}], "-", 
            RowBox[{"tensor", " ", "vecIn", " ", 
             RowBox[{"e", ".", "g", ".", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", 
                  RowBox[{"-", "3"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", 
                  RowBox[{"-", "6"}]}], "}"}]}], "}"}], ".", " ", "This"}], 
             " ", "is", " ", "the", " ", "thing", " ", "we", " ", "want", " ",
              "to", " ", 
             RowBox[{"permute", ".", " ", "It"}], " ", "is", " ", "assumed", 
             " ", "this", " ", "is", " ", "sorted", " ", 
             RowBox[{"lexicographically", ".", "\[IndentingNewLine]", "A"}], 
             " ", "1"}], "-", 
            RowBox[{"tensor", " ", "blockParent", " ", 
             RowBox[{"e", ".", "g", ".", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], ".", " ", 
              "Permutations"}], " ", "within", " ", "these", " ", "blocks", 
             " ", "are", " ", "considered", " ", "equivelent"}]}]}]}],
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[",",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 1]], 
        RowBox[{
         StyleBox[
          RowBox[{"and", " ", "we", " ", "only", " ", "output", " ", 
           RowBox[{"one", ".", "\[IndentingNewLine]", "A"}], " ", "1"}],
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["-",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"tensor", " ", "blockChild", " ", 
           RowBox[{"e", ".", "g", ".", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}], ".", " ", "Permutations"}], " ", 
           "within", " ", "these", " ", "blocks", " ", "are", " ", 
           "considered", " ", 
           RowBox[{"seperatly", ".", " ", "\[IndentingNewLine]", "A"}], " ", 
           "2"}],
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["-",
          FontColor->RGBColor[1, 0, 1]], 
         RowBox[{
          StyleBox["tensor",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[
           RowBox[{"childBlockRange", ".", " ", "For"}],
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["the",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["above",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["example",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["this",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["would",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["be",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ".", " ", "It"}],
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["indicates",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["which",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["parent",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["blocks",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["sit",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["in",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["which",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["child",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[
           RowBox[{
           "blocks", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "The"}],
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["output",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["for",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["the",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["above",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["example",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          RowBox[{
           StyleBox["is",
            FontColor->RGBColor[1, 0, 1]], 
           StyleBox[":",
            FontColor->RGBColor[1, 0, 1]], 
           StyleBox[" ",
            FontColor->RGBColor[1, 0, 1]], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "2", ",", 
              RowBox[{"-", "3"}], ",", "2", ",", 
              RowBox[{"-", "3"}], ",", "1", ",", 
              RowBox[{"-", "1"}], ",", "4", ",", 
              RowBox[{"-", "6"}], ",", "8", ",", "2"}], "}"}], "."}]}]}]}]}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "accChild", ",", "vecList", ",", "lengthPerChild", ",", "vec", ",", 
          "vecdim1", ",", "vecdim2", ",", "counter", ",", "blocksizes", ",", 
          "acc", ",", "vecold", ",", "currentParentBlock", ",", "parentZero", 
          ",", "parentEndp1", ",", "posInParent", ",", "posToSwap", ",", 
          "vecnew", ",", "vecnew2", ",", "posToSwapStartP1", ",", 
          "posSorting"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"accChild", "=", 
          RowBox[{"Accumulate", "[", "childBlock", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vecList", "=", 
          RowBox[{"Internal`Bag", "@", 
           RowBox[{"Most", "[", 
            RowBox[{"{", "0", "}"}], "]"}]}]}], ";", " ", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "This", " ", "will", " ", "contain", " ", "our", " ", "stream", 
            " ", "of", " ", "charges"}],
           FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"lengthPerChild", "=", 
          RowBox[{"Internal`Bag", "@", 
           RowBox[{"Most", "[", 
            RowBox[{"{", "0", "}"}], "]"}]}]}], ";", " ", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
            RowBox[{
            "This", " ", "will", " ", "contain", " ", "a", " ", "list", " ", 
             "of", " ", "how", " ", "long", " ", "each", " ", "stream", " ", 
             "is"}], ",", " ", 
            RowBox[{"for", " ", "a", " ", "given", " ", "child"}]}],
           FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"vecdim2", "=", 
          RowBox[{"Length", "[", 
           RowBox[{
           "vecIn", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "have", " ", "a", " ", "large", " ", "loop", " ", 
             "over", " ", "the", " ", "child", " ", 
             RowBox[{"blocks", ".", " ", "Since"}], " ", "these", " ", "are", 
             " ", "considered", " ", 
             RowBox[{"seperatly", "."}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "extract", " ", "the", " ", "corresponding", " ", 
             "part", " ", "of", " ", "vecIn", " ", "for", " ", "this", " ", 
             RowBox[{"child", "."}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"vec", "=", 
             RowBox[{"Take", "[", 
              RowBox[{"vecIn", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"currentChild", "\[Equal]", "1"}], ",", "1", ",", 
                   RowBox[{
                    RowBox[{"accChild", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChild", "-", "1"}], 
                    "\[RightDoubleBracket]"}], "+", "1"}]}], "]"}], ",", 
                 RowBox[{
                 "accChild", "\[LeftDoubleBracket]", "currentChild", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", " ", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
               RowBox[{"This", " ", "is", " ", "a", " ", "2"}], "-", 
               RowBox[{"tensor", "."}]}],
              FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
            
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
               RowBox[{
               "We", " ", "get", " ", "the", " ", "dimensions", " ", "of", 
                " ", 
                RowBox[{"vec", ".", " ", "This"}], " ", "helps", " ", "us", 
                " ", "keep", " ", "track", " ", "of", " ", "the", " ", 
                "counter"}], ",", " ", 
               RowBox[{"along", " ", "with", " ", 
                RowBox[{"vecdim2", "."}]}]}],
              FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"vecdim1", "=", 
             RowBox[{"Length", "[", "vec", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{"We", " ", "insert", " ", "vec", " ", "into", " ", 
               RowBox[{"vecList", ".", " ", "This"}], " ", "is", " ", "our", 
               " ", "first", " ", 
               RowBox[{"permutation", ".", " ", "We"}], " ", "also", " ", 
               "set", " ", "our", " ", "counter", " ", "as", " ", "the", " ", 
               "dimension", " ", "of", " ", "vec"}],
              FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Internal`StuffBag", "[", 
             RowBox[{"vecList", ",", "vec", ",", "2"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"counter", "=", "vecdim1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
              "We", " ", "exctract", " ", "the", " ", "blocks", " ", "for", 
               " ", "this", " ", "child", " ", 
               RowBox[{"algebra", ".", " ", "This"}], " ", "is", " ", "the", 
               " ", "reason", " ", "we", " ", "need", " ", "childBlockRange", 
               " ", "as", " ", "an", " ", 
               RowBox[{"input", "."}]}],
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"blocksizes", "=", 
             RowBox[{"Take", "[", 
              RowBox[{"blockParent", ",", 
               RowBox[{
               "childBlockRange", "\[LeftDoubleBracket]", "currentChild", 
                "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"acc", "=", 
             RowBox[{"Accumulate", "[", "blocksizes", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{"True", ",", 
              RowBox[{"(*", 
               StyleBox[
                RowBox[{
                "We", " ", "now", " ", "want", " ", "to", " ", "create", " ", 
                 "all", " ", "other", " ", 
                 RowBox[{"permutations", "."}]}],
                FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"vecold", "=", "vec"}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                  RowBox[{
                  "Starting", " ", "at", " ", "the", " ", "second", " ", 
                   "last", " ", "parent", " ", "block"}], ",", " ", 
                  RowBox[{"we", " ", "loop", " ", "through", " ", 
                   RowBox[{"them", "."}]}]}],
                 FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"currentParentBlock", "=", 
                RowBox[{"Length", "[", "blocksizes", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"--", "currentParentBlock"}], "\[GreaterEqual]", 
                  " ", "0"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "If", " ", "we", " ", "reach", " ", 
                    "currentParentBlock"}], "\[Equal]", "0"}], ",", " ", 
                    RowBox[{
                    "then", " ", "we", " ", "have", " ", "generated", " ", 
                    "all", " ", "permutations"}], ",", " ", 
                    RowBox[{"and", " ", "we", " ", "can", " ", 
                    RowBox[{"stop", "."}]}]}],
                   FontColor->RGBColor[1, 0, 1]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"currentParentBlock", "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"vec", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"parentZero", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentParentBlock", "==", "1"}], ",", "0", ",", 
                    
                    RowBox[{"acc", "\[LeftDoubleBracket]", 
                    RowBox[{"currentParentBlock", "-", "1"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                  StyleBox[
                   RowBox[{"(*", 
                    RowBox[{
                    "The", " ", "index", " ", "just", " ", "before", " ", 
                    "the", " ", "start", " ", "of", " ", "the", " ", 
                    "current", " ", "parent", " ", "block"}], "*)"}],
                   FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
                  RowBox[{"parentEndp1", "=", 
                   RowBox[{
                    RowBox[{
                    "blocksizes", "\[LeftDoubleBracket]", 
                    "currentParentBlock", "\[RightDoubleBracket]"}], "+", 
                    "parentZero", "+", "1"}]}], ";", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{
                    "The", " ", "index", " ", "just", " ", "after", " ", 
                    "the", " ", "end", " ", "of", " ", "the", " ", "current", 
                    " ", "parent", " ", "block"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "first", " ", 
                    "position", " ", "in", " ", "the", " ", "parent", " ", 
                    "algebra", " ", "which", " ", "can", " ", "be", " ", 
                    RowBox[{"advanced", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"posInParent", "=", 
                   RowBox[{"parentEndp1", "-", "1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"posInParent", "\[NotEqual]", " ", "parentZero"}],
                     "&&", 
                    RowBox[{"OrderedQ", "[", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"vecold", "\[LeftDoubleBracket]", 
                    RowBox[{"parentEndp1", "-", "1", "+", 
                    RowBox[{"blocksizes", "\[LeftDoubleBracket]", 
                    RowBox[{"currentParentBlock", "+", "1"}], 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    "vecold", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ",", 
                    RowBox[{"posInParent", "--"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"posInParent", "\[Equal]", "parentZero"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{"if", " ", "posInParent"}], "\[Equal]", 
                    RowBox[{
                    "parentZero", " ", "we", " ", "want", " ", "to", " ", 
                    "put", " ", "the", " ", "order", " ", "back", " ", "to", 
                    " ", "lexicographic", " ", "in", " ", "the", " ", 
                    "region", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"parentZero", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"vec", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"parentZero", "+", "1"}], ",", "vecdim1"}], "]"}],
                     "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"vec", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"parentZero", "+", "1"}], ",", "vecdim1"}], "]"}],
                     "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "Else", " ", "we", " ", "want", " ", "to", " ", "start", 
                    " ", "at", " ", "the", " ", "end", " ", "of", " ", 
                    "vec"}], ",", " ", 
                    RowBox[{
                    "and", " ", "the", " ", "first", " ", "element", " ", 
                    "we", " ", "can", " ", "advance", " ", 
                    RowBox[{"by", ".", " ", "This"}], " ", "is", " ", "the", 
                    " ", "smallest", " ", "element", " ", "which", " ", "is", 
                    " ", "larger", " ", "then", " ", 
                    RowBox[{
                    "vec", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}]}]}],
                    FontColor->RGBColor[1, 0, 1]], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"posToSwap", "=", "vecdim1"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"posToSwap", ">", "parentEndp1"}], "&&", 
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "vec", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"vec", "\[LeftDoubleBracket]", 
                    RowBox[{"posToSwap", "-", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "vec", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
                    RowBox[{"vec", "\[LeftDoubleBracket]", 
                    RowBox[{"posToSwap", "-", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                    RowBox[{"posToSwap", "--"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "want", " ", "to", " ", "rearange",
                     " ", "the", " ", "output"}],
                    FontColor->RGBColor[1, 0, 1]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"vecnew", "=", "vec"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "swap", " ", "posInParent", " ", "and", " ", 
                    "posToSwap"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "vec", "\[LeftDoubleBracket]", "posToSwap", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posToSwap", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "vec", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"vecnew2", "=", "vecnew"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "want", " ", "to", " ", "sort", 
                    " ", "collectively", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"posInParent", "+", "1"}], ",", 
                    RowBox[{"parentEndp1", "-", "1"}]}], "}"}], " ", "and", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"posToSwap", "+", "1"}], ",", "vecLen"}], "}"}]}],
                    
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"posSorting", "=", 
                    RowBox[{"++", "posInParent"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"posToSwapStartP1", "=", 
                    RowBox[{"++", "posToSwap"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"posSorting", "\[Equal]", "parentEndp1"}], ",", 
                    RowBox[{"posSorting", "=", "posToSwapStartP1"}]}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"posSorting", "\[NotEqual]", " ", 
                    RowBox[{"vecdim1", "+", "1"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"posInParent", "\[Equal]", "parentEndp1"}], "||", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"posToSwap", "\[NotEqual]", " ", 
                    RowBox[{"vecdim1", "+", "1"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posToSwap", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posToSwap", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "vecnew", "\[LeftDoubleBracket]", "posInParent", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "vecnew2", "\[LeftDoubleBracket]", "posSorting", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"vecnew", "\[LeftDoubleBracket]", 
                    RowBox[{"posToSwap", "++"}], "\[RightDoubleBracket]"}]}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "vecnew2", "\[LeftDoubleBracket]", "posSorting", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"vecnew", "\[LeftDoubleBracket]", 
                    RowBox[{"posInParent", "++"}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"++", "posSorting"}], ")"}], "\[Equal]", 
                    "parentEndp1"}], ",", 
                    RowBox[{"posSorting", "=", "posToSwapStartP1"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"vec", "=", "vecnew2"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{"We", " ", "save", " ", "the", " ", "new", " ", 
                  RowBox[{"permutation", "."}]}],
                 FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"vec", "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Internal`StuffBag", "[", 
                RowBox[{"vecList", ",", "vec", ",", "2"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"counter", "+=", "vecdim1"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
              "We", " ", "save", " ", "the", " ", "counter", " ", "for", " ", 
               "this", " ", "child"}],
              FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Internal`StuffBag", "[", 
             RowBox[{"lengthPerChild", ",", "counter"}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"currentChild", ",", "1", ",", 
             RowBox[{"Length", "[", "childBlock", "]"}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Internal`BagPart", "[", 
            RowBox[{"vecList", ",", "All"}], "]"}], ",", 
           RowBox[{"Internal`BagPart", "[", 
            RowBox[{"lengthPerChild", ",", "All"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PartitionsWithinBlocks", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "4", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], "]"}], "//", 
  "RepeatedTiming"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQff9SyLRLd944bmK2nA6inwm4zAXR7rtKwbSXAfMO
EG2kxXwGRPvuNb0AokPmdl0B0QHba26CaP32aWDaT3XpQxB95PWa1yB6v5Th
BxD981SG0mUgvcM+Uw1E60V7W4Popm55FxC92EbUE0S7VX72A6vjNw4C0bbb
26NAtIC1eiaIvhX8Jx9EhzwIKAPRa9LfV4PoKJaUGhB9JnZmC9jcnQ82gPkX
jXaBaOcT0/aB6P66l2dBtBzD5stguk/uJohmKnp/D0QXvXv3CERfmGXBcwVI
Z3EXCINogd2ZUiA6dVZ3Doi+3j4VTKcuN751HUjvy9gKpj8KrN/xB0h/eJ67
B0QLfC2NjLn/xrFg0iMwbXHjVEkJkH47J3ARiLbIzlJVfPDG8dOKb2B6fuR9
2aVAenfNX10QDQCOS/zd
  "],
 CellLabel->
  "In[576]:=",ExpressionUUID->"5b85745d-b1d5-4476-8b87-8833f781951d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"6.5989130434782`1.*^-6", ",", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "2", ",", "1", ",", "4", ",", "4", ",", "1"}], 
     "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.8739575825588083`*^9, 3.873957650513812*^9, 3.8739579993737803`*^9, 
   3.873958108638006*^9, 3.873958192997816*^9, 3.8739614578815413`*^9, 
   3.873961557408146*^9, 3.873971607321332*^9, 3.874063908491646*^9, 
   3.874575547625444*^9, 3.874583323011916*^9, 3.874583974988677*^9, 
   3.874584176305716*^9, 3.874584320034769*^9, 3.874588015261343*^9, 
   3.874661869478828*^9, 3.874718804130271*^9, 3.874735092403275*^9, 
   3.874995646052092*^9, 3.875005454537925*^9, 3.875021805304051*^9, 
   3.8750863223252172`*^9, 3.875086562220365*^9, 3.8750866101258917`*^9, 
   3.875086787905004*^9, 3.875174039728344*^9, 3.875177776603739*^9, 
   3.8751786099629183`*^9, 3.8752018897519617`*^9, 3.875249936377776*^9, {
   3.875251266570965*^9, 3.875251280684038*^9}, {3.875251469812922*^9, 
   3.875251475393853*^9}, 3.875339873927623*^9, 3.8753410185569077`*^9, 
   3.875595457127419*^9, 3.8755961280025663`*^9, 3.875597685741332*^9, 
   3.875598046146656*^9, 3.8756007669682198`*^9, 3.875601996459857*^9, 
   3.875602605774687*^9, 3.875603231299531*^9, 3.875604933768202*^9, 
   3.8756065174387217`*^9, 3.875606988951453*^9, 3.875608460221192*^9, 
   3.8756097237047663`*^9, 3.875610793486562*^9, 3.875681954156426*^9, 
   3.875683852037595*^9, 3.875687143257985*^9, 3.875687272352046*^9, 
   3.875687339523033*^9, 3.875687635368127*^9, 3.875771358088401*^9, 
   3.8758559237069073`*^9, 3.876488664947225*^9, 3.8765815101928377`*^9, 
   3.876582145089326*^9, 3.876583117443811*^9, 3.876583204298423*^9, 
   3.876644498799575*^9, 3.8768194091399403`*^9, 3.876820398140296*^9, 
   3.876824474920355*^9, 3.876827675953292*^9, 3.876926389186028*^9, 
   3.8769268187260933`*^9, 3.876929109095752*^9, 3.876997288489172*^9, 
   3.87699779138995*^9, 3.876998042221777*^9, 3.876998399554112*^9, 
   3.876998572926202*^9, 3.876999680780445*^9, 3.8769998543789387`*^9, 
   3.8770139071013317`*^9, 3.877069635837345*^9, 3.877069726143003*^9, 
   3.87707085621902*^9, 3.8770715778841343`*^9, 3.877073767977706*^9, 
   3.8770782246999197`*^9, 3.877079320030661*^9, 3.877096821449182*^9, 
   3.87709759109942*^9, 3.877154502896331*^9, 3.877156566200254*^9, 
   3.8774140723181*^9, 3.877415421833366*^9, 3.877415699833599*^9, 
   3.877416024228104*^9, 3.877417826453384*^9, 3.877418095911202*^9, 
   3.877420430424868*^9, 3.877420823681139*^9, 3.877421151028013*^9, 
   3.877421473542911*^9, 3.8777679512679358`*^9, 3.877768062544114*^9, 
   3.877768217398074*^9, 3.8777683509729557`*^9, 3.877768437384274*^9, 
   3.8777685346755857`*^9, 3.877770014045642*^9, 3.878025006028734*^9, 
   3.878025435544697*^9, 3.878029721976296*^9, 3.878030190140115*^9, 
   3.878051777350088*^9, 3.878052279619624*^9, 3.87805429118493*^9, 
   3.878054456322772*^9, 3.8789884815013313`*^9, 3.8793220753409023`*^9, 
   3.879327150963187*^9, 3.87932973171668*^9, 3.879833050414997*^9, 
   3.879835073140788*^9, 3.879848526035972*^9, 3.879848786276072*^9, 
   3.8798497192964487`*^9, 3.8798497839240627`*^9, 3.87984984831769*^9, 
   3.879849979432005*^9, 3.8798501196255293`*^9, 3.8798514714500647`*^9, 
   3.879857827326977*^9, 3.8798587131147346`*^9, 3.8798590978499937`*^9, 
   3.879863701250558*^9, 3.879938243010274*^9, 3.879949362070389*^9, 
   3.8799511785247173`*^9, 3.879951281199276*^9, 3.879953837683996*^9, 
   3.880189664692951*^9, 3.880213068522903*^9, 3.880213149513012*^9, 
   3.881486071265544*^9, 3.881492513670026*^9, 3.881492660481297*^9, 
   3.881493154406065*^9, 3.881493285408908*^9, 3.881494129510828*^9, 
   3.88252097696622*^9, 3.882539541275208*^9, 3.882541712715507*^9, 
   3.88285711091355*^9, 3.882858203054778*^9, 3.88306671154047*^9, 
   3.890728487233706*^9, 3.89072862818237*^9, 3.890804242313552*^9, 
   3.890804358140216*^9, 3.89080455495196*^9, 3.890804881014031*^9, 
   3.890811784873049*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"7640cd10-a01f-4296-a17b-8753712b8a63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$PermutationsWithinBlocks\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PermutationsWithinBlocks", "::", "tag"}], "=", 
   "\"\<U1\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PermutationsWithinBlocks", "::", "input"}], "=", 
   "\"\<cList) A 3-Tensor of charges where each element is a list \
Transpose[{c1,c2,...,cn}] e.g. { {{1,-1},{2,-3},{4,-6}}, \
{{2,-3},{1,-1},{4,-6}} }.\\nblockParent) A 1-tensor with lists of sizes of \
blocks e.g. {2,1}. \\nprependcharges) A 3-vector of charges to prepend e.g. \
{{{0,0}},{{1,1}}} of the same length as cList or {}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$PermutationsWithinBlocks", "::", "output"}], "=", 
    "\"\<A 3-tensor of integeres. For the example in the input: \
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"0\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"0\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"2\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"3\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"4\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"6\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"0\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"0\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"2\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"3\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"4\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"6\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"1\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"2\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"3\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\",\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"1\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"{\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"4\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\",\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"-\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"6\",FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",\
FontColor->GrayLevel[0.5]]\)\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\
\!\(\*StyleBox[\"}\",FontColor->GrayLevel[0.5]]\)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PermutationsWithinBlocks", "::", "description"}], "=", 
   "\"\<For each Ei in cList permutations in each block in blockParent are \
found. The charges in prependCharges are prepended to each \
permutation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PermutationsWithinBlocks", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cList", ",", "_Integer", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"blockParent", ",", "_Integer", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"prependCharges", ",", "_Integer", ",", "3"}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"The", " ", "input", " ", 
               RowBox[{"is", ":", "\[IndentingNewLine]", "1"}]}], ")"}], " ", 
             "A", " ", "list", " ", "of", " ", "charges", " ", 
             RowBox[{"e", ".", "g", ".", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], " ", "}"}]}]}], 
            "\[IndentingNewLine]", " ", "2"}], ")"}], " ", "A", " ", "list", 
          " ", "of", " ", "the", " ", "sizes", " ", "of", " ", "parent", " ", 
          "bocks", " ", 
          RowBox[{"e", ".", "g", ".", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], ".", " ", "It"}], " ", "is", " ", 
          "within", " ", "these", " ", "parent", " ", "blocks", " ", "which", 
          " ", "we", " ", "find", " ", 
          RowBox[{"permutations", ".", "\[IndentingNewLine]", "3"}]}], ")"}],
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["A",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["list",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["of",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["charges",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["which",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["should",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["be",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["prepend",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["onto",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["our",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       RowBox[{
        StyleBox["charges",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox["e",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox["g",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}],
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        StyleBox["The",
         FontColor->RGBColor[1, 0, 1]]}], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["output",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["for",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["the",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["above",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["example",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[
        RowBox[{"is", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}]}],
        FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cpos", ",", "cpos1", ",", "toAdvanceTo", ",", "cnew", ",", 
         "accParent", ",", "currentblockEnd", ",", "tobreak", ",", "cbag", 
         ",", "lengthPerCharge", ",", "counter"}], "}"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"accParent", "=", 
         RowBox[{"Accumulate", "[", "blockParent", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cbag", "=", 
         RowBox[{"Internal`Bag", "@", 
          RowBox[{"Most", "[", 
           RowBox[{"{", "0", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"counter", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cnew", "=", "c"}], ";", "\[IndentingNewLine]", 
           RowBox[{"counter", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"cnew", "\[NotEqual]", " ", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"-", "1"}], "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "prependCharges", "]"}], 
                 "\[NotEqual]", " ", "0"}], ",", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"cbag", ",", 
                  RowBox[{
                  "prependCharges", "\[LeftDoubleBracket]", "counter", 
                   "\[RightDoubleBracket]"}], ",", "2"}], "]"}]}], "]"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Internal`StuffBag", "[", 
               RowBox[{"cbag", ",", "cnew", ",", "2"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               StyleBox[
                RowBox[{
                "We", " ", "start", " ", "at", " ", "the", " ", "end", " ", 
                 "of", " ", "the", " ", "vector", " ", "and", " ", "move", 
                 " ", "backwards"}],
                FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
              
              RowBox[{"cpos", "=", 
               RowBox[{"Length", "[", "cnew", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"tobreak", "=", "False"}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", 
               RowBox[{"True", ",", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                   RowBox[{
                   "We", " ", "want", " ", "to", " ", "find", " ", "the", " ",
                     "first", " ", "cpos", " ", "which", " ", "can", " ", 
                    "be", " ", 
                    RowBox[{"advanced", ".", " ", "This"}], " ", "means"}], 
                   ",", " ", 
                   RowBox[{
                    RowBox[{"it", " ", "satisfies", " ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "<", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"cpo", "+", "1"}], "\[RightDoubleBracket]"}], " ",
                     "and", " ", "is", " ", "not", " ", "the", " ", "end", 
                    " ", "of", " ", "a", " ", 
                    RowBox[{"block", "."}]}]}]}],
                  FontColor->RGBColor[1, 0, 1]], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"cpos1", "=", "cpos"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"--", "cpos"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "  ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"accParent", ",", "cpos"}], "]"}]}]}], ",", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "k", " ", "for", 
                    " ", "which", " ", 
                    RowBox[{"v", "[", "k", "]"}]}], "<", 
                    RowBox[{
                    RowBox[{"v", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], " ", "and", " ", "k", " ",
                     "not", " ", "an", " ", 
                    RowBox[{"end", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "end", " ", "of", " ",
                     "the", " ", "block", " ", "we", " ", "are", " ", 
                    "currently", " ", 
                    RowBox[{"in", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"currentblockEnd", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"accParent", ",", 
                    RowBox[{
                    RowBox[{"#", ">", "cpos"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"(*", 
                    RowBox[{"Get", " ", "the", " ", "last", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "smallest", " ", 
                    "value", " ", "in", " ", "the", " ", "block", " ", 
                    "which", " ", "we", " ", "can", " ", "use", " ", "to", 
                    " ", "advance", " ", "our", " ", "current", " ", 
                    "position"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"toAdvanceTo", "=", "currentblockEnd"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "toAdvanceTo", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"--", "toAdvanceTo"}], ";"}]}], "]"}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "l", " ", "such",
                     " ", "that", " ", 
                    RowBox[{"a", "[", "k", "]"}]}], "<", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "swap", " ", "the", " ", "cpos", " ", "and", 
                    " ", "toAdvanceTo", " ", 
                    RowBox[{"position", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"toAdvanceTo", ",", "cpos"}], "}"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"cpos", ",", "toAdvanceTo"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{"swap", " ", 
                    RowBox[{"a", "[", "k", "]"}], " ", "and", " ", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "then", " ", "sort", " ", "the", " ", "list", 
                    " ", "from", " ", "cpos1", " ", "to", " ", 
                    "currentblockEnd"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "We", " ", "now", " ", "want", " ", "to", " ", "reverse", 
                    " ", "the", " ", "remaining", " ", "blocks"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "reverse", " ", "the", " ", 
                    "remaining", " ", 
                    RowBox[{"blocks", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"reverse", " ", "the", " ", "b"}], "-", "b", "+", 
                    
                    RowBox[{"1", " ", "block"}], " ", "-", " ", 
                    RowBox[{
                    "would", " ", "probably", " ", "be", " ", "faster", " ", 
                    "if", " ", "went", " ", "the", " ", "other", " ", 
                    "way"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "<", "currentblockEnd"}], ",", 
                    
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "1", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "blockParent", "]"}], "-", "1"}]}],
                     "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "break", " ", "out", " ", "of", 
                    " ", "the", " ", "loop", " ", "of", " ", "k"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  StyleBox[" ",
                   FontColor->RGBColor[1, 0, 1]], 
                  StyleBox[
                   RowBox[{
                    RowBox[{"If", " ", "cpos", " ", "is", " ", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], " ", "at", " ", "this", " ", 
                    "point"}], ",", " ", 
                    RowBox[{
                    "then", " ", "we", " ", "have", " ", "reached", " ", 
                    "the", " ", "end", " ", "and", " ", "our", " ", "list", 
                    " ", "is", " ", "in", " ", "reverse", " ", 
                    "lexicographic", " ", 
                    RowBox[{"ordering", ".", " ", "We"}], " ", 
                    RowBox[{"stop", "."}]}]}],
                   FontColor->RGBColor[1, 0, 1]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"cpos", "\[Equal]", "1"}], ",", 
                   RowBox[{
                    RowBox[{"cnew", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "cList"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Internal`BagPart", "[", 
            RowBox[{"cbag", ",", "All"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{
             "cList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "+", 
            RowBox[{"Length", "[", 
             RowBox[{
             "prependCharges", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Internal`BagPart", "[", 
             RowBox[{"cbag", ",", "All"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"cList", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{
            "cList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "prependCharges", "]"}], "\[NotEqual]", 
              " ", "0"}], ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "prependCharges", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], ",", "0"}], "]"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PermutationsWithinBlocks", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}]}], "]"}], "//", 
  "StandardForm"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873874183593762*^9, 3.873874376402886*^9}, {
   3.87387440827359*^9, 3.873874552736712*^9}, {3.873874586224031*^9, 
   3.8738746716817102`*^9}, {3.873874725102292*^9, 3.873874737596065*^9}, {
   3.873957334829506*^9, 3.8739573403158817`*^9}, {3.875084232062522*^9, 
   3.8750842565259037`*^9}, {3.875201751156879*^9, 3.875201754404357*^9}, {
   3.875286447132395*^9, 3.875286799594479*^9}, 3.875600751763*^9, 
   3.875601926860599*^9, {3.8756047907467327`*^9, 3.8756047931291943`*^9}, {
   3.8758750283638983`*^9, 3.875875039897328*^9}, {3.8758752690204477`*^9, 
   3.875875284550292*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"18e0497f-5567-4834-96f3-f90c2988bd36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.875600767649654*^9, 3.8756007740642357`*^9}, 
   3.875601929082201*^9, 3.875601997108879*^9, 3.875602606395939*^9, 
   3.875603231920291*^9, 3.875604934505226*^9, 3.875606518285474*^9, 
   3.875606989618012*^9, 3.875608460856534*^9, 3.8756097244658823`*^9, 
   3.8756107941278954`*^9, 3.875681954962551*^9, 3.875683852781473*^9, 
   3.875687144053219*^9, 3.8756872730893*^9, 3.875687340215727*^9, 
   3.875687636123534*^9, 3.8757713590271263`*^9, 3.875855924441573*^9, 
   3.876488665728458*^9, 3.8765815114021997`*^9, 3.876582145868473*^9, 
   3.8765831183782873`*^9, 3.876583205054502*^9, 3.876644499667198*^9, 
   3.876819410191861*^9, 3.87682039921049*^9, 3.8768244758504343`*^9, 
   3.87682767678498*^9, 3.87692638940504*^9, 3.8769268194882793`*^9, 
   3.87692911003563*^9, 3.876997289245699*^9, 3.876997792277137*^9, 
   3.8769980430830917`*^9, 3.876998400522801*^9, 3.876998573703187*^9, 
   3.876999681798419*^9, 3.8769998545949697`*^9, 3.877013908331727*^9, 
   3.877069636643224*^9, 3.8770697270439053`*^9, 3.877070856999893*^9, 
   3.87707157864093*^9, 3.877073768794196*^9, 3.8770782255420427`*^9, 
   3.877079320779387*^9, 3.877096822294175*^9, 3.8770975918317947`*^9, 
   3.877154503729114*^9, 3.877156567080166*^9, 3.877414073109809*^9, 
   3.8774154226821423`*^9, 3.877415700968285*^9, 3.8774160250388327`*^9, 
   3.877417827258172*^9, 3.877418096733637*^9, 3.8774204313409*^9, 
   3.877420824481289*^9, 3.877421151884243*^9, 3.877421474714539*^9, 
   3.877767952118819*^9, 3.877768063358419*^9, 3.877768218253708*^9, 
   3.877768351810834*^9, 3.877768438231654*^9, 3.8777685356018867`*^9, 
   3.877770014866489*^9, 3.8780250069352427`*^9, 3.8780254364093943`*^9, 
   3.878029722926379*^9, 3.878030190944113*^9, 3.878051778289757*^9, 
   3.87805228046602*^9, 3.878054292105009*^9, 3.8780544580104218`*^9, 
   3.878988482294004*^9, 3.879322076292754*^9, 3.879327152013564*^9, 
   3.879329732737441*^9, 3.879833051262087*^9, 3.8798350740350246`*^9, 
   3.8798485269106827`*^9, 3.8798487871770287`*^9, 3.879849720262452*^9, 
   3.879849784795334*^9, 3.8798498492762747`*^9, 3.879849980385356*^9, 
   3.8798501205903254`*^9, 3.8798514723860273`*^9, 3.879857828359392*^9, 
   3.8798587140963993`*^9, 3.879859098691373*^9, 3.879863702323286*^9, 
   3.879938244003769*^9, 3.8799493630927258`*^9, 3.879951179951108*^9, 
   3.879951282729825*^9, 3.879953838577828*^9, 3.880189665612458*^9, 
   3.880213069409521*^9, 3.88021315043606*^9, 3.881486072199559*^9, 
   3.881492514555187*^9, 3.881492661320868*^9, 3.8814931553119507`*^9, 
   3.881493287306975*^9, 3.881494130433805*^9, 3.8825209779354258`*^9, 
   3.8825395428598347`*^9, 3.88254171383908*^9, 3.882857111820695*^9, 
   3.8828582042573347`*^9, 3.883066712864629*^9, 3.890728488951385*^9, 
   3.890728630130438*^9, 3.8908042432798557`*^9, 3.890804359032477*^9, 
   3.89080455585885*^9, 3.890804881968647*^9, 3.890811785877647*^9},
 CellLabel->
  "Out[589]//StandardForm=",ExpressionUUID->"d4944c83-ff1d-48cc-894f-\
2c45f63fa231"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$PermutationsWithinBlocksConditional", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cList", ",", "_Integer", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"blockParent", ",", "_Integer", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"prependCharges", ",", "_Integer", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"equalpairs", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"The", " ", "input", " ", 
                 RowBox[{"is", ":", "\[IndentingNewLine]", "1"}]}], ")"}], 
               " ", "A", " ", "list", " ", "of", " ", "charges", " ", 
               RowBox[{"e", ".", "g", ".", " ", 
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "3"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], " ", "}"}]}]}], 
              "\[IndentingNewLine]", " ", "2"}], ")"}], " ", "A", " ", "list",
             " ", "of", " ", "the", " ", "sizes", " ", "of", " ", "parent", 
            " ", "bocks", " ", 
            RowBox[{"e", ".", "g", ".", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], ".", " ", "It"}], " ", "is", 
            " ", "within", " ", "these", " ", "parent", " ", "blocks", " ", 
            "which", " ", "we", " ", "find", " ", 
            RowBox[{"permutations", ".", "\[IndentingNewLine]", "3"}]}], ")"}],
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["A",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["list",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["of",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["charges",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["which",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["should",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["be",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["prepend",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["onto",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["our",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         RowBox[{
          StyleBox["charges",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[".",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["e",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[".",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox["g",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[".",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}],
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[".",
           FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          StyleBox["The",
           FontColor->RGBColor[1, 0, 1]]}], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["output",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["for",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["the",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["above",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["example",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"is", ":", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}]}],
          FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "cpos", ",", "cpos1", ",", "toAdvanceTo", ",", "cnew", ",", 
           "accParent", ",", "currentblockEnd", ",", "tobreak", ",", "cbag", 
           ",", "lengthPerCharge", ",", "counter", ",", "equalpairsBool", ",",
            "cdeBag", ",", "cJoined", ",", "max"}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"accParent", "=", 
           RowBox[{"Accumulate", "[", "blockParent", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"cbag", "=", 
           RowBox[{"Internal`Bag", "@", 
            RowBox[{"Most", "[", 
             RowBox[{"{", "0", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"counter", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"cnew", "=", "c"}], ";", "\[IndentingNewLine]", 
             RowBox[{"counter", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{"cnew", "\[NotEqual]", " ", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"-", "1"}], "}"}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                  RowBox[{
                  "We", " ", "test", " ", "the", " ", "equal", " ", "pairs", 
                   " ", 
                   RowBox[{"condition", ".", " ", "If"}], " ", "it", " ", 
                   "fails"}], ",", " ", 
                  RowBox[{
                  "we", " ", "skip", " ", "all", " ", "permutation", " ", 
                   "which", " ", "will", " ", "change", " ", "the", " ", 
                   "point", " ", "it", " ", "fails", " ", 
                   RowBox[{"at", ".", " ", 
                    RowBox[{"-", " ", 
                    RowBox[{"JTS", ":", 
                    RowBox[{
                    RowBox[{"31", "/", "12"}], "/", "22"}]}]}]}]}]}],
                 FontColor->RGBColor[1, 0, 1]], 
                StyleBox[" ",
                 FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"equalpairsBool", "=", 
                 RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"cJoined", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "prependCharges", "]"}], 
                    "\[NotEqual]", "0"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    "prependCharges", "\[LeftDoubleBracket]", "counter", 
                    "\[RightDoubleBracket]"}], ",", "cnew"}], "]"}], ",", 
                   "cnew"}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cJoined", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "pair", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", " ", 
                    RowBox[{"cJoined", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "pair", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"max", "=", 
                    RowBox[{"Max", "[", "pair", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "prependCharges", "]"}], "==", 
                    "0"}], "||", 
                    RowBox[{
                    RowBox[{"max", "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "prependCharges", "\[LeftDoubleBracket]", "counter", 
                    "\[RightDoubleBracket]"}], "]"}]}], ">", "0"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "prependCharges", "]"}], 
                    "\[NotEqual]", "0"}], ",", 
                    RowBox[{"max", "-", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "prependCharges", "\[LeftDoubleBracket]", "counter", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", "max"}], "]"}]}],
                     ";", "\[IndentingNewLine]", " ", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"pair", ",", "equalpairs"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                   RowBox[{
                   "If", " ", "it", " ", "does", " ", "not", " ", "satisfy", 
                    " ", "the", " ", "equal", " ", "pairs", " ", 
                    "condition"}], ",", " ", 
                   RowBox[{"we", " ", "put", " ", "cnew", " ", "in", " ", 
                    RowBox[{"it", "'"}], "s", " ", "minimal", " ", 
                    "lexicographic", " ", "configuration", " ", "past", " ", 
                    "the", " ", "point", " ", "equalpairsBool"}]}],
                  FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                "\[IndentingNewLine]", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"equalpairsBool", "\[NotEqual]", " ", 
                   RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    StyleBox["We",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["find",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["the",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["end",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["of",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["the",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["block",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["we",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["are",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox["currently",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    RowBox[{
                    StyleBox["in",
                    FontColor->RGBColor[1, 0.5, 0]], 
                    StyleBox[".",
                    FontColor->RGBColor[1, 0, 1]]}]}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currentblockEnd", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"accParent", ",", 
                    RowBox[{
                    RowBox[{"#", "\[GreaterEqual]", " ", "equalpairsBool"}], 
                    "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                   RowBox[{"(*", 
                    RowBox[{"Get", " ", "the", " ", "last", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "then", " ", "sort", " ", "the", " ", "list", 
                    " ", "from", " ", "equalpairsBool"}], "+", 
                    RowBox[{"1", " ", "to", " ", "currentblockEnd"}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "equalpairsBool", "\[NotEqual]", "currentblockEnd"}], ",",
                     "\[IndentingNewLine]", " ", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "+", "1"}], ",", 
                    "currentblockEnd"}], "]"}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"equalpairsBool", "+", "1"}], ",", 
                    "currentblockEnd"}], "]"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "reverse", " ", "the", " ", 
                    "remaining", " ", 
                    RowBox[{"blocks", "."}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"reverse", " ", "the", " ", "b"}], "-", "b", "+", 
                    
                    RowBox[{"1", " ", "block"}], " ", "-", " ", 
                    RowBox[{
                    "would", " ", "probably", " ", "be", " ", "faster", " ", 
                    "if", " ", "went", " ", "the", " ", "other", " ", 
                    "way"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "<", "currentblockEnd"}], ",", 
                    
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "1", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "blockParent", "]"}], "-", "1"}]}],
                     "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                   RowBox[{
                   "We", " ", "add", " ", "to", " ", "our", " ", "list"}], 
                   ",", " ", 
                   RowBox[{
                   "if", " ", "it", " ", "satisfies", " ", "the", " ", 
                    "equal", " ", "pair", " ", "condition"}]}],
                  FontColor->RGBColor[1, 0, 1]], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"equalpairsBool", "\[Equal]", 
                   RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "prependCharges", "]"}], 
                    "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"cbag", ",", 
                    RowBox[{
                    "prependCharges", "\[LeftDoubleBracket]", "counter", 
                    "\[RightDoubleBracket]"}], ",", "2"}], "]"}]}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"cbag", ",", "cnew", ",", "2"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                  "We", " ", "start", " ", "at", " ", "the", " ", "end", " ", 
                   "of", " ", "the", " ", "vector", " ", "and", " ", "move", 
                   " ", "backwards"}],
                  FontColor->RGBColor[1, 0, 1]], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"cpos", "=", 
                 RowBox[{"Length", "[", "cnew", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tobreak", "=", "False"}], ";", "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{"True", ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "want", " ", "to", " ", "find", " ", "the", 
                    " ", "first", " ", "cpos", " ", "which", " ", "can", " ", 
                    "be", " ", 
                    RowBox[{"advanced", ".", " ", "This"}], " ", "means"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"it", " ", "satisfies", " ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "<", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"cpo", "+", "1"}], "\[RightDoubleBracket]"}], " ",
                     "and", " ", "is", " ", "not", " ", "the", " ", "end", 
                    " ", "of", " ", "a", " ", 
                    RowBox[{"block", "."}]}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"cpos1", "=", "cpos"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"--", "cpos"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "  ", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"accParent", ",", "cpos"}], "]"}]}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "k", " ", "for", 
                    " ", "which", " ", 
                    RowBox[{"v", "[", "k", "]"}]}], "<", 
                    RowBox[{
                    RowBox[{"v", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], " ", "and", " ", "k", " ",
                     "not", " ", "an", " ", 
                    RowBox[{"end", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "end", " ", "of", " ",
                     "the", " ", "block", " ", "we", " ", "are", " ", 
                    "currently", " ", 
                    RowBox[{"in", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"currentblockEnd", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"accParent", ",", 
                    RowBox[{
                    RowBox[{"#", ">", "cpos"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"(*", 
                    RowBox[{"Get", " ", "the", " ", "last", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "find", " ", "the", " ", "smallest", " ", 
                    "value", " ", "in", " ", "the", " ", "block", " ", 
                    "which", " ", "we", " ", "can", " ", "use", " ", "to", 
                    " ", "advance", " ", "our", " ", "current", " ", 
                    "position"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"toAdvanceTo", "=", "currentblockEnd"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"OrderedQ", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "toAdvanceTo", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "cnew", "\[LeftDoubleBracket]", "cpos", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"--", "toAdvanceTo"}], ";"}]}], "]"}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Find", " ", "the", " ", "largest", " ", "l", " ", "such",
                     " ", "that", " ", 
                    RowBox[{"a", "[", "k", "]"}]}], "<", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "swap", " ", "the", " ", "cpos", " ", "and", 
                    " ", "toAdvanceTo", " ", 
                    RowBox[{"position", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"toAdvanceTo", ",", "cpos"}], "}"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"cpos", ",", "toAdvanceTo"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{"swap", " ", 
                    RowBox[{"a", "[", "k", "]"}], " ", "and", " ", 
                    RowBox[{"a", "[", "l", "]"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "then", " ", "sort", " ", "the", " ", "list", 
                    " ", "from", " ", "cpos1", " ", "to", " ", 
                    "currentblockEnd"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"cpos1", ",", "currentblockEnd"}], "]"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "We", " ", "now", " ", "want", " ", "to", " ", "reverse", 
                    " ", "the", " ", "remaining", " ", "blocks"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "reverse", " ", "the", " ", 
                    "remaining", " ", 
                    RowBox[{"blocks", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"reverse", " ", "the", " ", "b"}], "-", "b", "+", 
                    
                    RowBox[{"1", " ", "block"}], " ", "-", " ", 
                    RowBox[{
                    "would", " ", "probably", " ", "be", " ", "faster", " ", 
                    "if", " ", "went", " ", "the", " ", "other", " ", 
                    "way"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "<", "currentblockEnd"}], ",", 
                    
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"cnew", "\[LeftDoubleBracket]", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"b", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "reverse", " ", "the", " ", "list", " ", "after", " ", 
                    "k"}], "+", "1"}], "*)"}], " ", "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"b", ",", "1", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "blockParent", "]"}], "-", "1"}]}],
                     "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "now", " ", "break", " ", "out", " ", "of", 
                    " ", "the", " ", "loop", " ", "of", " ", "k"}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   
                   RowBox[{"(*", 
                    StyleBox[" ",
                    FontColor->RGBColor[1, 0, 1]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"If", " ", "cpos", " ", "is", " ", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], " ", "at", " ", "this", " ", 
                    "point"}], ",", " ", 
                    RowBox[{
                    "then", " ", "we", " ", "have", " ", "reached", " ", 
                    "the", " ", "end", " ", "and", " ", "our", " ", "list", 
                    " ", "is", " ", "in", " ", "reverse", " ", 
                    "lexicographic", " ", 
                    RowBox[{"ordering", ".", " ", "We"}], " ", 
                    RowBox[{"stop", "."}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cpos", "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"cnew", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}], "}"}]}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "cList"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Internal`BagPart", "[", 
              RowBox[{"cbag", ",", "All"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
               "cList", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}], "+", 
              RowBox[{"Length", "[", 
               RowBox[{
               "prependCharges", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cdeBag", "=", 
           RowBox[{"Internal`BagPart", "[", 
            RowBox[{"cbag", ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "cdeBag", "]"}], "\[NotEqual]", " ", 
             "0"}], ",", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"cdeBag", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"cList", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}],
                "]"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{
                "cList", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}], "+", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "prependCharges", "]"}], 
                  "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{
                  "prependCharges", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "]"}], ",", "0"}], "]"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"-", "199"}], "}"}], "}"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873874183593762*^9, 3.873874376402886*^9}, {
   3.87387440827359*^9, 3.873874552736712*^9}, {3.873874586224031*^9, 
   3.8738746716817102`*^9}, {3.873874725102292*^9, 3.873874737596065*^9}, {
   3.873957334829506*^9, 3.8739573403158817`*^9}, {3.875084232062522*^9, 
   3.8750842565259037`*^9}, {3.875201751156879*^9, 3.875201754404357*^9}, {
   3.875286447132395*^9, 3.875286799594479*^9}, 3.875600751763*^9, 
   3.875601926860599*^9, {3.8756047907467327`*^9, 3.8756047931291943`*^9}, {
   3.8758750283638983`*^9, 3.875875039897328*^9}, {3.8758752690204477`*^9, 
   3.875875284550292*^9}, {3.881483717550153*^9, 3.881483757265563*^9}, 
   3.881483791896309*^9, {3.8814838617831*^9, 3.881483965576725*^9}, {
   3.881484003208802*^9, 3.881484173265316*^9}, {3.881484206856635*^9, 
   3.8814842486871157`*^9}, {3.8814842793275127`*^9, 3.881484282242146*^9}, {
   3.881484350931746*^9, 3.881484477391102*^9}, {3.881484609921032*^9, 
   3.881484657094679*^9}, {3.881484690622239*^9, 3.881484708524188*^9}, {
   3.881484848850491*^9, 3.8814848760651073`*^9}, {3.881484934308696*^9, 
   3.881484959505416*^9}, {3.8814849960941896`*^9, 3.8814849964008007`*^9}, {
   3.881485052402433*^9, 3.881485093688622*^9}, {3.881485199028077*^9, 
   3.8814853134114647`*^9}, {3.881485370556861*^9, 3.88148539296985*^9}, 
   3.8814854241296873`*^9, {3.881485467331731*^9, 3.881485477604136*^9}, {
   3.881485587902048*^9, 3.881485590129139*^9}, {3.881485626000649*^9, 
   3.881485678361951*^9}, {3.881485868600656*^9, 3.881486016603821*^9}, 
   3.8814864197412233`*^9, {3.881486479891364*^9, 3.8814864976880817`*^9}, {
   3.881486701495578*^9, 3.881486746417323*^9}, {3.881486847081032*^9, 
   3.8814869761954536`*^9}, {3.8814870100366096`*^9, 
   3.8814870569353456`*^9}, {3.881487332992454*^9, 3.881487378722941*^9}, 
   3.8814886734369287`*^9, 3.8814887055971937`*^9, {3.88148874889802*^9, 
   3.881488789329134*^9}, {3.8814888661132517`*^9, 3.881488881467309*^9}, 
   3.8814891222926893`*^9, {3.881489551372777*^9, 3.8814895803557568`*^9}, {
   3.8814899748246307`*^9, 3.881490312796372*^9}, {3.881490346153161*^9, 
   3.8814903464475937`*^9}, 3.8814903832597713`*^9, {3.881490512666154*^9, 
   3.8814905129029512`*^9}, {3.8814905519592533`*^9, 3.881490554075708*^9}, {
   3.88149061677178*^9, 3.881490708368301*^9}, {3.881490771399796*^9, 
   3.881490811587306*^9}, {3.8814908637065353`*^9, 3.8814910371887207`*^9}, {
   3.881491078234399*^9, 3.8814911809520597`*^9}, {3.881491213407178*^9, 
   3.881491284487298*^9}, {3.881491342816324*^9, 3.881491372880766*^9}, {
   3.881491404989889*^9, 3.881491416307625*^9}, {3.881491682219655*^9, 
   3.881491684011023*^9}, {3.8814929697199297`*^9, 3.881493054859182*^9}, {
   3.881493325735835*^9, 3.8814933260271597`*^9}, {3.881493510680305*^9, 
   3.881493612642643*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"b6c9b10b-9006-4f8f-b17a-ccab898fb15d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Compiled version of OuterPlus", "Subsection",
 CellChangeTimes->{{3.873798191382758*^9, 
  3.873798196321786*^9}},ExpressionUUID->"8d331f24-9a23-44a2-bbd7-\
400dda42b868"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$OuterPlus\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterPlus", "::", "input"}], "=", 
   "\"\<l: A 3-tensor of integers.\\np: A 2-tensor of integers. \\nf: A \
2-tensor of integers.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterPlus", "::", "output"}], "=", 
   "\"\<A 2-tensor of integer positions.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterPlus", "::", "description"}], "=", 
   "\"\<Position[Outer[Plus,Take[l,p\[LeftDoubleBracket]1\[RightDoubleBracket]\
],Take[l,p\[LeftDoubleBracket]2\[RightDoubleBracket]],...,],f]. \
\!\(\*StyleBox[\"This\",FontColor->RGBColor[1, 0, 0]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"somehow\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"needs\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"generalizing\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\".\",FontColor->RGBColor[1, 0, 0]]\)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$OuterPlus", "::", "tag"}], "=", "\"\<U1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$OuterPlus", "=", 
  RowBox[{"ReleaseHold", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Hold", "[", 
              RowBox[{"Compile", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"l", ",", "_Integer", ",", "3"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"p", ",", "_Integer", ",", "2"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"f", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], 
                ",", "\n", 
                RowBox[{"T1", ";", "\n", 
                 RowBox[{"{", 
                  RowBox[{"{", "1", "}"}], "}"}]}], "\n", ",", 
                RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
                RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}], 
              "]"}], "/.", 
             RowBox[{"T1", "\[Rule]", 
              RowBox[{"WhichT", "@@", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"LengthT", "[", "p", "]"}], "\[Equal]", "1"}], 
                   ",", 
                   RowBox[{"ReturnT", "[", 
                    RowBox[{"PositionT", "[", 
                    RowBox[{"l", ",", "f"}], "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EqualT", "[", 
                    RowBox[{
                    RowBox[{"LengthT", "[", "p", "]"}], ",", "np"}], "]"}], 
                    ",", 
                    RowBox[{"ReturnT", "[", 
                    RowBox[{"PositionT", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OuterT", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"TakeT", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"PartT", "[", 
                    RowBox[{"p", ",", "i"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "np"}], "}"}]}], "]"}], ",", 
                    "Plus"}], "]"}], ",", "1"}], "]"}]}], ")"}], ",", "f"}], 
                    "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"np", ",", "2", ",", "30"}], "}"}]}], "]"}], ",", 
                   "1"}], "]"}]}], "]"}]}]}]}], "/.", " ", 
            RowBox[{"OuterT", "\[Rule]", "Outer"}]}], "/.", " ", 
           RowBox[{"PositionT", "\[Rule]", " ", "Position"}]}], "/.", " ", 
          RowBox[{"PartT", "\[Rule]", " ", "Part"}]}], "/.", " ", 
         RowBox[{"TakeT", "\[Rule]", " ", "Take"}]}], "/.", " ", 
        RowBox[{"EqualT", "\[Rule]", " ", "Equal"}]}], "/.", " ", 
       RowBox[{"LengthT", "\[Rule]", " ", "Length"}]}], "/.", " ", 
      RowBox[{"WhichT", "\[Rule]", " ", "Which"}]}], "/.", " ", 
     RowBox[{"ReturnT", "\[Rule]", " ", "Return"}]}], ")"}], 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "number", " ", "10", " ", "here", " ", "may", " ", "need", 
     " ", "generalizing"}], "*)"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8739573752811623`*^9, {3.875201760611372*^9, 3.8752017637585773`*^9}, {
   3.8752655943009777`*^9, 3.875265687657942*^9}, {3.875265735622148*^9, 
   3.8752658458655367`*^9}, {3.875265989078017*^9, 3.875265995224147*^9}, {
   3.875279598542094*^9, 3.875279609872863*^9}, {3.8756052326385202`*^9, 
   3.875605239157888*^9}, {3.875683791481454*^9, 3.8756838054365883`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"5652f2c7-fab0-4601-af36-8d89124d44b9"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["CompiledFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
              True, FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   StyleBox[
                    PaneBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"_Integer", "3"}, {"_Integer", "2"}, {
                    "_Integer", "2"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center], 
                    "\[NoBreak]", ")"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
              True, FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"_Integer", "3"}, {"_Integer", "2"}, {
                    "_Integer", "2"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center], 
                    "\[NoBreak]", ")"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"l", ",", "p", ",", "f"}], "}"}], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "1"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"l", ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "2"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "3"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "4"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "5"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "6"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "7"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "8"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "9"}], 
                    ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "10"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "11"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "12"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "13"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "14"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "15"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "16"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "17"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "18"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "19"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "20"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "21"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "22"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "23"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "24"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "25"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "26"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "26", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "27"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "26", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "28"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "26", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "29"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "26", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "p", "]"}], "\[LongEqual]", "30"}],
                     ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "9", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "10", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "12", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "13", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "14", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "15", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "16", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "17", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "18", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "19", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "22", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "23", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "25", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "26", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"l", ",", 
                    
                    RowBox[{"p", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "1"}], "]"}], 
                    ",", "f"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center], 
                    "\[NoBreak]", ")"}]}], ImageSize -> {{1, 500}, Automatic},
                     BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   CompiledFunction[{11, 12., 5724}, {{
      Blank[Integer], 3}, {
      Blank[Integer], 2}, {
      Blank[Integer], 2}}, {{2, 3, 0}, {2, 2, 1}, {2, 2, 2}, {2, 2, 
    3}}, {{25, {2, 0, 25}}, {11, {2, 0, 11}}, {21, {2, 0, 21}}, {
     28, {2, 0, 28}}, {9, {2, 0, 9}}, {{{1}}, {2, 2, 35}}, {10, {2, 0, 10}}, {
     4, {2, 0, 3}}, {22, {2, 0, 22}}, {8, {2, 0, 8}}, {17, {2, 0, 17}}, {
     19, {2, 0, 19}}, {30, {2, 0, 30}}, {27, {2, 0, 27}}, {6, {2, 0, 6}}, {
     13, {2, 0, 13}}, {26, {2, 0, 26}}, {5, {2, 0, 5}}, {18, {2, 0, 18}}, {
     23, {2, 0, 23}}, {24, {2, 0, 24}}, {29, {2, 0, 29}}, {16, {2, 0, 16}}, {
     2, {2, 0, 2}}, {12, {2, 0, 12}}, {15, {2, 0, 15}}, {7, {2, 0, 7}}, {
     1, {2, 0, 1}}, {3, {2, 0, 4}}, {14, {2, 0, 14}}, {20, {2, 0, 20}}}, {30, 
    31, 0, 0, 
    36}, {{33, 1, 0}, {24, 0, 1, 0}, {2, 0, 4}, {
     42, "Position", 2, 3, 0, 2, 2, 2, 2, 2, 3}, {1}, {3, 1161}, {33, 1, 0}, {
     24, 0, 2, 1}, {2, 1, 10}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 4, 4}, {
     42, "Position", 2, 4, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 1149}, {33, 1, 0}, {24, 0, 
     4, 2}, {2, 2, 12}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 3, 2, 5, 5}, {42, "Position", 2, 5, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 1135}, {33, 1, 0}, {24, 0, 
     3, 3}, {2, 3, 14}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 3, 2, 6, 4}, {
     42, "Position", 2, 6, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 1119}, {33, 1, 0}, {24, 0, 
     5, 4}, {2, 4, 16}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 7, 5}, {
     42, "Position", 2, 7, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 1101}, {33, 1, 0}, {24, 0, 
     6, 5}, {2, 5, 18}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 8, 
      4}, {42, "Position", 2, 8, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 1081}, {33, 1, 0}, {24, 0, 
     7, 6}, {2, 6, 20}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 3, 2, 9, 5}, {42, "Position", 2, 9, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 1059}, {33, 1, 0}, {24, 0, 
     8, 7}, {2, 7, 22}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 10, 4}, {
     42, "Position", 2, 10, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 1035}, {33, 1, 0}, {24, 0, 
     9, 8}, {2, 8, 24}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 11, 5}, {
     42, "Position", 2, 11, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 1009}, {33, 1, 0}, {24, 0, 
     10, 9}, {2, 9, 26}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 
      12, 4}, {42, "Position", 2, 12, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 981}, {33, 1, 0}, {24, 0, 
     11, 10}, {2, 10, 28}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 3, 2, 13, 5}, {
     42, "Position", 2, 13, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 951}, {33, 1, 0}, {24, 0, 
     12, 11}, {2, 11, 30}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 14, 4}, {
     42, "Position", 2, 14, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 919}, {33, 1, 0}, {24, 0, 
     13, 12}, {2, 12, 32}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 15, 5}, {
     42, "Position", 2, 15, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 885}, {33, 1, 0}, {24, 0, 
     14, 13}, {2, 13, 34}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 
      2, 16, 4}, {42, "Position", 2, 16, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 849}, {33, 1, 0}, {24, 0, 
     15, 14}, {2, 14, 36}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 3, 2, 17, 5}, {
     42, "Position", 2, 17, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 811}, {33, 1, 0}, {24, 0, 
     16, 15}, {2, 15, 38}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 18, 4}, {
     42, "Position", 2, 18, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 771}, {33, 1, 0}, {24, 0, 
     17, 16}, {2, 16, 40}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 19, 5}, {
     42, "Position", 2, 19, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 729}, {33, 1, 0}, {24, 0, 
     18, 17}, {2, 17, 42}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      3, 2, 20, 4}, {42, "Position", 2, 20, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 685}, {33, 1, 0}, {24, 0, 
     19, 18}, {2, 18, 44}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 3, 2, 21, 5}, {
     42, "Position", 2, 21, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 639}, {33, 1, 0}, {24, 0, 
     20, 19}, {2, 19, 46}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 22, 4}, {
     42, "Position", 2, 22, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 591}, {33, 1, 0}, {24, 0, 
     21, 20}, {2, 20, 48}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {38, 1, 0, 20, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 24}, {38, 1, 0, 21, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 25}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 23, 
      5}, {42, "Position", 2, 23, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 541}, {33, 1, 0}, {24, 0, 
     22, 21}, {2, 21, 50}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {38, 1, 0, 21, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 25}, {38, 1, 0, 22, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 26}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 3, 2, 24, 4}, {42, "Position", 2, 24, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 489}, {33, 1, 0}, {24, 0, 
     23, 22}, {2, 22, 52}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {38, 1, 0, 20, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 24}, {38, 1, 0, 21, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 25}, {38, 1, 0, 22, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 26}, {38, 1, 0, 23, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 27}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 
      2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 25, 5}, {
     42, "Position", 2, 25, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 435}, {33, 1, 0}, {24, 0, 
     24, 23}, {2, 23, 54}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {38, 1, 0, 21, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 25}, {38, 1, 0, 22, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 26}, {38, 1, 0, 23, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 27}, {38, 1, 0, 24, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 28}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1,
       2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 26, 4}, {
     42, "Position", 2, 26, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 379}, {33, 1, 0}, {24, 0, 
     25, 24}, {2, 24, 56}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {38, 1, 0, 20, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 24}, {38, 1, 0, 21, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 25}, {38, 1, 0, 22, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 26}, {38, 1, 0, 23, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 27}, {38, 1, 0, 24, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 28}, {38, 1, 0, 25, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 29}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 27,
       5}, {42, "Position", 2, 27, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 321}, {33, 1, 0}, {24, 0, 
     26, 25}, {2, 25, 58}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {38, 1, 0, 21, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 25}, {38, 1, 0, 22, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 26}, {38, 1, 0, 23, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 27}, {38, 1, 0, 24, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 28}, {38, 1, 0, 25, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 29}, {38, 1, 0, 26, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 30}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 3, 30, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 
      1, 2, 0, 3, 2, 28, 4}, {42, "Position", 2, 28, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 261}, {33, 1, 0}, {24, 0, 
     27, 26}, {2, 26, 60}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {38, 1, 0, 20, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 24}, {38, 1, 0, 21, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 25}, {38, 1, 0, 22, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 26}, {38, 1, 0, 23, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 27}, {38, 1, 0, 24, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 28}, {38, 1, 0, 25, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 29}, {38, 1, 0, 26, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 30}, {38, 1, 0, 27, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 31}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 3, 30, 2, 3, 31, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0,
       1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 29, 5}, {
     42, "Position", 2, 29, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 199}, {33, 1, 0}, {24, 0, 
     28, 27}, {2, 27, 62}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {38, 1, 0, 21, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 25}, {38, 1, 0, 22, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 26}, {38, 1, 0, 23, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 27}, {38, 1, 0, 24, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 28}, {38, 1, 0, 25, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 29}, {38, 1, 0, 26, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 30}, {38, 1, 0, 27, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 31}, {38, 1, 0, 28, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 32}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 3, 30, 2, 3, 31, 2, 3,
       32, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 30, 4}, {
     42, "Position", 2, 30, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 135}, {33, 1, 0}, {24, 0, 
     29, 28}, {2, 28, 64}, {38, 1, 0, 1, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 4}, {38, 1, 0, 2, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 6}, {38, 1, 0, 4, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 7}, {38, 1, 0, 3, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 8}, {38, 1, 0, 5, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 9}, {38, 1, 0, 6, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 10}, {38, 1, 0, 7, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 11}, {38, 1, 0, 8, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 12}, {38, 1, 0, 9, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 13}, {38, 1, 0, 10, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 14}, {38, 1, 0, 11, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 15}, {38, 1, 0, 12, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 16}, {38, 1, 0, 13, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 17}, {38, 1, 0, 14, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 18}, {38, 1, 0, 15, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 19}, {38, 1, 0, 16, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 20}, {38, 1, 0, 17, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 21}, {38, 1, 0, 18, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 22}, {38, 1, 0, 19, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 23}, {38, 1, 0, 20, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 24}, {38, 1, 0, 21, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 25}, {38, 1, 0, 22, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 26}, {38, 1, 0, 23, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 27}, {38, 1, 0, 24, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 28}, {38, 1, 0, 25, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 29}, {38, 1, 0, 26, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 30}, {38, 1, 0, 27, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 31}, {38, 1, 0, 28, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 32}, {38, 1, 0, 29, 1, 5}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 5, 2, 3, 33}, {
     42, "OuterPlus", 2, 3, 4, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 3, 30, 2, 3, 31, 2, 3,
       32, 2, 3, 33, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 
      0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 3, 2, 
      31, 5}, {42, "Position", 2, 31, 5, 2, 2, 2, 2, 2, 4}, {
     42, "CopyTensor", 2, 2, 4, 2, 2, 3}, {1}, {3, 69}, {33, 1, 0}, {24, 0, 
     30, 29}, {2, 29, 66}, {38, 1, 0, 1, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 5}, {38, 1, 0, 2, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 6}, {38, 1, 0, 4, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 7}, {38, 1, 0, 3, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 8}, {38, 1, 0, 5, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 9}, {38, 1, 0, 6, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 10}, {38, 1, 0, 7, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 11}, {38, 1, 0, 8, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 12}, {38, 1, 0, 9, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 13}, {38, 1, 0, 10, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 14}, {38, 1, 0, 11, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 15}, {38, 1, 0, 12, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 16}, {38, 1, 0, 13, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 17}, {38, 1, 0, 14, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 18}, {38, 1, 0, 15, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 19}, {38, 1, 0, 16, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 20}, {38, 1, 0, 17, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 21}, {38, 1, 0, 18, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 22}, {38, 1, 0, 19, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 23}, {38, 1, 0, 20, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 24}, {38, 1, 0, 21, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 25}, {38, 1, 0, 22, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 26}, {38, 1, 0, 23, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 27}, {38, 1, 0, 24, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 28}, {38, 1, 0, 25, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 29}, {38, 1, 0, 26, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 30}, {38, 1, 0, 27, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 31}, {38, 1, 0, 28, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 32}, {38, 1, 0, 29, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 33}, {38, 1, 0, 30, 1, 4}, {
     42, "Take", 2, 3, 0, 2, 0, 1, 2, 1, 4, 2, 3, 34}, {
     42, "OuterPlus", 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 3, 10, 
      2, 3, 11, 2, 3, 12, 2, 3, 13, 2, 3, 14, 2, 3, 15, 2, 3, 16, 2, 3, 17, 2,
       3, 18, 2, 3, 19, 2, 3, 20, 2, 3, 21, 2, 3, 22, 2, 3, 23, 2, 3, 24, 2, 
      3, 25, 2, 3, 26, 2, 3, 27, 2, 3, 28, 2, 3, 29, 2, 3, 30, 2, 3, 31, 2, 3,
       32, 2, 3, 33, 2, 3, 34, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2,
       0, 1, 2, 0, 3, 2, 32, 4}, {
     42, "Position", 2, 32, 4, 2, 2, 2, 2, 2, 5}, {
     42, "CopyTensor", 2, 2, 5, 2, 2, 3}, {1}, {3, 1}, {
     42, "CopyTensor", 2, 2, 35, 2, 2, 3}, {1}}, 
    Function[{$CellContext`l, $CellContext`p, $CellContext`f}, 
     Which[Length[$CellContext`p] == 1, 
       Return[
        Position[$CellContext`l, $CellContext`f]], Length[$CellContext`p] == 
       2, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 3, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 4, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 5, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 6, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 7, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 8, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 9, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 10, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 11, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 12, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 13, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 14, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 15, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 16, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 17, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 18, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 19, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 20, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 21, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 22, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 23, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 24, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 25, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 26, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 26]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 27, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 26]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 27]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 28, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 26]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 27]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 28]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 29, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 26]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 27]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 28]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 29]], 1], $CellContext`f]], 
       Length[$CellContext`p] == 30, 
       Return[
        Position[
         Outer[Plus, 
          Take[$CellContext`l, 
           Part[$CellContext`p, 1]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 2]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 3]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 4]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 5]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 6]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 7]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 8]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 9]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 10]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 11]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 12]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 13]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 14]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 15]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 16]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 17]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 18]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 19]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 20]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 21]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 22]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 23]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 24]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 25]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 26]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 27]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 28]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 29]], 
          Take[$CellContext`l, 
           Part[$CellContext`p, 30]], 1], $CellContext`f]]]; {{1}}], Evaluate, 
    LibraryFunction[
    "/Users/joessmith/Library/Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/dhcp-vl2041-20227-75423/compiledFunction9.dylib", 
     "compiledFunction9", {{Integer, 3, "Constant"}, {
      Integer, 2, "Constant"}, {Integer, 2, "Constant"}}, {Integer, 2}]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.873957585212721*^9, 3.8739576530087757`*^9, 3.873958048483782*^9, 
   3.873958115407784*^9, 3.873958195860364*^9, 3.873961460476214*^9, 
   3.873961559953396*^9, 3.8739716088678513`*^9, 3.8740639112233257`*^9, 
   3.874575549003201*^9, 3.87458332442832*^9, 3.874583976641424*^9, 
   3.874584177815514*^9, 3.874584321474593*^9, 3.874588016717103*^9, 
   3.874661872199046*^9, 3.874718806915605*^9, 3.8747350954053497`*^9, 
   3.87499564913797*^9, 3.875005457199195*^9, 3.875021808207493*^9, 
   3.875086325318269*^9, 3.875086564973069*^9, 3.875086612735404*^9, 
   3.8750867907382517`*^9, 3.875174042366074*^9, 3.875177779249303*^9, 
   3.8751786144046593`*^9, 3.875201892365767*^9, 3.875249938939815*^9, 
   3.875281135209879*^9, 3.875339876054178*^9, 3.875341020683463*^9, 
   3.875595459191308*^9, 3.87559612992857*^9, 3.875597687734964*^9, 
   3.875598048115053*^9, 3.8756007694959173`*^9, 3.875601999247447*^9, 
   3.875602608479185*^9, 3.875603234112837*^9, 3.8756049363835382`*^9, 
   3.8756052431322193`*^9, 3.875606520422846*^9, 3.875606991727784*^9, 
   3.875608462830598*^9, 3.875609726721839*^9, 3.875610796182316*^9, 
   3.875681957135111*^9, 3.875683854851529*^9, 3.875687146106889*^9, 
   3.875687275030451*^9, 3.875687342125152*^9, 3.875687638115288*^9, 
   3.8757713612211933`*^9, 3.875855926442422*^9, 3.8764886685882397`*^9, 
   3.876581518235559*^9, {3.8765820250745296`*^9, 3.876582050408408*^9}, 
   3.876582147869904*^9, 3.876583120539893*^9, 3.8765832070446873`*^9, 
   3.876644501853735*^9, 3.876819412364808*^9, 3.876820401758247*^9, 
   3.8768244785597267`*^9, 3.876827680412771*^9, 3.876926390631399*^9, 
   3.876926821554432*^9, 3.876929111956423*^9, 3.8769972915806723`*^9, 
   3.876997794959146*^9, 3.876998045648312*^9, 3.876998403071534*^9, 
   3.876998575751545*^9, 3.876999684042715*^9, 3.876999855757889*^9, 
   3.877013910452778*^9, 3.877069638745666*^9, 3.877069728947545*^9, 
   3.877070859047943*^9, 3.877071580713088*^9, 3.87707377079268*^9, 
   3.877078227622443*^9, 3.877079322828331*^9, 3.8770968244864893`*^9, 
   3.877097593911021*^9, 3.8771545058124104`*^9, 3.877156569210981*^9, 
   3.877414075163534*^9, 3.877415424716538*^9, 3.877415703367051*^9, 
   3.877416027019898*^9, 3.877417829498857*^9, 3.877418098693346*^9, 
   3.877420433455413*^9, 3.87742082652466*^9, 3.8774211538981256`*^9, 
   3.877421476768079*^9, 3.8777679542462263`*^9, 3.8777680654278793`*^9, 
   3.8777682202640877`*^9, 3.877768353765057*^9, 3.877768440308249*^9, 
   3.877768537720911*^9, 3.877770016931308*^9, 3.8780250093036213`*^9, 
   3.878025438391885*^9, 3.878029725123425*^9, 3.8780301933727007`*^9, 
   3.878051780427474*^9, 3.8780522824370203`*^9, 3.878054294248343*^9, 
   3.878988484361608*^9, 3.8793220785048647`*^9, 3.8793271543346148`*^9, 
   3.879329735184147*^9, 3.87983305353629*^9, 3.8798350761522837`*^9, 
   3.879848528939674*^9, 3.8798487892093143`*^9, 3.879849722434374*^9, 
   3.879849787078548*^9, 3.879849851286159*^9, 3.879849982750251*^9, 
   3.879850123195981*^9, 3.87985147485338*^9, 3.879857830551708*^9, 
   3.879858716754389*^9, 3.8798591009786873`*^9, 3.8798637044756117`*^9, 
   3.879938246309498*^9, 3.879949365397584*^9, 3.879951284978471*^9, 
   3.8799538408947773`*^9, 3.8801896680577106`*^9, 3.88021307167379*^9, 
   3.880213152561339*^9, 3.88148607433642*^9, 3.8814925174071007`*^9, 
   3.881492663649053*^9, 3.88149315784477*^9, 3.881493289662302*^9, 
   3.881494133526847*^9, 3.882520981018426*^9, 3.88253954628703*^9, 
   3.882541717232747*^9, 3.8828571151775427`*^9, 3.8828582073510847`*^9, 
   3.88306671792531*^9, 3.890728494150485*^9, 3.890728635027536*^9, 
   3.890804246608719*^9, 3.890804361793776*^9, 3.890804558731862*^9, 
   3.890804885267118*^9, 3.890811788940464*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"c4bda9c6-0921-45d5-b775-28bf2102cf4f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Anomaly free charge assignments", "Subsection",
 CellChangeTimes->{{3.873798242796694*^9, 
  3.873798248102788*^9}},ExpressionUUID->"b6b28c5e-b8c3-4cb7-a159-\
dc937e381bdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Step", " ", "1"}], ":", " ", 
           RowBox[{
           "We", " ", "go", " ", "through", " ", "each", " ", "child", " ", 
            "block", " ", "indivdually"}], ":", " ", "i"}], ")"}], " ", 
         "Find", " ", "permutations", " ", "based", " ", "on", " ", "parent", 
         " ", 
         RowBox[{"blocks", ".", " ", "ii"}]}], ")"}], " ", "Find", " ", "the",
        " ", "vector", " ", "X", " ", "when", " ", "each", " ", "permutation",
        " ", "is", " ", "dotted", " ", "with", " ", 
       RowBox[{"XiXj", ".", " ", "iii"}]}], ")"}], " ", "We", " ", "add", " ",
      "to", " ", "the", " ", "list", " ", "Xlist"}], ",", " ", 
    RowBox[{
    "the", " ", "counter", " ", "of", " ", "what", " ", "permutations", " ", 
     "we", " ", "actually", " ", "need", " ", "in", " ", "terms", " ", "of", 
     " ", "their", " ", "permutation", " ", 
     RowBox[{"sequence", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Step", " ", "2"}], ":", " ", 
     RowBox[{
      RowBox[{"We", " ", "do", " ", "a", " ", "multi"}], "-", 
      RowBox[{
      "index", " ", "loop", " ", "over", " ", "the", " ", "list", " ", 
       "ValList"}]}]}], ",", " ", 
    RowBox[{
    "based", " ", "on", " ", "the", " ", "length", " ", "of", " ", "the", " ",
      "array", " ", 
     RowBox[{"sizes", ".", " ", "We"}], " ", "collect", " ", "a", " ", "list",
      " ", "of", " ", "lists", " ", "of", " ", "values", " ", "which", " ", 
     "added", " ", "together", " ", "give", " ", 
     RowBox[{"zero", "."}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Step", " ", "3"}], ":", " ", 
     RowBox[{
     "We", " ", "then", " ", "go", " ", "through", " ", "this", " ", "list", 
      " ", "of", " ", "list", " ", "of", " ", "values"}]}], ",", " ", 
    RowBox[{
    "and", " ", "recombine", " ", "the", " ", "allowed", " ", "permutations", 
     " ", "with", " ", "them"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$anomalyFreeU1Addition", "::", "input"}], "=", 
     "\"\<childCharges) A 3-tensor of integers where each entry is a set of \
charges Transpose[{c1,c2,...cn}].\\nchild\[CapitalPhi]) The weight system of \
the child algebra.\\nparent\[CapitalPhi]) The weight system of the parent \
algebra.\\n\[CapitalLambda]\[Rho]) The projection matrix from the parent to \
the child.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$anomalyFreeU1Addition", "::", "output"}], "=", 
     "\"\<A 3-tensor of charges.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$anomalyFreeU1Addition", "::", "description"}], "=", 
     "\"\<childCharges are the charges which work frm the child algebra. \
Considers all permutations of charges in childCharges within childblocks. \
Charges related by perumtations within parentblocks are considered \
equivelent, and only a representative is formed. Let c be such a set of \
charges. Then we output if Tr[XiXjck]=0 for all Xi, Xj and ck. \
\!\(\*StyleBox[\"Should\",FontColor->RGBColor[1, 0, 0]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"also\",FontColor->RGBColor[1, 0, 0]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"do\",FontColor->RGBColor[1, 0, 0]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"Tr\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"[\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\"Xicjck\",FontColor->RGBColor[1, 0, 0]]\)\!\(\*StyleBox[\
\"]\",FontColor->RGBColor[1, 0, \
0]]\)\!\(\*StyleBox[\".\",FontColor->RGBColor[1, 0, 0]]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", "\"\<Flocci$anomalyFreeU1Addition\>\"", "}"}], "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$anomalyFreeU1Addition", "::", "tag"}], "=", 
     "\"\<U1\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$anomalyFreeU1Addition", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"childCharges", ",", "_Integer", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"child\[CapitalPhi]", ",", "_Integer", ",", "2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"parent\[CapitalPhi]", ",", "_Integer", ",", "2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[CapitalLambda]\[Rho]", ",", "_Integer", ",", "2"}], 
          "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ord", ",", "\[CapitalPhi]\[Beta]s", ",", "XiXj", ",", "blockChild",
            ",", "accChild", ",", "blockParent", ",", "accParent", ",", 
           "childBlockRangec", ",", "childBlockRange", ",", 
           "posChildParentBlocks", ",", "constChild", ",", "varChild", ",", 
           "XiXj1", ",", "XiXj2", ",", "bool1", ",", "posij", ",", 
           "childCharges1", ",", "allValidSol", ",", "constPositionsc", ",", 
           "constPositions", ",", "childChargesv", ",", "blockChildv", ",", 
           "blockParentv", ",", "childBlockRangev", ",", "childBlockRangecv", 
           ",", "ord2", ",", "ord3", ",", "c", ",", "chargeStreamRaw", ",", 
           "chargeStream", ",", "dimraw", ",", "chargeStreamDim", ",", 
           "currentChildBlock", ",", "XSol", ",", "chargeList", ",", "XiXj2c",
            ",", "XiXj2v", ",", "childBlockXiXj", ",", "childXiXjCha", ",", 
           "childXiXjChadd", ",", "mulInVec", ",", "mulIndexZero", ",", 
           "corresondingChargesChild", ",", "ordInv"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "We", " ", "find", " ", "the", " ", "ordering", " ", "of", " ", 
            "the", " ", "parent\[CapitalPhi]", " ", "which", " ", "maps", " ",
             "onto", " ", 
            RowBox[{"child\[CapitalPhi]", "."}]}],
           FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ord", "=", 
           RowBox[{"Ordering", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"\[CapitalLambda]\[Rho]", ".", "p"}], ",", "p"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", "parent\[CapitalPhi]"}], "}"}]}], "]"}], 
            "]"}]}], ";", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"A", " ", "list", " ", "of", " ", "numbers"}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ord3", "=", "ord"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
             "We", " ", "find", " ", "the", " ", "matrix", " ", "XiXj"}], ",",
              " ", 
             RowBox[{
             "which", " ", "appears", " ", "in", " ", "our", " ", "Tr", 
              RowBox[{"(", "XiXjY", ")"}]}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"\[CapitalPhi]\[Beta]s", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{
            "parent\[CapitalPhi]", "\[LeftDoubleBracket]", "ord", 
             "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XiXj", "=", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{
               "Times", ",", "\[CapitalPhi]\[Beta]s", ",", " ", 
                "\[CapitalPhi]\[Beta]s", ",", "1"}], "]"}], ",", "1"}], "]"}],
             "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{"For", " ", "the", " ", "child", " ", "node"}], ",", " ", 
             RowBox[{
             "we", " ", "find", " ", "the", " ", "lengths", " ", "of", " ", 
              "the", " ", "blocks", " ", "of", " ", "similar", " ", 
              "weights"}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"accChild", "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "child\[CapitalPhi]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"child\[CapitalPhi]", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], ",",
                     "1", ",", "0"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "child\[CapitalPhi]", "]"}], "-", 
                    "1"}]}], "}"}]}], "]"}], ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "child\[CapitalPhi]", "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"blockChild", "=", 
           RowBox[{"accChild", "-", 
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"accChild", ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"childBlockRangec", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"Drop", "[", 
                  RowBox[{"accChild", ",", 
                   RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}], "+", "1"}],
               ",", "accChild"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{"For", " ", "the", " ", "parent", " ", "node"}], ",", 
             " ", 
             RowBox[{
             "we", " ", "find", " ", "the", " ", "lengths", " ", "of", " ", 
              "the", " ", "blocks", " ", "of", " ", "similar", " ", 
              "weights"}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"accParent", "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"parent\[CapitalPhi]", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"parent\[CapitalPhi]", "\[LeftDoubleBracket]", 
                    RowBox[{"ord", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}]}], ",", "1", ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}], "-", 
                    "1"}]}], "}"}]}], "]"}], ",", "0"}], "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"blockParent", "=", 
           RowBox[{"accParent", "-", 
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"accParent", ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "determine", " ", "how", " ", "the", " ", "parent", 
             " ", "blocks", " ", "sit", " ", "in", " ", "the", " ", "child", 
             " ", 
             RowBox[{"blocks", "."}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"posChildParentBlocks", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"accParent", ",", "#"}], " ", "]"}], "&"}], ",", 
              "accChild"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"childBlockRange", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"Drop", "[", 
                  RowBox[{"posChildParentBlocks", ",", 
                   RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}], "+", "1"}],
               ",", "posChildParentBlocks"}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
             "We", " ", "extract", " ", "the", " ", "child", " ", "blocks", 
              " ", "which", " ", "are", " ", 
              RowBox[{"constant", ".", " ", "These"}], " ", "either", " ", 
              "have", " ", "the", " ", "parent", " ", "length", " ", "equal", 
              " ", "to", " ", "the", " ", "child", " ", "length"}], ",", " ", 
             
             RowBox[{"or", " ", "constant", " ", "charges"}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"constChild", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "blockChild", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"childBlockRange", "\[LeftDoubleBracket]", 
                 RowBox[{"#", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{"childBlockRange", "\[LeftDoubleBracket]", 
                 RowBox[{"#", ",", "2"}], "\[RightDoubleBracket]"}]}], "||", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"DeleteDuplicates", "[", 
                  RowBox[{"Flatten", "[", " ", 
                   RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"childCharges", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{
                    RowBox[{"accChild", "\[LeftDoubleBracket]", 
                    RowBox[{"#", "-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "]"}], ",", 
                    RowBox[{
                    "accChild", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", "1"}], 
                   "]"}], "]"}], "]"}], "\[Equal]", "1"}]}], "&"}]}], "]"}]}],
           ";", " ", "\[IndentingNewLine]", 
          RowBox[{"varChild", "=", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "blockChild", "]"}], "]"}], ",", 
             "constChild"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "We", " ", "want", " ", "to", " ", "split", " ", "XiXj", " ", 
                 "into", " ", "2", " ", "types", " ", "of", " ", 
                 RowBox[{"rows", ":", " ", "\[IndentingNewLine]", "1"}]}], 
                ")"}], " ", "Those", " ", "which", " ", "are", " ", 
               "independent", " ", "of", " ", "permutations", " ", "within", 
               " ", 
               RowBox[{"varChild", ".", "\[IndentingNewLine]", "2"}]}], ")"}],
              " ", "Those", " ", "which", " ", "depend", " ", "on", " ", 
             "permutations", " ", "within", " ", 
             RowBox[{"varChild", "."}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"posij", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"DeleteDuplicates", "[", 
                  RowBox[{"Take", "[", 
                   RowBox[{"row", ",", 
                    RowBox[{
                    "childBlockRangec", "\[LeftDoubleBracket]", "v", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"row", ",", "XiXj"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"v", ",", "varChild"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "varChild", "]"}]}], "}"}]}], 
               "]"}]}], "]"}], "//", "Flatten"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"XiXj1", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "posij", "]"}], "\[NotEqual]", " ", 
              "0"}], ",", 
             RowBox[{
             "XiXj", "\[LeftDoubleBracket]", "posij", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "childCharges", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}], "]"}], "}"}]}], "]"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
             "We", " ", "first", " ", "deal", " ", "with", " ", "XiXj1"}], 
             ",", " ", 
             RowBox[{
             "and", " ", "select", " ", "only", " ", "those", " ", "child", 
              " ", "charges", " ", "which", " ", "satisfy", " ", "the", " ", 
              "conditions", " ", "on", " ", "this"}]}],
            FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"childCharges1", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"childCharges", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"XiXj1", ".", "#"}], ",", "0", ",", 
                 RowBox[{"{", "2", "}"}]}], "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"childCharges", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                "*", 
                RowBox[{"Length", "[", "XiXj1", "]"}]}]}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"We", " ", "now", " ", "turn", " ", "to", " ", 
                    RowBox[{"XiXj2", ".", " ", "We"}], " ", "split", " ", 
                    "this", " ", "situation", " ", "into", " ", "3", " ", 
                    RowBox[{"cases", ":", "\[IndentingNewLine]", "1"}]}], 
                    ")"}], " ", "varChild"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], ".", " ", "In"}], " ", "which", " ", 
                    "cases"}]}], ",", " ", 
                   RowBox[{
                   "there", " ", "are", " ", "no", " ", "permutations", " ", 
                    "to", " ", 
                    RowBox[{"do", ".", "\[IndentingNewLine]", "2"}]}]}], 
                  ")"}], " ", "XiXj2"}], "=", 
                RowBox[{"{", "}"}]}], ",", " ", 
               RowBox[{
               "In", " ", "which", " ", "case", " ", "all", " ", 
                "permutations", " ", "are", " ", 
                RowBox[{"valid", ".", "\[IndentingNewLine]", "3"}]}]}], ")"}],
              " ", "Generic"}],
            FontColor->RGBColor[1, 0, 1]], 
           StyleBox["\[IndentingNewLine]",
            FontColor->RGBColor[1, 0, 1]], 
           StyleBox["*)",
            FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
          RowBox[{"allValidSol", "=", 
           RowBox[{"{", 
            RowBox[{
            "childCharges", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
              RowBox[{"Case", " ", "1"}], ":", " ", "varChild"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "}"}], ".", " ", "There"}], " ", "are", " ", "no",
               " ", "permutations", " ", "to", " ", 
              RowBox[{"do", ".", " ", "The"}], " ", "if", " ", "statement", 
              " ", "here", " ", "extends", " ", "to", " ", "the", " ", 
              "bottom"}]}],
            Background->RGBColor[0.88, 1, 0.88]], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "childCharges1", "]"}], "\[NotEqual]", 
             " ", "0"}], ",", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "varChild", "]"}], "\[Equal]", "0"}], 
               ",", 
               RowBox[{
                RowBox[{"allValidSol", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"allValidSol", ",", "childCharges1"}], "]"}]}], 
                ";"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"Case", " ", "2"}], "&"}], "3"}],
                 Background->RGBColor[0.88, 1, 0.88]], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"childChargesv", "=", "childCharges1"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"blockParentv", "=", "blockParent"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"blockChildv", "=", "blockChild"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"childBlockRangecv", "=", "childBlockRangec"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"childBlockRangev", "=", "childBlockRange"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"constPositionsc", "=", 
                 RowBox[{"Drop", "[", 
                  RowBox[{
                   RowBox[{"{", "0", "}"}], ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "childCharges1", "]"}], 
                    "\[NotEqual]", " ", "0"}], "&&", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "varChild", "]"}], "\[NotEqual]", 
                    " ", "0"}], "&&", 
                   RowBox[{
                    RowBox[{"Length", "[", "constChild", "]"}], "\[NotEqual]",
                     " ", "0"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    "We", " ", "get", " ", "the", " ", "ranges", " ", "in", 
                    " ", "c"}], ",", " ", 
                    RowBox[{
                    "and", " ", "the", " ", "parent", " ", "blocks", " ", 
                    "corresponding", " ", "to", " ", "constant", " ", 
                    RowBox[{"positions", "."}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"constPositions", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", "1"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"constPositionsc", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"constPositionsc", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"childBlockRangec", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"childBlockRangec", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"constPositions", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"constPositions", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"childBlockRange", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"childBlockRange", "\[LeftDoubleBracket]", 
                    RowBox[{"v", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", "constChild"}], "}"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "extract", " ", "the", " ", "parts", " ", "of",
                     " ", "the", " ", "charges", " ", "which", " ", "are", 
                    " ", 
                    RowBox[{"varible", ".", " ", "We"}], " ", "likewise", " ",
                     "get", " ", "the", " ", "blocks", " ", "of", " ", "the", 
                    " ", "childs", " ", "and", " ", 
                    RowBox[{"parents", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"childChargesv", "=", 
                    RowBox[{"childCharges1", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "childCharges1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
                    "constPositionsc"}], "]"}]}], "\[RightDoubleBracket]"}]}],
                    ";", "\[IndentingNewLine]", 
                   RowBox[{"blockChildv", "=", 
                    RowBox[{
                    "blockChild", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"blockParentv", "=", 
                    RowBox[{"blockParent", "\[LeftDoubleBracket]", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "blockParent", "]"}], "]"}], ",", 
                    "constPositions"}], "]"}], "\[RightDoubleBracket]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"childBlockRangev", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "childBlockRange", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "childBlockRange", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}], "]"}], ",", "0"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "+", "1"}], ",", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "childBlockRange", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "childBlockRange", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}], "]"}]}], "}"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"childBlockRangecv", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "childBlockRangec", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "childBlockRangec", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}], "]"}], ",", "0"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "+", "1"}], ",", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "childBlockRangec", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "childBlockRangec", "\[LeftDoubleBracket]", "varChild", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}], "]"}]}], "}"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{"We", " ", "find", " ", "the", " ", 
                    RowBox[{"ord2", ":", " ", 
                    RowBox[{"Sort", 
                    RowBox[{"(", 
                    RowBox[{"\[Phi]", "'"}], ")"}]}]}]}], "\[Rule]", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sort", 
                    RowBox[{"(", 
                    RowBox[{"\[Phi]", "'"}], ")"}]}], "|", " ", 
                    RowBox[{"ordering", ".", " ", 
                    RowBox[{"ord3", ":", " ", 
                    RowBox[{"Sort", 
                    RowBox[{"(", "\[Phi]", ")"}]}]}]}]}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"Sort", 
                    RowBox[{"(", "\[Phi]\[Prime]", ")"}]}], "|"}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"ord2", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"constPositionsc", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "childCharges1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
                    "constPositionsc"}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ord3", "=", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "ord2", 
                    "\[RightDoubleBracket]"}]}], ";"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Case", " ", "2"}], ":", "  ", "XiXj1"}], "=", 
                    "XiXj"}], ",", " ", 
                   RowBox[{
                   "In", " ", "which", " ", "case", " ", "all", " ", 
                    "permutations", " ", "are", " ", 
                    RowBox[{"valid", "."}]}]}],
                  Background->RGBColor[0.88, 1, 0.88]], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "childCharges1", "]"}], 
                    "\[NotEqual]", " ", "0"}], "&&", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "varChild", "]"}], "\[NotEqual]", 
                    " ", "0"}], "&&", 
                   RowBox[{
                    RowBox[{"Length", "[", "XiXj", "]"}], "==", 
                    RowBox[{"Length", "[", "XiXj1", "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{
                    "childChargesv", "\[LeftDoubleBracket]", "cid", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"We", " ", "create", " ", "the", " ", 
                    RowBox[{"chargestream", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"chargeStreamRaw", "=", 
                    RowBox[{"Flocci$PartitionsWithinBlocks", "[", 
                    RowBox[{
                    "c", ",", "blockParentv", ",", "blockChildv", ",", 
                    "childBlockRangev"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"chargeStream", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStreamRaw", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], "-", 
                    "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "c", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dimraw", "=", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStreamRaw", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"chargeStreamDim", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{"dimraw", ",", "0"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "+", "1"}], ",", "dimraw", 
                    ",", 
                    RowBox[{
                    RowBox[{"childBlockRangecv", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"childBlockRangecv", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"We", " ", "combine", " ", "the", " ", 
                    RowBox[{"stream", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{"We", " ", "from", " ", "Xsol"}], ",", " ", 
                    RowBox[{
                    "currently", " ", "containing", " ", "the", " ", 
                    "constant", " ", 
                    RowBox[{"charges", "."}]}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"XSol", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "constPositionsc", "]"}], 
                    "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"childCharges1", "\[LeftDoubleBracket]", 
                    RowBox[{"cid", ",", "constPositionsc"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "childCharges1", "\[LeftDoubleBracket]", "cid", 
                    "\[RightDoubleBracket]"}], "}"}], ",", "1"}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "form", " ", "the", " ", "corresponding", " ", 
                    "charges", " ", 
                    RowBox[{"lists", ".", " ", "And"}], " ", "append", " ", 
                    "them", " ", "to", " ", "our", " ", 
                    RowBox[{"solution", "."}]}],
                    FontColor->RGBColor[1, 0, 1]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"chargeList", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStream", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"XSol", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "XSol", "]"}], "\[NotEqual]", " ", 
                    "0"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    "Join", ",", "XSol", ",", "chargeList", ",", "1"}], "]"}],
                     ",", "1"}], "]"}], ",", "chargeList"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"currentChildBlock", ",", "1", ",", " ", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], "}"}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"allValidSol", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"allValidSol", ",", "XSol"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"cid", ",", "1", ",", 
                    RowBox[{"Length", "[", "childChargesv", "]"}]}], "}"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 StyleBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Case", " ", "3"}], ":", "  ", "XiXj1"}], "=", 
                    "XiXj"}], ",", " ", 
                   RowBox[{
                   "In", " ", "which", " ", "case", " ", "all", " ", 
                    "permutations", " ", "are", " ", 
                    RowBox[{"valid", "."}]}]}],
                  Background->RGBColor[0.88, 1, 0.88]], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "childCharges1", "]"}], 
                    "\[NotEqual]", " ", "0"}], "&&", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "varChild", "]"}], "\[NotEqual]", 
                    " ", "0"}], "&&", 
                   RowBox[{
                    RowBox[{"Length", "[", "XiXj", "]"}], "\[NotEqual]", " ", 
                    
                    RowBox[{"Length", "[", "XiXj1", "]"}]}]}], ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"XiXj2", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"XiXj", ",", "XiXj1"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"XiXj2v", "=", "XiXj2"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"XiXj2c", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "1", ",", 
                    RowBox[{"Length", "[", "childCharges1", "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"i2", ",", "1", ",", 
                    RowBox[{"Length", "[", "XiXj2", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i3", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"childCharges1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "constChild", "]"}], "\[NotEqual]",
                     " ", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"XiXj2c", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"XiXj2", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "constPositionsc"}], 
                    "\[RightDoubleBracket]"}], ".", "#"}], "&"}], ",", 
                    RowBox[{"childCharges1", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "constPositionsc"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"XiXj2v", "=", 
                    RowBox[{"XiXj2", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "XiXj2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
                    "constPositionsc"}], "]"}]}], "\[RightDoubleBracket]"}]}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "XarraysBag", ",", "XarraysUniBag", ",", "Xsepm1", ",", 
                    "XsepPosBag", ",", "XsepPos", ",", "XarrysUni", ",", 
                    "XnoSep", ",", "Xcounter"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "The", " ", "code", " ", "in", " ", "this", " ", "block", 
                    " ", "takes", " ", "in", " ", "from", " ", "the", " ", 
                    "code", " ", 
                    RowBox[{"above", ":", " ", "XiXj2v"}]}], ",", "  ", 
                    "XiXj2c", ",", " ", "blockParentv", ",", " ", 
                    "blockChildv", ",", " ", "childBlockRangev"}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{
                    "childChargesv", "\[LeftDoubleBracket]", "cid", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"We", " ", "create", " ", "the", " ", 
                    RowBox[{"chargestream", "."}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"chargeStreamRaw", "=", 
                    RowBox[{"Flocci$PartitionsWithinBlocks", "[", 
                    RowBox[{
                    "c", ",", "blockParentv", ",", "blockChildv", ",", 
                    "childBlockRangev"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"chargeStream", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStreamRaw", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], "-", 
                    "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "c", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dimraw", "=", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStreamRaw", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"chargeStreamDim", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{"dimraw", ",", "0"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "+", "1"}], ",", "dimraw", 
                    ",", 
                    RowBox[{
                    RowBox[{"childBlockRangecv", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"childBlockRangecv", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+",
                     "1"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"S", 
                    RowBox[{"tep", ":", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"...", "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "."}], "..."}], "..."}], "..."}], ".."}],
                     "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    ".."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], ".."}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "consider", " ", "permutations", " ", "within",
                     " ", "each", " ", "child", " ", "block"}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"XarraysBag", "=", 
                    RowBox[{"Internal`Bag", "@", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "0", "}"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"XarraysUniBag", "=", 
                    RowBox[{"Internal`Bag", "@", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "0", "}"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Xsepm1", "=", "0"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"XsepPosBag", "=", 
                    RowBox[{"Internal`Bag", "[", "Xsepm1", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "get", " ", "the", " ", "rows", " ", "of", " ",
                     "XiXj2v", " ", "corresponding", " ", "to", " ", "the", 
                    " ", "given", " ", "child", " ", 
                    RowBox[{"block", "."}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"childBlockXiXj", "=", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "XiXj2v", "]"}], ",", 
                    RowBox[{"childBlockRangecv", "\[LeftDoubleBracket]", 
                    "currentChildBlock", "\[RightDoubleBracket]"}]}], "]"}], "//",
                     "Transpose"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "get", " ", "the", " ", "charge", " ", 
                    "permutations", " ", "within", " ", "this", " ", 
                    "childblock"}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"chargeList", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStream", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "For", " ", "each", " ", "charge", " ", "permutation"}], 
                    ",", " ", 
                    RowBox[{"we", " ", "want", " ", "the", " ", "matrix", " ", 
                    RowBox[{"childBlockXiXj", ".", "chargeperm"}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"childXiXjCha", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"childBlockXiXj", ".", "#"}], "&"}], ",", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStream", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "delete", " ", "duplicates", " ", "of", " ", 
                    "these"}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"childXiXjChadd", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "childXiXjCha", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}]}], ";", " ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "and", " ", "the", " ", "line", " ", "below",
                     " ", "ahre", " ", "essentially", " ", "delete", " ", 
                    "duplicates"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"childXiXjChadd", ",", "v"}], "]"}]}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"childXiXjChadd", ",", "v"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", "childXiXjCha"}], "}"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{"Step", " ", "4.2"}], ":", " ", 
                    RowBox[{
                    "We", " ", "do", " ", "all", " ", "permutations", " ", 
                    "of", " ", "childBlockCharges", " ", "not", " ", "caring",
                     " ", "about", " ", "permutations", " ", "within", " ", 
                    RowBox[{"childBlockParentBlocks", "."}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"XarraysBag", ",", "childXiXjCha", ",", "3"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{
                    "XarraysUniBag", ",", "childXiXjChadd", ",", "3"}], "]"}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "save", " ", "how", " ", "many", " ", 
                    "duplicates", " ", "we", " ", 
                    RowBox[{"have", "."}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Xsepm1", "+=", 
                    RowBox[{"Length", "[", "childXiXjChadd", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"XsepPosBag", ",", "Xsepm1"}], "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"currentChildBlock", ",", "1", ",", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], "}"}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"XsepPos", "=", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"XsepPosBag", ",", "All"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"S", 
                    RowBox[{"tep", ":", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"...", "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "."}], "..."}], "..."}], "..."}], ".."}],
                     "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    ".."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], ".."}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "want", " ", "to", " ", "select", " ", "all", 
                    " ", "inequivelent", " ", "combinations", " ", "of", " ", 
                    "Xarrays", " ", "which", " ", "add", " ", "to", " ", 
                    RowBox[{"zero", "."}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "We", " ", "reform", " ", "a", " ", "list", " ", "of", 
                    " ", "XarrysUni"}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"XarrysUni", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"XarraysUniBag", ",", "All"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "c", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", "XiXj2", "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mulInVec", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "XsepPos", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{"XsepPos", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "XsepPos", "]"}], "-", "1"}]}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "mulInVec", "]"}], ">", "30"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", 
                    "\"\<Error. Flocci$OuterPlus needs to be defined on a \
larger range of lengths.\>\"", "]"}], ";", " ", 
                    RowBox[{"Quit", "[", "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mulIndexZero", "=", 
                    RowBox[{"Flocci$OuterPlus", "[", 
                    RowBox[{"XarrysUni", ",", "mulInVec", ",", 
                    RowBox[{"-", 
                    RowBox[{
                    "XiXj2c", "\[LeftDoubleBracket]", "cid", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "mulIndexZero", "]"}], "\[Equal]", 
                    "0"}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mulIndexZero", "=", 
                    RowBox[{"Transpose", "[", "mulIndexZero", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "mulIndexZero", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{
                    "mulIndexZero", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"XsepPos", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], ";"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "XsepPos", "]"}], "-", "1"}]}], 
                    "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"mulIndexZero", "=", 
                    RowBox[{"Transpose", "[", "mulIndexZero", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"S", 
                    RowBox[{"tep", ":", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"...", "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "."}], "..."}], "..."}], "..."}], ".."}],
                     "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    ".."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], ".."}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"XnoSep", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"XarraysBag", ",", "All"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "c", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Length", "[", "XiXj2", "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Xcounter", "=", "0"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"XSol", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "constPositionsc", "]"}], 
                    "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"childCharges1", "\[LeftDoubleBracket]", 
                    RowBox[{"cid", ",", "constPositionsc"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "childCharges1", "\[LeftDoubleBracket]", "cid", 
                    "\[RightDoubleBracket]"}], "}"}], ",", "1"}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"chargeList", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"chargeStream", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"corresondingChargesChild", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i2", ",", "1", ",", 
                    RowBox[{"chargeStreamDim", "\[LeftDoubleBracket]", 
                    RowBox[{"currentChildBlock", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i3", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "c", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"XnoSep", "\[LeftDoubleBracket]", 
                    RowBox[{"++", "Xcounter"}], "\[RightDoubleBracket]"}], "==", 
                    RowBox[{"XarrysUni", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "xcomb", "\[LeftDoubleBracket]", "currentChildBlock", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "corresondingChargesChild", ",", "childBlockCharges"}], 
                    "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"childBlockCharges", ",", "chargeList"}], "}"}]}],
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"XSol", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "XSol", "]"}], "\[NotEqual]", " ", 
                    "0"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    "Join", ",", "XSol", ",", "corresondingChargesChild", ",",
                     "1"}], "]"}], ",", "1"}], "]"}], ",", 
                    "corresondingChargesChild"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"currentChildBlock", ",", "1", ",", " ", 
                    RowBox[{"Length", "[", "blockChildv", "]"}]}], "}"}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"allValidSol", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"allValidSol", ",", "XSol"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"xcomb", ",", "mulIndexZero"}], "}"}]}], "]"}], 
                    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"S", 
                    RowBox[{"tep", ":", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"...", "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "."}], "..."}], "..."}], "..."}], ".."}],
                     "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    ".."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], ".."}], "..."}], "..."}], "..."}], "..."}], 
                    "..."}], "..."}], "..."}], "..."}], ".."}]}]}],
                    FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"cid", ",", "1", ",", 
                    RowBox[{"Length", "[", "childChargesv", "]"}]}], "}"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{"End", " ", "of", " ", "Block"}],
                   FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
              RowBox[{"(*", 
               RowBox[{"End", " ", "of", " ", "case", " ", "4", " ", "if"}], 
               "*)"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           RowBox[{"(*", 
            RowBox[{"End", " ", "of", " ", "case", " ", "1", " ", "if"}], 
            "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "End", " ", "of", " ", "if", " ", "for", " ", "charges1"}], 
            "\[Equal]", 
            RowBox[{"{", "}"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"We", " ", "do", " ", "the", " ", "check", " ", "if", " ", 
             RowBox[{"Tr", "[", "Xicjck", "]"}]}],
            FontColor->RGBColor[1, 0, 1]], 
           StyleBox["*)",
            FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "newList", ",", "testBool", ",", "\[CapitalPhi]\[Beta]s3"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newList", "=", 
              RowBox[{"{", 
               RowBox[{
               "allValidSol", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "The", " ", "correct", " ", "ordering", " ", "for", " ", "the", 
               " ", "parent", " ", "ws", " ", "now", " ", "is", " ", "based", 
               " ", "on", " ", "ord3"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"\[CapitalPhi]\[Beta]s3", "=", 
              RowBox[{"Transpose", "[", 
               RowBox[{
               "parent\[CapitalPhi]", "\[LeftDoubleBracket]", "ord3", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"testBool", "=", "True"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Xi", ".", 
                    RowBox[{"(", 
                    RowBox[{"ci", "*", "cj"}], ")"}]}], "\[NotEqual]", " ", 
                    "0"}], ",", 
                    RowBox[{
                    RowBox[{"testBool", "=", "False"}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Xi", ",", "\[CapitalPhi]\[Beta]s3"}], "}"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"ci", ",", 
                    RowBox[{"Transpose", "[", "s", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"cj", ",", 
                    RowBox[{"Transpose", "[", "s", "]"}]}], "}"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"testBool", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"newList", ",", "s"}], "]"}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"s", ",", 
                 RowBox[{"Take", "[", 
                  RowBox[{"allValidSol", ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"allValidSol", "=", "newList"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"ordInv", "=", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "child\[CapitalPhi]", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ordInv", "\[LeftDoubleBracket]", 
              RowBox[{
              "ord3", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "\[RightDoubleBracket]"}], "=", "i"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "child\[CapitalPhi]", "]"}]}], "}"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"allValidSol", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "ordInv"}], "\[RightDoubleBracket]"}], ",", 
            "1"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"CompilationOptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<InlineExternalDefinitions\>\"", " ", "->", " ", "True"}], 
         "}"}]}], ",", 
       RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873876289101891*^9, 3.873876321148427*^9}, {
   3.873876411761986*^9, 3.873876430526269*^9}, {3.873876519625297*^9, 
   3.873876542241457*^9}, {3.87387674693661*^9, 3.87387686557498*^9}, {
   3.8738769350028753`*^9, 3.873877204737215*^9}, {3.873877254615946*^9, 
   3.8738772749060917`*^9}, {3.8738775268704557`*^9, 
   3.8738776112039213`*^9}, {3.873877993898983*^9, 3.87387803919093*^9}, {
   3.873878119415482*^9, 3.8738781755941353`*^9}, {3.873878221304596*^9, 
   3.873878297738543*^9}, {3.8738783433307743`*^9, 3.873878404759207*^9}, {
   3.873878466390388*^9, 3.873878472651979*^9}, {3.873878517929728*^9, 
   3.8738786169631367`*^9}, {3.873878657358488*^9, 3.873878764103491*^9}, {
   3.873878930969643*^9, 3.87387910126795*^9}, {3.8738791386167316`*^9, 
   3.873879156344054*^9}, {3.8738791886579943`*^9, 3.873879196737775*^9}, {
   3.873879264819818*^9, 3.873879295970682*^9}, {3.873879365352171*^9, 
   3.8738794458088017`*^9}, {3.873879476613434*^9, 3.873879531474514*^9}, {
   3.8738795931232233`*^9, 3.8738796345836973`*^9}, {3.8738796646807623`*^9, 
   3.87387973804213*^9}, {3.873879769765106*^9, 3.873879806349839*^9}, {
   3.873879889312106*^9, 3.873879988658124*^9}, {3.873880093086461*^9, 
   3.873880122957028*^9}, {3.8738801650476513`*^9, 3.8738801654217453`*^9}, {
   3.87388025247729*^9, 3.873880560124783*^9}, {3.873880619827696*^9, 
   3.873880832660708*^9}, {3.873880914094102*^9, 3.873880942939629*^9}, {
   3.873880976723198*^9, 3.873881111959034*^9}, {3.873881195139531*^9, 
   3.873881308362204*^9}, {3.8738813534234533`*^9, 3.87388147720214*^9}, {
   3.873881512158643*^9, 3.873881566515629*^9}, {3.87388160771198*^9, 
   3.873881627385704*^9}, {3.873881665112074*^9, 3.8738817281557837`*^9}, {
   3.873881760412278*^9, 3.873881773304721*^9}, 3.873881836704405*^9, {
   3.873881944453149*^9, 3.873882059330082*^9}, {3.873882485507884*^9, 
   3.873882501330106*^9}, {3.87388256057837*^9, 3.8738826191963263`*^9}, {
   3.873882657366006*^9, 3.87388274420994*^9}, {3.87388279399867*^9, 
   3.87388288652721*^9}, {3.8738829334471407`*^9, 3.873882965405579*^9}, {
   3.873883002549232*^9, 3.873883007819161*^9}, {3.873883173866053*^9, 
   3.8738831922818117`*^9}, {3.873883230417069*^9, 3.873883344174378*^9}, {
   3.873883380650446*^9, 3.873883414540687*^9}, {3.87388346490068*^9, 
   3.873883606702829*^9}, {3.873883637225582*^9, 3.873883811320425*^9}, {
   3.873883848890121*^9, 3.873883856889741*^9}, {3.87389161277347*^9, 
   3.873891723674762*^9}, {3.873891753762885*^9, 3.873892069496318*^9}, 
   3.8738921021478567`*^9, {3.873892141953464*^9, 3.8738922378563213`*^9}, {
   3.873892294427106*^9, 3.873892311444831*^9}, {3.873892460159451*^9, 
   3.873892469235044*^9}, {3.873892982402516*^9, 3.873893118325019*^9}, {
   3.873901052357418*^9, 3.87390106504694*^9}, {3.873901107382883*^9, 
   3.8739013681389637`*^9}, {3.873901481466896*^9, 3.873901552509553*^9}, {
   3.873901630805193*^9, 3.8739016753885317`*^9}, {3.873901867209268*^9, 
   3.873901932197214*^9}, {3.873901976945822*^9, 3.873902001003953*^9}, {
   3.87390203207817*^9, 3.8739020449725733`*^9}, {3.873902092046051*^9, 
   3.873902093052579*^9}, {3.873902317129229*^9, 3.873902317462296*^9}, {
   3.873902408415021*^9, 3.873902532203024*^9}, {3.87390257718666*^9, 
   3.8739025773685017`*^9}, 3.8739578412246*^9, 3.873957929866411*^9, {
   3.873958019722385*^9, 3.8739580645420847`*^9}, {3.874998382454719*^9, 
   3.874998414015957*^9}, {3.8749984498544188`*^9, 3.8749984987943907`*^9}, {
   3.8749985722952213`*^9, 3.874998594836969*^9}, {3.8749986313917627`*^9, 
   3.874998643551531*^9}, {3.874998706443884*^9, 3.87499870677792*^9}, {
   3.874998823549859*^9, 3.874998837970408*^9}, {3.874998919576068*^9, 
   3.8749989247454367`*^9}, {3.8749990350017357`*^9, 3.874999100715802*^9}, {
   3.874999141523425*^9, 3.87499922836834*^9}, {3.874999346100546*^9, 
   3.8749993650427427`*^9}, 3.87499941545584*^9, {3.8749994968727617`*^9, 
   3.874999521681645*^9}, {3.875000691910079*^9, 3.8750007152069063`*^9}, {
   3.875000749090231*^9, 3.875000780029071*^9}, {3.875000938946947*^9, 
   3.875000965180625*^9}, 3.875001000179204*^9, {3.875001063324592*^9, 
   3.87500113388557*^9}, {3.875001172426285*^9, 3.875001187010707*^9}, {
   3.875001230804318*^9, 3.8750013435962753`*^9}, {3.875001411085308*^9, 
   3.875001519698636*^9}, {3.875001574569462*^9, 3.875001579386154*^9}, {
   3.875001640339025*^9, 3.875001747489909*^9}, {3.875002057783485*^9, 
   3.875002196106328*^9}, {3.875002246423471*^9, 3.875002443802095*^9}, {
   3.875002535872898*^9, 3.875002654253521*^9}, {3.8750026983409758`*^9, 
   3.875002860033929*^9}, {3.8750029370802107`*^9, 3.875003146606433*^9}, {
   3.875003193275495*^9, 3.875003346843688*^9}, {3.8750034386834784`*^9, 
   3.87500352399737*^9}, {3.875003634294422*^9, 3.87500368259941*^9}, {
   3.875003740466084*^9, 3.875003791263463*^9}, {3.8750039072160788`*^9, 
   3.8750040708983603`*^9}, {3.8750041868287287`*^9, 
   3.8750042415687037`*^9}, {3.8750044439753857`*^9, 3.875004555814393*^9}, {
   3.8750045932445803`*^9, 3.875004730895336*^9}, {3.875004762863955*^9, 
   3.875004918940316*^9}, {3.875005002420299*^9, 3.875005053389862*^9}, {
   3.875005107382718*^9, 3.875005118955842*^9}, {3.8750051529486856`*^9, 
   3.875005184907778*^9}, {3.8750052167414207`*^9, 3.8750052482500477`*^9}, {
   3.875005302944796*^9, 3.875005335976737*^9}, {3.875005403830462*^9, 
   3.875005404469284*^9}, {3.875201767613675*^9, 3.87520177299426*^9}, 
   3.875279993197917*^9, {3.875280027529912*^9, 3.875280185265374*^9}, {
   3.875280295172907*^9, 3.875280474917472*^9}, {3.8752811237418013`*^9, 
   3.875281124832635*^9}, {3.8756047995239897`*^9, 3.875604806170706*^9}, 
   3.8756838090929117`*^9, {3.8758751883680162`*^9, 3.875875193540362*^9}, {
   3.876583710419886*^9, 3.876583720488244*^9}, {3.8765838837797194`*^9, 
   3.876584171872779*^9}, {3.876584321142558*^9, 3.876584326550365*^9}, {
   3.876643187166204*^9, 3.876643190137745*^9}, {3.876643236304628*^9, 
   3.876643333146242*^9}, {3.876643368664521*^9, 3.876643498484807*^9}, {
   3.876643579326593*^9, 3.876643581600686*^9}, {3.876643630350655*^9, 
   3.876643630455894*^9}, {3.8766436867650642`*^9, 3.876643720129026*^9}, {
   3.87664413933394*^9, 3.8766441747423897`*^9}, {3.876644456651922*^9, 
   3.8766444755011883`*^9}, {3.876644545277173*^9, 3.876644565079937*^9}, {
   3.876644656465358*^9, 3.876644715533448*^9}, {3.876644808640026*^9, 
   3.876644812821947*^9}, {3.876644885008498*^9, 3.876644890160503*^9}, {
   3.8774216400694036`*^9, 3.8774217045754213`*^9}, {3.878026504253764*^9, 
   3.878026518308913*^9}, {3.878026556358983*^9, 3.878026558069681*^9}, {
   3.878026595624195*^9, 3.878026596662478*^9}, {3.8780266304153214`*^9, 
   3.878026682274756*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"d9363831-1512-488f-8027-9456fcb524f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Charge assignments that work with reps", "Subsection",
 CellChangeTimes->{{3.873798280999023*^9, 
  3.873798290403099*^9}},ExpressionUUID->"6daf3244-22c2-4186-80a0-\
19f45095d5e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$chargeAlignmentComplied\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<U1\>\"", ",", 
       "\"\<There is only one algebra at play here\\nchargeList) The charges \
which pass the anomaly free condition.\\n parent\[CapitalPhi]) The weight \
system of the algebra. \\n \[Beta]) The highst weights of the algebra.. \\n \
\[CapitalLambda]\[Alpha]) The projection matrix for the parent algebra.\\n \
Flocci$User$IrrepWeightLocation) See there.\\n repList) A list of integers \
indicating which irrep each weight comes from.\>\"", ",", 
       "\"\<A 3-tensor of integers.\>\"", ",", 
       "\"\<Outputs those charges which align correctly with irreps of the \
algebra, after taking account of permutations within identical blocks of \
weights in parent\[CapitalPhi].\>\""}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$chargeAlignmentComplied", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"chargeList", ",", "_Integer", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"parent\[CapitalPhi]", ",", "_Integer", ",", "2"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalLambda]\[Alpha]", ",", "_Integer", ",", "2"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Flocci$User$IrrepWeightLocation", ",", "_Integer", ",", "2"}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"repList", ",", "_Integer", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ord", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "blockParent", ",", "count", ",", "f", ",", "cpos", ",", "cpos1", ",",
          "toAdvanceTo", ",", "cnew", ",", "accParent", ",", 
         "currentblockEnd", ",", "tobreak", ",", "LabeledParent\[CapitalPhi]",
          ",", "acountedFor", ",", "f2", ",", "toAdd", ",", "passOrNot", ",", 
         "cNewList", ",", "constParent", ",", "varParent", ",", "chargeListc",
          ",", "chargeListv", ",", "constPosition", ",", "varPosition", ",", 
         "blockLengthv", ",", "chargeStream", ",", "chargeStreamLengths", ",",
          "chargeStreamRaw", ",", "parentReOrd", ",", "parentReOrdIn", ",", 
         "hwBlock", ",", "pos", ",", "chargeStreamRep", ",", "TchargeStream", 
         ",", "l1", ",", "l2", ",", "l3", ",", "ordIn", ",", "np", ",", 
         "zero", ",", "boolPass", ",", "cNewListdeBag"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{"Step", " ", "1"}], ":", " ", 
           RowBox[{"For", " ", "the", " ", "parent", " ", "node"}]}], ",", 
          " ", 
          RowBox[{
          "we", " ", "find", " ", "the", " ", "lengths", " ", "of", " ", 
           "the", " ", "blocks", " ", "of", " ", "similar", " ", 
           RowBox[{"weights", ".", " ", "We"}], " ", "will", " ", "do", " ", 
           RowBox[{"`nextpermutation", "'"}], " ", "based", " ", "on", " ", 
           "these", " ", "block", " ", 
           RowBox[{"sizes", "."}]}]}],
         FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"accParent", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "parent\[CapitalPhi]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"parent\[CapitalPhi]", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], ",",
                   "1", ",", "0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}], "-", 
                   "1"}]}], "}"}]}], "]"}], ",", "0"}], "]"}], "]"}], ",", 
           RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"blockParent", "=", 
         RowBox[{"accParent", "-", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"accParent", ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"Step", " ", "2"}], ":", " ", 
           RowBox[{
           "We", " ", "find", " ", "the", " ", "blocks", " ", "which", " ", 
            "are", " ", 
            RowBox[{"`constant", "'"}], " ", "and", " ", "those", " ", 
            "which", " ", "are", " ", 
            RowBox[{
             RowBox[{"`var", "'"}], "."}]}]}],
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"constParent", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "blockParent", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "blockParent", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Flatten", "[", " ", 
                 RowBox[{"Take", "[", 
                  RowBox[{"chargeList", ",", "All", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"#", "-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "]"}], ",", 
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], "]"}],
                "]"}], "\[Equal]", "1"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"varParent", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "blockParent", "]"}], "]"}], ",", 
           "constParent"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "now", " ", "want", " ", "to", " ", "go", " ", 
            "through", " ", "the", " ", "steps", " ", "of", " ", "creating", 
            " ", "chargeStream", " ", "in", " ", "the", " ", "cases", " ", 
            "when", " ", 
            RowBox[{"Length", "[", "varParent", "]"}]}], "\[Equal]", 
           RowBox[{
           "0", " ", "and", " ", "when", " ", "it", " ", "is", " ", "not"}]}],
          
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "varParent", "]"}], "\[NotEqual]", " ", 
           "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"constPosition", "=", 
            RowBox[{"Most", "[", 
             RowBox[{"{", "0", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"constPosition", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"constPosition", ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"c", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"c", "-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "]"}], ",", 
                  RowBox[{
                  "accParent", "\[LeftDoubleBracket]", "c", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "constParent"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"varPosition", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", 
                RowBox[{
                "chargeList", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
              "constPosition"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"parentReOrd", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"constPosition", ",", "varPosition"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"parentReOrdIn", "=", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"parentReOrdIn", "\[LeftDoubleBracket]", 
               RowBox[{
               "parentReOrd", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "=", 
              "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}]}], "}"}]}],
             "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{"Step", ":", " ", 
              RowBox[{
              "We", " ", "split", " ", "the", " ", "charges", " ", "into", 
               " ", 
               RowBox[{"`constant", "'"}], " ", "and", " ", 
               RowBox[{"`var", "'"}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"chargeListc", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "constPosition", "]"}], "\[NotEqual]", 
               " ", "0"}], ",", 
              RowBox[{"chargeList", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "constPosition"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"{", "1", "}"}], "}"}], "}"}], ",", "1"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"chargeListv", "=", 
            RowBox[{"chargeList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "varPosition"}], "\[RightDoubleBracket]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"blockLengthv", "=", 
            RowBox[{
            "blockParent", "\[LeftDoubleBracket]", "varParent", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{"Step", ":", " ", 
              RowBox[{
              "We", " ", "want", " ", "to", " ", "create", " ", "the", " ", 
               "charge", " ", 
               RowBox[{"list", "."}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"chargeStream", "=", 
            RowBox[{
             RowBox[{"Flocci$PermutationsWithinBlocks", "[", 
              RowBox[{
              "chargeListv", ",", "blockLengthv", ",", "chargeListc"}], "]"}],
              "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "parentReOrdIn"}], 
             "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"chargeStream", "=", "chargeList"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "now", " ", "cyclce", " ", "through", " ", "the", " ", 
            "charge", " ", "stream"}], ",", " ", 
           RowBox[{
           "and", " ", "check", " ", "the", " ", "rep", " ", "condition"}]}],
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "Flocci$User$IrrepWeightLocation", " ", "contains", " ", "a", " ", 
           "list", " ", 
           RowBox[{"e", ".", "g", ".", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"31", ",", "32"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"7", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"25", ",", "26"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"27", ",", "28"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"17", ",", "20"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"9", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"21", ",", "24"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"29", ",", "30"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", "6"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"13", ",", "16"}], "}"}]}], "}"}]}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"The", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], " ", "split", " ", "the", " ", 
            "different", " ", 
            RowBox[{"representations", ".", " ", "The"}], " ", "first", " ", 
            "number", " ", 
            RowBox[{"e", ".", "g", ".", " ", 
             RowBox[{"{", 
              RowBox[{"31", ",", "32"}], "}"}]}], " ", "is", " ", "the", " ", 
            "location", " ", "of", " ", "the", " ", "highest", " ", 
            "weight"}], ",", " ", 
           RowBox[{
           "and", " ", "the", " ", "numbers", " ", "which", " ", "follow", 
            " ", "are", " ", "the", " ", "positions", " ", "of", " ", "the", 
            " ", "other", " ", "weights", " ", "for", " ", "that", " ", 
            "representation", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"in", " ", "no", " ", "real", " ", "order"}], ")"}], 
             "."}]}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"Flocci$User$IrrepWeightLocation", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", "0"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", "Flocci$User$IrrepWeightLocation", "]"}], 
             "+", "1"}]}], "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"np", "=", 
         RowBox[{
          RowBox[{"Length", "[", "pos", "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"zero", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "repList", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"cNewList", "=", 
         RowBox[{"Internal`Bag", "@", 
          RowBox[{"Most", "[", 
           RowBox[{"{", "0", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"acountedFor", "=", "zero"}], ";", "\[IndentingNewLine]", 
           RowBox[{"toAdd", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{"Loop", " ", "through", " ", "irreps"}],
              FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Do", "[", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                 "Loop", " ", "through", " ", "different", " ", "highest", 
                  " ", "weights", " ", "of", " ", "the", " ", 
                  RowBox[{"irrep", "."}]}],
                 FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Do", "[", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{"Loop", " ", "through", " ", "different", " ", 
                    RowBox[{"weights", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"boolPass", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "Loop", " ", "through", " ", "different", " ", 
                    "instances", " ", "of", " ", "said", " ", 
                    RowBox[{"weight", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "We", " ", "ask", " ", "three", " ", "conditions", " ", 
                    "of", " ", "these", " ", 
                    RowBox[{"weights", ":", " ", "1"}]}], ")"}], " ", "Have", 
                    " ", "they", " ", "been", " ", "accounted", " ", "for", 
                    " ", 
                    RowBox[{"before", ".", " ", "2"}]}], ")"}], " ", "Does", 
                    " ", "the", " ", "representation", " ", "match", " ", 
                    "the", " ", "highest", " ", 
                    RowBox[{"weight", ".", " ", "3"}]}], ")"}], " ", "Does", 
                    " ", "the", " ", "charge", " ", "match", " ", "the", " ", 
                    "highest", " ", 
                    RowBox[{"weight", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "acountedFor", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "repList", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
                    RowBox[{
                    "repList", "\[LeftDoubleBracket]", "hw", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", " ", 
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "hw", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "acountedFor", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "=", "1"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"boolPass", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"wi", ",", 
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{"weight", ",", "1"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{"weight", ",", "2"}], "\[RightDoubleBracket]"}]}],
                     "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "boolPass"}], ",", 
                    RowBox[{
                    RowBox[{"toAdd", "=", "False"}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"weight", ",", 
                    RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"irrep", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "-", "2"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", "toAdd"}], ",", 
                   RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"hw", ",", 
                  RowBox[{
                  "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], ",", "1"}], 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], ",", "2"}], 
                   "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "toAdd"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"irrep", ",", "1", ",", "np"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"toAdd", ",", 
             RowBox[{"Internal`StuffBag", "[", 
              RowBox[{"cNewList", ",", "c", ",", "2"}], "]"}]}], "]"}], ";"}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "chargeStream"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"We", " ", "output", " ", "our", " ", 
           RowBox[{"solution", "."}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"cNewListdeBag", "=", 
         RowBox[{"Internal`BagPart", "[", 
          RowBox[{"cNewList", ",", "All"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cNewListdeBag", "]"}], "\[NotEqual]", " ", 
           "0"}], ",", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{"cNewListdeBag", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"chargeList", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
             "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{
             "chargeStream", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", "0", "}"}], "}"}], "}"}], ",", "1"}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"CompilationOptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<InlineExternalDefinitions\>\"", " ", "->", " ", "True"}], 
       "}"}]}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.873903627195784*^9, 3.873903663289242*^9}, {
   3.8739037426841993`*^9, 3.873903767499506*^9}, {3.87390468751309*^9, 
   3.873904727710432*^9}, {3.873955027045622*^9, 3.8739550702283382`*^9}, {
   3.873957487398081*^9, 3.873957492109874*^9}, 3.8750845129866743`*^9, {
   3.875201790612371*^9, 3.875201802280222*^9}, {3.8756048126642227`*^9, 
   3.875604815001402*^9}, 3.875875289457592*^9, {3.877078049533143*^9, 
   3.877078049566743*^9}, {3.877258041911298*^9, 3.877258053970459*^9}, {
   3.877258883018136*^9, 3.877258913637882*^9}, {3.877258954854602*^9, 
   3.8772589956741056`*^9}, {3.8814796397883263`*^9, 3.881479646604013*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"97fad4e2-2063-49f1-b96c-12fc7afa6973"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$chargeAlignmentComplied\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<U1\>\"", ",", 
       "\"\<There is only one algebra at play here\\nchargeList) The charges \
which pass the anomaly free condition.\\n parent\[CapitalPhi]) The weight \
system of the algebra. \\n \[Beta]) The highst weights of the algebra.. \\n \
\[CapitalLambda]\[Alpha]) The projection matrix for the parent algebra.\\n \
Flocci$User$IrrepWeightLocation) See there.\\n repList) A list of integers \
indicating which irrep each weight comes from.\>\"", ",", 
       "\"\<A 3-tensor of integers.\>\"", ",", 
       "\"\<Outputs those charges which align correctly with irreps of the \
algebra, after taking account of permutations within identical blocks of \
weights in parent\[CapitalPhi].\>\""}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$chargeAlignmentComplied", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"chargeList", ",", "_Integer", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"parent\[CapitalPhi]", ",", "_Integer", ",", "2"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalLambda]\[Alpha]", ",", "_Integer", ",", "2"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Flocci$User$IrrepWeightLocation", ",", "_Integer", ",", "2"}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"repList", ",", "_Integer", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ord", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "blockParent", ",", "count", ",", "f", ",", "cpos", ",", "cpos1", ",",
          "toAdvanceTo", ",", "cnew", ",", "accParent", ",", 
         "currentblockEnd", ",", "tobreak", ",", "LabeledParent\[CapitalPhi]",
          ",", "acountedFor", ",", "f2", ",", "toAdd", ",", "passOrNot", ",", 
         "cNewList", ",", "constParent", ",", "varParent", ",", "chargeListc",
          ",", "chargeListv", ",", "constPosition", ",", "varPosition", ",", 
         "blockLengthv", ",", "chargeStream", ",", "chargeStreamLengths", ",",
          "chargeStreamRaw", ",", "parentReOrd", ",", "parentReOrdIn", ",", 
         "hwBlock", ",", "pos", ",", "chargeStreamRep", ",", "TchargeStream", 
         ",", "l1", ",", "l2", ",", "l3", ",", "ordIn", ",", "np", ",", 
         "zero", ",", "boolPass", ",", "cNewListdeBag", ",", "posHWs", ",", 
         "pairsSame", ",", "posRep", ",", "noHWs", ",", "lenReps"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{"Step", " ", "1"}], ":", " ", 
           RowBox[{"For", " ", "the", " ", "parent", " ", "node"}]}], ",", 
          " ", 
          RowBox[{
          "we", " ", "find", " ", "the", " ", "lengths", " ", "of", " ", 
           "the", " ", "blocks", " ", "of", " ", "similar", " ", 
           RowBox[{"weights", ".", " ", "We"}], " ", "will", " ", "do", " ", 
           RowBox[{"`nextpermutation", "'"}], " ", "based", " ", "on", " ", 
           "these", " ", "block", " ", 
           RowBox[{"sizes", "."}]}]}],
         FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"accParent", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "parent\[CapitalPhi]", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"parent\[CapitalPhi]", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], ",",
                   "1", ",", "0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}], "-", 
                   "1"}]}], "}"}]}], "]"}], ",", "0"}], "]"}], "]"}], ",", 
           RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"blockParent", "=", 
         RowBox[{"accParent", "-", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"accParent", ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"Step", " ", "2"}], ":", " ", 
           RowBox[{
           "We", " ", "find", " ", "the", " ", "blocks", " ", "which", " ", 
            "are", " ", 
            RowBox[{"`constant", "'"}], " ", "and", " ", "those", " ", 
            "which", " ", "are", " ", 
            RowBox[{
             RowBox[{"`var", "'"}], "."}]}]}],
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"constParent", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "blockParent", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "blockParent", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Flatten", "[", " ", 
                 RowBox[{"Take", "[", 
                  RowBox[{"chargeList", ",", "All", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"#", "-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "]"}], ",", 
                    RowBox[{
                    "accParent", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], "]"}],
                "]"}], "\[Equal]", "1"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"varParent", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "blockParent", "]"}], "]"}], ",", 
           "constParent"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "now", " ", "want", " ", "to", " ", "go", " ", 
            "through", " ", "the", " ", "steps", " ", "of", " ", "creating", 
            " ", "chargeStream", " ", "in", " ", "the", " ", "cases", " ", 
            "when", " ", 
            RowBox[{"Length", "[", "varParent", "]"}]}], "\[Equal]", 
           RowBox[{
           "0", " ", "and", " ", "when", " ", "it", " ", "is", " ", "not"}]}],
          
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "varParent", "]"}], "\[NotEqual]", " ", 
           "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"constPosition", "=", 
            RowBox[{"Most", "[", 
             RowBox[{"{", "0", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"constPosition", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"constPosition", ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"c", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{
                    RowBox[{"accParent", "\[LeftDoubleBracket]", 
                    RowBox[{"c", "-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "]"}], ",", 
                  RowBox[{
                  "accParent", "\[LeftDoubleBracket]", "c", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "constParent"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"varPosition", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", 
                RowBox[{
                "chargeList", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
              "constPosition"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"parentReOrd", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"constPosition", ",", "varPosition"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"parentReOrdIn", "=", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"parentReOrdIn", "\[LeftDoubleBracket]", 
               RowBox[{
               "parentReOrd", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "=", 
              "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "parent\[CapitalPhi]", "]"}]}], "}"}]}],
             "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{"Step", ":", " ", 
              RowBox[{
              "We", " ", "split", " ", "the", " ", "charges", " ", "into", 
               " ", 
               RowBox[{"`constant", "'"}], " ", "and", " ", 
               RowBox[{"`var", "'"}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"chargeListc", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "constPosition", "]"}], "\[NotEqual]", 
               " ", "0"}], ",", 
              RowBox[{"chargeList", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "constPosition"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"{", "1", "}"}], "}"}], "}"}], ",", "1"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"chargeListv", "=", 
            RowBox[{"chargeList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "varPosition"}], "\[RightDoubleBracket]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"blockLengthv", "=", 
            RowBox[{
            "blockParent", "\[LeftDoubleBracket]", "varParent", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
              RowBox[{"Step", ":", " ", 
               RowBox[{
               "We", " ", "create", " ", "a", " ", "list", " ", "of", " ", 
                "pairs", " ", "of", " ", "charge", " ", "positions", " ", 
                "which", " ", "must", " ", "be", " ", "equal"}]}], ",", " ", 
              RowBox[{
               RowBox[{
               "if", " ", "the", " ", "test", " ", "will", " ", "work"}], " ",
                "-", " ", 
               RowBox[{"JTS", ":", 
                RowBox[{
                 RowBox[{"31", "/", "12"}], "/", "22"}]}]}], ",", " ", 
              RowBox[{"JTS", ":", 
               RowBox[{
                RowBox[{"12", "/", "01"}], "/", "23"}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"As", " ", "a", " ", "crude"}], ",", " ", 
             RowBox[{"first", " ", "attempt"}], ",", " ", 
             RowBox[{
             "we", " ", "get", " ", "the", " ", "positions", " ", "of", " ", 
              "the", " ", "representations", " ", "which", " ", "branch", " ",
               "down", " ", "to", " ", "precisely", " ", "one", " ", 
              RowBox[{"irrep", "."}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
           
           RowBox[{"(*", 
            RowBox[{
            "We", " ", "first", " ", "get", " ", "the", " ", "locations", " ",
              "of", " ", "the", " ", "highest", " ", "weights"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"posHWs", "=", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"Flocci$User$IrrepWeightLocation", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", "0"}], 
              "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lenReps", "=", 
            RowBox[{
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"Flocci$User$IrrepWeightLocation", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                "Length", "[", "Flocci$User$IrrepWeightLocation", "]"}], "+", 
                "1"}]}], "]"}], "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Position", "[", 
                   RowBox[{"Flocci$User$IrrepWeightLocation", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", "0"}], 
                "]"}], "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"We", " ", "get", " ", "those", " ", "irrep", " ", 
             RowBox[{"id", "'"}], "s", " ", "which", " ", "branch", " ", 
             "down", " ", "to", " ", "only", " ", "one", " ", "irrep"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"pairsSame", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"posRep", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"repList", ",", "r"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"noHWs", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "posHWs", "\[LeftDoubleBracket]", "pHW", 
                    "\[RightDoubleBracket]"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", " ", "p"}], "&&", 
                   RowBox[{"p", "\[LessEqual]", 
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "posHWs", "\[LeftDoubleBracket]", "pHW", 
                    "\[RightDoubleBracket]"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "&&", 
                   RowBox[{
                    RowBox[{
                    "lenReps", "\[LeftDoubleBracket]", "pHW", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"Length", "[", "posRep", "]"}]}]}], ",", 
                  RowBox[{"noHWs", "=", "1"}]}], "]"}], "\[IndentingNewLine]",
                 ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "posRep"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"pHW", ",", "1", ",", 
                  RowBox[{"Length", "[", "posHWs", "]"}]}], "}"}]}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"noHWs", "\[Equal]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"pairsSame", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"pairsSame", ",", 
                    RowBox[{"Partition", "[", 
                    RowBox[{"posRep", ",", "2", ",", "1"}], "]"}]}], "]"}]}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"DeleteDuplicates", "[", "repList", "]"}]}], "}"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "We", " ", "then", " ", "need", " ", "to", " ", "map", " ", "to", 
             " ", "the", " ", "correct", " ", "ordering"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"ordIn", "=", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "ord", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ordIn", "\[LeftDoubleBracket]", 
               RowBox[{
               "ord", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], "=", "i"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "ord", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Let", " ", "us", " ", "expand", " ", "on", " ", "how", " ", 
              "pairsSame", " ", "must", " ", "be", " ", "adjusted", " ", "to",
               " ", "take", " ", "account", " ", "of", " ", 
              RowBox[{"reordering", ".", " ", "Elements"}], " ", "of", " ", 
              RowBox[{"p", "\\", "in"}], " ", "posRep", " ", "are", " ", 
              "positions", " ", "in", " ", 
              RowBox[{
               RowBox[{
               "X", "\[LeftDoubleBracket]", "ord", "\[RightDoubleBracket]"}], 
               ".", " ", "The"}], " ", "corresponding", " ", "position", " ", 
              "in", " ", "X", " ", "is", " ", 
              RowBox[{
               RowBox[{
               "ord", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}], 
               ".", " ", "The"}], " ", "charges", " ", "are", " ", "in", " ", 
              "the", " ", "order", " ", 
              RowBox[{
              "C", "\[LeftDoubleBracket]", "parentReOrd", 
               "\[RightDoubleBracket]"}]}], ",", " ", 
             RowBox[{"a", " ", "position", " ", 
              RowBox[{
              "parentReOrdIn", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}], " ", "gives", " ", "the", " ", 
              "same", " ", "element", " ", "as", " ", 
              RowBox[{
              "C", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}]}],
             " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pairsSame", "]"}], "\[NotEqual]", " ", 
              "0"}], ",", "\[IndentingNewLine]", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"pairsSame", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "ord", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "&"}], ",", "pairsSame", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"pairsSame", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "parentReOrdIn", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], "&"}], ",", "pairsSame", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"pairsSame", "=", 
                RowBox[{"SortBy", "[", 
                 RowBox[{"pairsSame", ",", 
                  RowBox[{
                   RowBox[{"Max", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"pairsSame", "=", "pairsSame"}], ";"}], 
              "\[IndentingNewLine]", ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{"Step", ":", " ", 
              RowBox[{
              "We", " ", "want", " ", "to", " ", "create", " ", "the", " ", 
               "charge", " ", 
               RowBox[{"list", "."}]}]}],
             FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"chargeStream", "=", 
            RowBox[{"Flocci$PermutationsWithinBlocksConditional", "[", 
             RowBox[{
             "chargeListv", ",", "blockLengthv", ",", "chargeListc", ",", 
              "pairsSame"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"chargeStream", "\[Equal]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"-", "199"}], "}"}], "}"}], "}"}]}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"{", "0", "}"}], "}"}], "}"}], ",", "1"}], "]"}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"chargeStream", "=", 
            RowBox[{"chargeStream", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "parentReOrdIn"}], 
             "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"chargeStream", "=", "chargeList"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "now", " ", "cyclce", " ", "through", " ", "the", " ", 
            "charge", " ", "stream"}], ",", " ", 
           RowBox[{
           "and", " ", "check", " ", "the", " ", "rep", " ", "condition"}]}],
          FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "Flocci$User$IrrepWeightLocation", " ", "contains", " ", "a", " ", 
           "list", " ", 
           RowBox[{"e", ".", "g", ".", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"31", ",", "32"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"7", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"25", ",", "26"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"27", ",", "28"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"17", ",", "20"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"9", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"21", ",", "24"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"29", ",", "30"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", "6"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"13", ",", "16"}], "}"}]}], "}"}]}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"The", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], " ", "split", " ", "the", " ", 
            "different", " ", 
            RowBox[{"representations", ".", " ", "The"}], " ", "first", " ", 
            "number", " ", 
            RowBox[{"e", ".", "g", ".", " ", 
             RowBox[{"{", 
              RowBox[{"31", ",", "32"}], "}"}]}], " ", "is", " ", "the", " ", 
            "location", " ", "of", " ", "the", " ", "highest", " ", 
            "weight"}], ",", " ", 
           RowBox[{
           "and", " ", "the", " ", "numbers", " ", "which", " ", "follow", 
            " ", "are", " ", "the", " ", "positions", " ", "of", " ", "the", 
            " ", "other", " ", "weights", " ", "for", " ", "that", " ", 
            "representation", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"in", " ", "no", " ", "real", " ", "order"}], ")"}], 
             "."}]}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"Flocci$User$IrrepWeightLocation", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", "0"}], 
             "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", "Flocci$User$IrrepWeightLocation", "]"}], 
             "+", "1"}]}], "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"np", "=", 
         RowBox[{
          RowBox[{"Length", "[", "pos", "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"zero", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "repList", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"cNewList", "=", 
         RowBox[{"Internal`Bag", "@", 
          RowBox[{"Most", "[", 
           RowBox[{"{", "0", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"acountedFor", "=", "zero"}], ";", "\[IndentingNewLine]", 
           RowBox[{"toAdd", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{"Loop", " ", "through", " ", "irreps"}],
              FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Do", "[", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                 "Loop", " ", "through", " ", "different", " ", "highest", 
                  " ", "weights", " ", "of", " ", "the", " ", 
                  RowBox[{"irrep", "."}]}],
                 FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "acountedFor", "\[LeftDoubleBracket]", "hw", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", "0"}], ",", 
                   RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{"Loop", " ", "through", " ", "different", " ", 
                    RowBox[{"weights", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"boolPass", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "Loop", " ", "through", " ", "different", " ", 
                    "instances", " ", "of", " ", "said", " ", 
                    RowBox[{"weight", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "We", " ", "ask", " ", "three", " ", "conditions", " ", 
                    "of", " ", "these", " ", 
                    RowBox[{"weights", ":", " ", "1"}]}], ")"}], " ", "Have", 
                    " ", "they", " ", "been", " ", "accounted", " ", "for", 
                    " ", 
                    RowBox[{"before", ".", " ", "2"}]}], ")"}], " ", "Does", 
                    " ", "the", " ", "representation", " ", "match", " ", 
                    "the", " ", "highest", " ", 
                    RowBox[{"weight", ".", " ", "3"}]}], ")"}], " ", "Does", 
                    " ", "the", " ", "charge", " ", "match", " ", "the", " ", 
                    "highest", " ", 
                    RowBox[{"weight", "."}]}],
                    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "acountedFor", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "repList", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
                    RowBox[{
                    "repList", "\[LeftDoubleBracket]", "hw", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", " ", 
                    RowBox[{"c", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "hw", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "acountedFor", "\[LeftDoubleBracket]", "wi", 
                    "\[RightDoubleBracket]"}], "=", "1"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"boolPass", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"wi", ",", 
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{"weight", ",", "1"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                    RowBox[{"weight", ",", "2"}], "\[RightDoubleBracket]"}]}],
                     "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "boolPass"}], ",", 
                    RowBox[{
                    RowBox[{"toAdd", "=", "False"}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"weight", ",", 
                    RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"pos", "\[LeftDoubleBracket]", 
                    RowBox[{"irrep", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "-", "2"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", "toAdd"}], ",", 
                   RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"hw", ",", 
                  RowBox[{
                  "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], ",", "1"}], 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "Flocci$User$IrrepWeightLocation", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "irrep", 
                    "\[RightDoubleBracket]"}], ",", "2"}], 
                   "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "toAdd"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"irrep", ",", "1", ",", "np"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"toAdd", ",", 
             RowBox[{"Internal`StuffBag", "[", 
              RowBox[{"cNewList", ",", "c", ",", "2"}], "]"}]}], "]"}], ";"}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "chargeStream"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{"We", " ", "output", " ", "our", " ", 
           RowBox[{"solution", "."}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"cNewListdeBag", "=", 
         RowBox[{"Internal`BagPart", "[", 
          RowBox[{"cNewList", ",", "All"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "cNewListdeBag", "]"}], "\[NotEqual]", " ", 
           "0"}], ",", 
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{"cNewListdeBag", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"chargeList", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
             "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{
             "chargeStream", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", "0", "}"}], "}"}], "}"}], ",", "1"}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"CompilationOptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<InlineExternalDefinitions\>\"", " ", "->", " ", "True"}], 
       "}"}]}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873903627195784*^9, 3.873903663289242*^9}, {
   3.8739037426841993`*^9, 3.873903767499506*^9}, {3.87390468751309*^9, 
   3.873904727710432*^9}, {3.873955027045622*^9, 3.8739550702283382`*^9}, {
   3.873957487398081*^9, 3.873957492109874*^9}, 3.8750845129866743`*^9, {
   3.875201790612371*^9, 3.875201802280222*^9}, {3.8756048126642227`*^9, 
   3.875604815001402*^9}, 3.875875289457592*^9, {3.877078049533143*^9, 
   3.877078049566743*^9}, {3.877258041911298*^9, 3.877258053970459*^9}, {
   3.877258883018136*^9, 3.877258913637882*^9}, {3.877258954854602*^9, 
   3.8772589956741056`*^9}, {3.8814796397883263`*^9, 3.881479646604013*^9}, {
   3.881486244116372*^9, 3.881486310893852*^9}, {3.8814864440501204`*^9, 
   3.881486444264103*^9}, {3.881486509277804*^9, 3.881486623808813*^9}, {
   3.881486751509942*^9, 3.8814867868167887`*^9}, {3.881486826603496*^9, 
   3.881486826787298*^9}, 3.8814870710882597`*^9, 3.88148732732868*^9, {
   3.881487402196248*^9, 3.88148740758887*^9}, {3.881487457015952*^9, 
   3.881487461371282*^9}, {3.881487538047192*^9, 3.881487652531971*^9}, {
   3.881487716574301*^9, 3.8814877385750837`*^9}, {3.881487830474704*^9, 
   3.881487871231701*^9}, {3.881487903705887*^9, 3.881487924976652*^9}, {
   3.881487975449067*^9, 3.881487991566023*^9}, {3.881488029381257*^9, 
   3.881488029908765*^9}, {3.881488486753798*^9, 3.881488571322991*^9}, {
   3.881488618021433*^9, 3.88148865811764*^9}, {3.881488732485889*^9, 
   3.8814887327834663`*^9}, {3.88148893443544*^9, 3.881488947022543*^9}, {
   3.881489144262865*^9, 3.881489244700143*^9}, {3.881489278682384*^9, 
   3.8814892979535923`*^9}, {3.881489498154929*^9, 3.881489532279093*^9}, 
   3.88148961780085*^9, {3.881489672583084*^9, 3.8814896728117943`*^9}, {
   3.881489723491542*^9, 3.8814897684668503`*^9}, {3.881489800059792*^9, 
   3.881489800388637*^9}, {3.8814898848853493`*^9, 3.881489915750823*^9}, 
   3.8814900349587507`*^9, {3.881490097075182*^9, 3.881490099495185*^9}, {
   3.881490427290554*^9, 3.881490447237101*^9}, {3.8814905226864023`*^9, 
   3.881490561797181*^9}, {3.881490600858006*^9, 3.881490602292506*^9}, {
   3.881490834406846*^9, 3.881490855296445*^9}, {3.881490894112369*^9, 
   3.881490897729855*^9}, {3.881491380209346*^9, 3.881491396527063*^9}, {
   3.881491441237403*^9, 3.881491590576433*^9}, {3.881491632492402*^9, 
   3.881491636720715*^9}, {3.8814918511112833`*^9, 3.881491939568946*^9}, {
   3.881491990531795*^9, 3.881492215951132*^9}, {3.881492280596736*^9, 
   3.8814922813093147`*^9}, {3.881492370861908*^9, 3.881492371158724*^9}, {
   3.881492814363155*^9, 3.881492814730494*^9}, 3.8814929573607683`*^9, 
   3.8814933941762753`*^9, {3.881493435094329*^9, 3.881493456357963*^9}, {
   3.882540270776659*^9, 3.882540271420083*^9}, {3.882541599898363*^9, 
   3.882541654672263*^9}, {3.895756275856349*^9, 
   3.895756276447834*^9}},ExpressionUUID->"58f4d0e0-50c4-4d78-96a2-\
d9b5a55ea483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flocci$WeightSystem", "::", "input"}]], "Input",
 CellChangeTimes->{{3.882540388385803*^9, 3.882540412946563*^9}},
 CellLabel->
  "In[820]:=",ExpressionUUID->"0b11a82a-04e8-41f0-b258-774fd785cf0d"],

Cell[BoxData[
 FormBox["\<\"g: simple or semi-simple Lie algebra\\nhw/hws: a highest weight \
or a list of them if semi-simple\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.882540413380156*^9},
 CellLabel->
  "Out[820]=",ExpressionUUID->"13d02bae-cb11-4505-861a-f61c0f49c7a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flocci$WeightSystem", "[", 
  RowBox[{"A2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8825404185869093`*^9, 3.882540430740402*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"8b708601-d976-4725-84a7-9804e16d1173"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1"},
     {
      RowBox[{"-", "1"}], "2"},
     {"2", 
      RowBox[{"-", "1"}]},
     {"0", "0"},
     {"0", "0"},
     {
      RowBox[{"-", "2"}], "1"},
     {"1", 
      RowBox[{"-", "2"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8825404310526047`*^9},
 CellLabel->
  "Out[821]=",ExpressionUUID->"4e6afea0-803f-47e5-8e9f-9a167618d864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Flocci$User$IrrepWeightLocation"], "Input",
 CellLabel->
  "In[819]:=",ExpressionUUID->"89cfdba2-1654-4434-ac30-03bbdddb1627"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"31", "33"},
     {"5", "7"},
     {"8", "10"},
     {"13", "15"},
     {"16", "23"},
     {"16", "23"},
     {"26", "28"},
     {"34", "36"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"40", "40"},
     {"1", "1"},
     {"2", "2"},
     {"4", "4"},
     {"37", "37"},
     {"38", "38"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"24", "25"},
     {"11", "12"},
     {"29", "30"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"39", "39"},
     {"3", "3"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"16", "23"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.882540337479383*^9},
 CellLabel->
  "Out[819]=",ExpressionUUID->"0943bd4d-18ef-4388-bbf5-eb461dcd7178"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperFlocci", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A1", ",", "A2", ",", "U1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", 
        RowBox[{"-", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", 
        RowBox[{"-", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", 
        RowBox[{"-", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", "4"}], "}"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"5648cfcf-3fb8-454a-8152-237f2e34555b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testCases", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.881486076857703*^9, 3.881486080221568*^9}},
 CellLabel->
  "In[801]:=",ExpressionUUID->"b1af7c03-ec8d-4783-8a12-e0c420476d1c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$chargeAlignment\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<U1\>\"", ",", 
      "\"\<There is only one algebra at play here\\nchargeList) The charges \
which pass the anomaly free condition.\\n parent\[CapitalPhi]) The weight \
system of the algebra. \\n \[Beta]) The highst weights of the algebra.\\n \
parentg) The algebra. \\n \[CapitalLambda]\[Alpha]) The projection matrix for \
the parent algebra.\\n Flocci$User$IrrepWeightLocation) See there.\>\"", ",", 
      "\"\<A 3-tensor of integers.\>\"", ",", 
      "\"\<Outputs those charges which align correctly with irreps of the \
algebra, after taking account of permutations within identical blocks of \
weights in parent\[CapitalPhi].\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$chargeAlignment", "[", 
   RowBox[{
   "chargeList_", ",", "parent\[CapitalPhi]_", ",", "parent\[Beta]_", ",", 
    "parentg_", ",", "\[CapitalLambda]\[Alpha]_", ",", 
    "Flocci$User$IrrepWeightLocation_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"LabeledParent\[CapitalPhi]", ",", "ord", ",", "repList"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LabeledParent\[CapitalPhi]", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Append", "[", 
               RowBox[{"#", ",", "i"}], "]"}], "&"}], ",", 
             RowBox[{"Flocci$WeightSystemSorted", "[", 
              RowBox[{"parentg", ",", 
               RowBox[{
               "parent\[Beta]", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "parent\[Beta]", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ord", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"LabeledParent\[CapitalPhi]", ",", "All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], ".", 
           RowBox[{"Transpose", "[", "\[CapitalLambda]\[Alpha]", "]"}]}], ",",
           "LabeledParent\[CapitalPhi]"}], "}"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"repList", "=", 
      RowBox[{
       RowBox[{"LabeledParent\[CapitalPhi]", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", "ord", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"testCases", ",", 
         RowBox[{"{", 
          RowBox[{
          "chargeList", ",", "parent\[CapitalPhi]", ",", 
           "\[CapitalLambda]\[Alpha]", ",", "Flocci$User$IrrepWeightLocation",
            ",", "repList", ",", "ord"}], "}"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Flocci$chargeAlignmentComplied", "[", 
      RowBox[{
      "chargeList", ",", "parent\[CapitalPhi]", ",", 
       "\[CapitalLambda]\[Alpha]", ",", "Flocci$User$IrrepWeightLocation", 
       ",", "repList", ",", "ord"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873904738693705*^9, 3.8739047425653067`*^9}, {
   3.8739574810505247`*^9, 3.873957482712324*^9}, {3.875282101057403*^9, 
   3.8752821014538517`*^9}, {3.875604825671804*^9, 3.875604847232656*^9}, 
   3.87692281473423*^9, {3.877078049570504*^9, 3.877078049571699*^9}, {
   3.877258068462928*^9, 3.8772580999737263`*^9}, {3.87725828913873*^9, 
   3.877258464457638*^9}, {3.8772586755183077`*^9, 3.8772587951113777`*^9}, {
   3.877258862158553*^9, 3.87725886894823*^9}, {3.881486081926341*^9, 
   3.881486105909897*^9}, {3.881486176198329*^9, 3.8814861764839497`*^9}, {
   3.881492478044457*^9, 3.8814924909939747`*^9}, {3.881492537873493*^9, 
   3.881492538326318*^9}, {3.881492867934054*^9, 3.88149287965373*^9}, {
   3.881493792751803*^9, 3.8814937957635107`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"d6f1963a-ecb3-4a4c-88be-dcc82abd2916"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding u1 solutions", "Subsection",
 CellChangeTimes->{{3.8737984116043777`*^9, 
  3.87379841528778*^9}},ExpressionUUID->"da9c5a5f-f7c5-432f-87e7-\
856767831a71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$U1Find\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<U1\>\"", ",", 
      "\"\<There is only one algebra at play here\\nchargeList) The charges \
which pass the anomaly free condition.\\n parent\[CapitalPhi]) The weight \
system of the algebra. \\n \[Beta]) The highst weights of the algebra.. \\n \
\[CapitalLambda]\[Alpha]) The projection matrix for the parent algebra.\\n \
Flocci$User$IrrepWeightLocation) See there.\>\"", ",", 
      "\"\<A 3-tensor of integers.\>\"", ",", 
      "\"\<Outputs those charges allowed which sit in the parent algebra. \
This uses a LinearSolve method.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$U1Find", "[", 
   RowBox[{
   "chargeList_", ",", "parent\[CapitalPhi]_", ",", "parent\[Beta]_", ",", 
    "parentg_", ",", "\[CapitalLambda]\[Alpha]_", ",", 
    "Flocci$User$IrrepWeightLocation_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LabeledParent\[CapitalPhi]", ",", "ord", ",", "repList", ",", 
      "chargesTest", ",", "ra"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LabeledParent\[CapitalPhi]", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Append", "[", 
               RowBox[{"#", ",", "i"}], "]"}], "&"}], ",", 
             RowBox[{"Flocci$WeightSystemSorted", "[", 
              RowBox[{"parentg", ",", 
               RowBox[{
               "parent\[Beta]", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "parent\[Beta]", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ord", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"LabeledParent\[CapitalPhi]", ",", "All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "]"}], ".", 
           RowBox[{"Transpose", "[", "\[CapitalLambda]\[Alpha]", "]"}]}], ",",
           "LabeledParent\[CapitalPhi]"}], "}"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"repList", "=", 
      RowBox[{
       RowBox[{"LabeledParent\[CapitalPhi]", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", "ord", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"chargesTest", "=", 
      RowBox[{"Flocci$chargeAlignmentComplied", "[", 
       RowBox[{
       "chargeList", ",", "parent\[CapitalPhi]", ",", 
        "\[CapitalLambda]\[Alpha]", ",", "Flocci$User$IrrepWeightLocation", 
        ",", "repList", ",", "ord"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ra", "=", 
      RowBox[{"MatrixRank", "[", 
       RowBox[{"parent\[CapitalPhi]", "//", "Transpose"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixRank", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "parent\[CapitalPhi]", "]"}], ",", 
             RowBox[{"Transpose", "[", "c", "]"}]}], "]"}], "]"}], "==", " ", 
          "ra"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"LinearSolve", "[", 
            RowBox[{"parent\[CapitalPhi]", ",", "ci"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ci", ",", 
             RowBox[{"Transpose", "[", "c", "]"}]}], "}"}]}], "]"}], ",", 
         "Nothing"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "chargesTest"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873955260094022*^9, 3.873955281647026*^9}, {
   3.873955435079002*^9, 3.87395544880376*^9}, {3.873955487063991*^9, 
   3.8739555433259697`*^9}, {3.8739556243951263`*^9, 3.873955662362447*^9}, 
   3.8739575125622787`*^9, 3.873957702527566*^9, {3.875201808661132*^9, 
   3.8752018113764887`*^9}, {3.8752821060320463`*^9, 3.87528210641818*^9}, {
   3.875604831008317*^9, 3.875604834287232*^9}, 3.8769228168685007`*^9, {
   3.877078049574333*^9, 3.877078049575489*^9}, {3.877259055987715*^9, 
   3.877259152693314*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"ea79e9ca-85e5-4aec-b51e-db36832a4778"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Projection matrix non-empty \[CapitalGamma] check", "Subsection",
 CellChangeTimes->{{3.8737984406766977`*^9, 3.873798476430438*^9}, {
   3.875605786785605*^9, 3.8756057951166363`*^9}, 
   3.8793236014777937`*^9},ExpressionUUID->"250a5146-c23f-42ef-9857-\
f33b524c13d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ProjectionMatrixNonEmpty\[CapitalGamma]sQ\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<U1\>\"", ",", 
      "\"\<g) A semi-simple Lie algebra.\\n \[CapitalLambda]\[Alpha]) A \
projection matrix, containing U(1) rows.\>\"", ",", "\"\<True or False.\>\"", 
      ",", "\"\<Tests that for each root  r  in Flocci$User$RootList the \
subset of Flocci$Roots[g] in roots which land on r under \[CapitalLambda]\
\[Alpha] is non-zero.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ProjectionMatrixNonEmpty\[CapitalGamma]sQ", "[", 
   RowBox[{"g_", ",", "\[CapitalLambda]\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "roots\[Beta]", ",", "ranklist", ",", "elWS", ",", 
      "\[CapitalPhi]HW\[Beta]", ",", "\[CapitalPhi]\[Beta]", ",", 
      "\[CapitalGamma]s", ",", "\[CapitalGamma]sb"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"roots\[Beta]", "=", 
      RowBox[{"Flocci$Roots", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalGamma]s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"roots\[Beta]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]\[Alpha]", ".", "#"}], "==", "r"}], 
            "&"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "Flocci$User$RootList"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"\[CapitalGamma]s", ",", 
          RowBox[{"{", "}"}]}], "]"}], "\[GreaterEqual]", " ", "1"}], ",", 
       RowBox[{
        RowBox[{"Return", "[", "False", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "True"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.873797089169997*^9, {3.8738062422387743`*^9, 3.873806243407537*^9}, {
   3.873960835025712*^9, 3.8739608387317123`*^9}, 3.873963285226088*^9, {
   3.8752018154520617`*^9, 3.8752018179301233`*^9}, {3.875604851648828*^9, 
   3.8756048542075253`*^9}, {3.8756057170486917`*^9, 3.875605752362237*^9}, 
   3.8756069973991003`*^9, 3.875770384260065*^9, 3.877077879909504*^9, {
   3.877259203551351*^9, 3.877259383662365*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"9978675a-aba6-476c-9d89-2d0c7ee9c15b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full check on extending \[CapitalLambda]\[Alpha] to \[Alpha]", \
"Subsection",
 CellChangeTimes->{{3.874057939591864*^9, 
  3.8740579548041077`*^9}},ExpressionUUID->"d20610f1-7a4d-499a-b4ac-\
931ae02934dc"],

Cell[BoxData[{
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$ProjectionMatrixExtendableSimpleQ\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<U1\>\"", ",", 
     "\"\<g1) A semi-simple Lie algebra.\\nsb) A simple Lie algebra.\\n\
\[CapitalLambda]\[Alpha]) A projection matrix from sb to g1+u(1)^n.\>\"", 
     ",", "\"\<True or false.\>\"", ",", 
     "\"\<Tests whether or not a full embedding \[Alpha] can be made from \
\[CapitalLambda]\[Alpha]. This uses a Groebner Basis, which can be slow.\>\"",
      ",", "\"\<3\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$ProjectionMatrixExtendableQ\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<U1\>\"", ",", 
     "\"\<g1) A semi-simple Lie algebra.\\ng) A semi-simple Lie algebra.\\n\
\[CapitalLambda]\[Alpha]) A projection matrix from sb to g1+u(1)^n.\>\"", 
     ",", "\"\<True or false.\>\"", ",", 
     "\"\<Tests whether or not a full embedding \[Alpha] can be made from \
\[CapitalLambda]\[Alpha].\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ProjectionMatrixExtendableSimpleQ", "[", 
   RowBox[{"g1_", ",", "sb_", ",", "\[CapitalLambda]\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$ProjectionMatrixExtendableSimpleQ", "[", 
    RowBox[{"g1", ",", "sb", ",", "\[CapitalLambda]\[Alpha]"}], "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Alg", ",", "lab", ",", " ", "\[CapitalGamma]", ",", "i", ",", "j", ",",
        "k", ",", "row", ",", "fembeddingSS", ",", "fembeddingU1", ",", 
       "fembedding", ",", "feq", ",", "flist", ",", "fsol", ",", "rankList", 
       ",", "gen1", ",", "gen2", ",", "rowRange", ",", "rowIndex", ",", 
       "noU1s", ",", "rootsb", ",", "gens", ",", "comSS1", ",", "comSS2", ",",
        "eqOffDig", ",", "eqOnDig", ",", "varID", ",", "ASb", ",", "Ag1", ",",
        "gb", ",", "\[CapitalPhi]t", ",", "\[CapitalPhi]p"}], "}"}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"The", " ", "input", " ", "of", " ", "this", " ", "is", " ", 
        RowBox[{"g1", ":", " ", 
         RowBox[{
          RowBox[{"The", " ", "semi"}], "-", 
          RowBox[{"simple", " ", "part", " ", "of", " ", "the", " ", 
           RowBox[{"userinput", "."}]}]}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"The", " ", "input", " ", "of", " ", "this", " ", "is", " ", 
        RowBox[{"sb", ":", " ", 
         RowBox[{
         "The", " ", "simple", " ", "algebra", " ", "we", " ", "are", " ", 
          "considering", " ", "the", " ", "embedding", " ", 
          RowBox[{"into", "."}]}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"The", " ", "input", " ", "of", " ", "this", " ", "is", " ", 
        RowBox[{"\[CapitalLambda]\[Alpha]", ":", " ", 
         RowBox[{"The", " ", "corresponding", " ", "projection", " ", 
          RowBox[{"matrix", "."}]}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "check", " ", "if", " ", "the", " ", "embedding", " ", "is",
         " ", "trivial"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "\[CapitalLambda]\[Alpha]", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "==", "0"}], "&"}]}], "]"}], ",", 
        RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "find", " ", "the", " ", "total", " ", "number", " ", "of",
          " ", "u", 
         RowBox[{
          RowBox[{"(", "1", ")"}], "'"}], "s"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rankList", "=", 
       RowBox[{"Flocci$Rank", "[", "g1", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"rowRange", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{
               RowBox[{"Accumulate", "[", "rankList", "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}], "+", "1"}], 
          ",", 
          RowBox[{"Accumulate", "[", "rankList", "]"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"noU1s", "=", 
       RowBox[{
        RowBox[{"Length", "[", "\[CapitalLambda]\[Alpha]", "]"}], "-", 
        RowBox[{"Total", "[", "rankList", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rowIndex", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{
             "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Range", "[", "noU1s", "]"}], "+", " ", 
            RowBox[{"Total", "[", "rankList", "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "rowRange"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rootsb", "=", 
       RowBox[{"Flocci$Roots", "[", 
        RowBox[{"{", "sb", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "do", " ", "a", " ", "quicker", " ", "check", " ", "for", 
         " ", "su", 
         RowBox[{"(", "n", ")"}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Flocci$TypeAQ", "[", "sb", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[CapitalPhi]t", "=", 
            RowBox[{"Flocci$WeightSystemFromFlat", "[", 
             RowBox[{
              RowBox[{"{", "sb", "}"}], ",", 
              RowBox[{"Normal", "[", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"1", "\[Rule]", " ", "1"}], ",", " ", 
                 RowBox[{"Flocci$Rank", "[", "sb", "]"}]}], "]"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[CapitalPhi]p", "=", 
            RowBox[{"\[CapitalPhi]t", ".", 
             RowBox[{"Transpose", "[", "\[CapitalLambda]\[Alpha]", "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flocci$ExtractHighestWeights", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"g1", ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"U1", ",", "noU1s"}], "]"}]}], "]"}], ",", 
                "\[CapitalPhi]p"}], "]"}], "===", "False"}], ",", 
             RowBox[{
              RowBox[{"Return", "[", "False", "]"}], ";"}], ",", 
             RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"For", " ", "each", " ", "simple", " ", "ideal"}], ",", " ", 
         
         RowBox[{
         "we", " ", "want", " ", "to", " ", "construct", " ", "the", " ", 
          "most", " ", "general", " ", 
          RowBox[{"embedding", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"varID", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fembeddingSS", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{
            RowBox[{"rowRange", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", "1"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"gen1", "=", 
           RowBox[{"Take", "[", 
            RowBox[{"\[CapitalLambda]\[Alpha]", ",", 
             RowBox[{
             "rowRange", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gen2", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Position", "[", 
               RowBox[{"rootsb", ",", 
                RowBox[{"_", "?", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"\[CapitalLambda]\[Alpha]", ".", "#"}], 
                    "\[Equal]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "row"}], "]"}], ",", "x", ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "\[CapitalLambda]\[Alpha]", "]"}], 
                    "-", 
                    RowBox[{"rowRange", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}], "]"}]}], "&"}], ")"}]}], ",", 
                RowBox[{"{", "1", "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"Flocci$Roots", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "g1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                  "}"}], "]"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gen2", "=", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", ",", "#"}], "}"}], "&"}], ",", 
                  RowBox[{
                  "gen2", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "gen2", "]"}]}], "}"}]}], "]"}], ",",
               "1"}], "]"}], "//", "DeleteDuplicates"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"gen2", "=", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"g", "\[Rule]", 
                 RowBox[{"a", "[", 
                  RowBox[{"++", "varID"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"g", ",", "gen2"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Flocci$Roots", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "g1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "}"}], "]"}], "]"}], ",", 
                RowBox[{"Length", "[", "rootsb", "]"}]}], "}"}]}], "]"}], "//",
             "Normal"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gen1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "gen2"}], "}"}]}], "}"}], "//", 
           "ArrayFlatten"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "g1", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "form", " ", "the", " ", "raw", " ", "embedding", " ", 
         "for", " ", "the", " ", "u", 
         RowBox[{"(", "1", ")"}], " ", 
         RowBox[{"part", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fembeddingU1", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"Length", "[", "rootsb", "]"}]}], "]"}]}], "]"}], "&"}],
          ",", 
         RowBox[{"Take", "[", 
          RowBox[{"\[CapitalLambda]\[Alpha]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "noU1s"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "find", " ", "the", " ", "commutator", " ", "matrices"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ASb", "=", 
       RowBox[{"Flocci$Commutators", "[", "sb", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ag1", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"Flocci$Commutators", ",", "g1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "now", " ", "want", " ", "to", " ", "find", " ", "the", 
         " ", "equations"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Equations", " ", "for", " ", "different", " ", "simple", " ", 
         "ideals", " ", "to", " ", 
         RowBox[{"commute", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eqOffDig", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ASb", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
            RowBox[{
            "X1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], " ", 
            RowBox[{
            "X2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "X1", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "X2", "]"}]}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", 
           RowBox[{"Length", "[", "g1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", 
           RowBox[{"Length", "[", "g1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"X1", ",", 
           RowBox[{
           "fembeddingSS", "\[LeftDoubleBracket]", "m", 
            "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"X2", ",", 
           RowBox[{
           "fembeddingSS", "\[LeftDoubleBracket]", "n", 
            "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Equations", " ", "for", " ", "a", " ", "simple", " ", "ideals", " ", 
         "to", " ", "obey", " ", "the", " ", "correct", " ", "commutation", 
         " ", 
         RowBox[{"realtions", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eqOnDig", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{
            "fembeddingSS", "\[LeftDoubleBracket]", "m", 
             "\[RightDoubleBracket]"}], "]"}], ".", 
           RowBox[{"Ag1", "\[LeftDoubleBracket]", 
            RowBox[{"m", ",", "i", ",", "j"}], "\[RightDoubleBracket]"}]}], 
          "-", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ASb", "\[LeftDoubleBracket]", 
              RowBox[{"i\[Prime]", ",", "j\[Prime]"}], 
              "\[RightDoubleBracket]"}], 
             RowBox[{
              RowBox[{"fembeddingSS", "\[LeftDoubleBracket]", 
               RowBox[{"m", ",", "i"}], "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "i\[Prime]", "\[RightDoubleBracket]"}], 
             " ", 
             RowBox[{
              RowBox[{"fembeddingSS", "\[LeftDoubleBracket]", 
               RowBox[{"m", ",", "j"}], "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "j\[Prime]", 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i\[Prime]", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"fembeddingSS", "\[LeftDoubleBracket]", 
                RowBox[{"m", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j\[Prime]", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"fembeddingSS", "\[LeftDoubleBracket]", 
                RowBox[{"m", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", 
           RowBox[{"Length", "[", "g1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Flocci$Rank", "[", 
             RowBox[{
             "g1", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
             "]"}], "+", 
            RowBox[{"Length", "[", 
             RowBox[{"Flocci$Roots", "[", 
              RowBox[{"{", 
               RowBox[{
               "g1", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
               "}"}], "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{
            RowBox[{"Flocci$Rank", "[", 
             RowBox[{
             "g1", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
             "]"}], "+", 
            RowBox[{"Length", "[", 
             RowBox[{"Flocci$Roots", "[", 
              RowBox[{"{", 
               RowBox[{
               "g1", "\[LeftDoubleBracket]", "m", "\[RightDoubleBracket]"}], 
               "}"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[
        RowBox[{
        "We", " ", "form", " ", "the", " ", "full", " ", "equation", " ", 
         RowBox[{"list", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"feq", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"eqOffDig", ",", "eqOnDig"}], "]"}], "//", "Flatten"}], "//",
         "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[
        RowBox[{
        "We", " ", "check", " ", "the", " ", "grobner", " ", "basis", " ", 
         "for", " ", "constants"}],
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"gb", "=", 
       RowBox[{"GroebnerBasis", "[", " ", 
        RowBox[{"feq", ",", 
         RowBox[{"Array", "[", 
          RowBox[{"a", ",", "varID"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gb", "\[Equal]", 
        RowBox[{"{", "}"}]}], "||", 
       RowBox[{"!", 
        RowBox[{"AnyTrue", "[", 
         RowBox[{"gb", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "===", "Integer"}], "||", 
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "===", "Real"}], "||", 
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "===", "Complex"}], "||", 
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "===", "Rational"}]}], "&"}]}], 
         "]"}]}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$ProjectionMatrixExtendableQ", "[", 
   RowBox[{"g1_", ",", "g_List", ",", "\[CapitalLambda]\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[CapitalLambda]\[Alpha]split", "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalLambda]\[Alpha]split", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Transpose", ",", 
        RowBox[{"TakeList", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "\[CapitalLambda]\[Alpha]", "]"}], ",", 
          RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"AllTrue", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "g", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Flocci$ProjectionMatrixExtendableSimpleQ", "[", 
         RowBox[{"g1", ",", 
          RowBox[{"g", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
          "\[CapitalLambda]\[Alpha]split", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.874057967184669*^9, 3.8740579673048763`*^9}, {
   3.8740599850616493`*^9, 3.874059985274173*^9}, {3.87406023955828*^9, 
   3.874060342659498*^9}, {3.874060439375618*^9, 3.8740604420138607`*^9}, {
   3.8740605272432756`*^9, 3.874060553182583*^9}, {3.874060630792199*^9, 
   3.874060632159173*^9}, {3.874063733767603*^9, 3.874063741528566*^9}, {
   3.8746637723239937`*^9, 3.8746637896436462`*^9}, {3.874664386566733*^9, 
   3.874664390658257*^9}, {3.87520182359341*^9, 3.875201826789124*^9}, {
   3.875281471637994*^9, 3.8752815674477167`*^9}, {3.875281648815586*^9, 
   3.875281716053459*^9}, {3.875604858936666*^9, 3.875604861416587*^9}, {
   3.8756055101459417`*^9, 3.875605586008988*^9}, {3.8757703916751337`*^9, 
   3.875770411283348*^9}, {3.875856935059757*^9, 3.8758569372505493`*^9}, {
   3.877770984615493*^9, 3.877770988295801*^9}, 3.8777710743992453`*^9, {
   3.877771175945876*^9, 3.877771194804264*^9}, {3.8780297819216423`*^9, 
   3.878029798720887*^9}, {3.878029850020967*^9, 3.8780298511622*^9}, {
   3.878031213898671*^9, 3.878031250347879*^9}, {3.8793236251396646`*^9, 
   3.8793237897668343`*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"eb189d07-17f2-4018-915b-2a6aa600b30d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Generating the graph upwards", "Section",
 CellChangeTimes->{{3.868439989211009*^9, 3.8684399993193913`*^9}, {
  3.868440771407998*^9, 3.868440796558538*^9}, {3.8756035497960777`*^9, 
  3.8756035580517406`*^9}},ExpressionUUID->"750ae947-bfcc-4223-ac90-\
c8e49f2a0fc1"],

Cell[CellGroupData[{

Cell["Solving simultaneous Frobenius equations", "Subsection",
 CellChangeTimes->{{3.869140698997406*^9, 3.869140702601638*^9}, {
  3.8756027996396923`*^9, 
  3.8756028230039387`*^9}},ExpressionUUID->"5c3df864-7f1c-49dd-9e4a-\
cab39cc5d67d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$FrobeniusSimSolve\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FrobeniusSimSolve", "::", "tag"}], "=", 
   "\"\<UpDirec\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FrobeniusSimSolve", "::", "input"}], "=", 
   "\"\<level03: A list of non-negative integer vectors e.g. \
{{0,1},{1,0}}.\\ncountCompare: A non-negative integer vector e.g. {1,1}. \
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FrobeniusSimSolve", "::", "output"}], "=", 
   "\"\<A 2-tensor of non-negative integer vectors, the first of which is \
{0,0}, and subsiqunet of which are solutions {a_i} to \\\\sum a_i \
level03_i=countCompare, for a_i>=0.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$FrobeniusSimSolve", "::", "description"}], "=", 
   "\"\<The vectors in level03 are multiplicites of hws in irreps. The vector \
countCompare is the multiplicity that we want to get. This function tells us \
all the ways we can combine types of irreps so that they branch correctly. \>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$FrobeniusSimSolve", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"level03", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"countCompare", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "counter", ",", "currentIndex", ",", "test", ",", "bool", ",", 
         "testarray", ",", "boolZero", ",", "boolToKill", ",", "outlist"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"counter", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "level03", "]"}]}], "}"}]}], "]"}]}], ";",
         " ", 
        RowBox[{"(*", 
         RowBox[{"I", " ", 
          RowBox[{"couldn", "'"}], "t", " ", "use", " ", "constant", " ", 
          "array", " ", "here", "??"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"outlist", "=", 
         RowBox[{"{", "counter", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"counter", "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "1"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{"True", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bool", "=", "True"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"testarray", "=", 
            RowBox[{"countCompare", "-", 
             RowBox[{"counter", ".", "level03"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"t", "<", "0"}], ",", 
               RowBox[{
                RowBox[{"bool", "=", "False"}], ";", " ", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "testarray"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"test", " ", "if", " ", "zero"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"boolZero", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"t", "\[NotEqual]", " ", "0"}], ",", 
               RowBox[{
                RowBox[{"boolZero", "=", "False"}], ";", " ", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "testarray"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"boolZero", ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"outlist", ",", "counter"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"We", " ", "work", " ", "on", " ", "indexing"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"boolToKill", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"t", "\[NotEqual]", " ", "0"}], ",", 
               RowBox[{
                RowBox[{"boolToKill", "=", "False"}], ";", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"Take", "[", 
                RowBox[{"counter", ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", "bool"}], " ", "&&", " ", "boolToKill"}], ",", " ", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"bool", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"counter", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+=", "1"}], 
              ";"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"counter", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"Length", "[", "counter", "]"}], "+", "1", "-", 
                    "i"}], "\[RightDoubleBracket]"}], "\[NotEqual]", " ", 
                  "0"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"counter", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Length", "[", "counter", "]"}], "+", "1", "-", 
                    "i"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  RowBox[{
                   RowBox[{"counter", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Length", "[", "counter", "]"}], "-", "i"}], 
                    "\[RightDoubleBracket]"}], "+=", "1"}], ";", " ", 
                  RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "counter", "]"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "outlist"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875249337246825*^9, 3.8752493404859343`*^9}, {
   3.8752501590348473`*^9, 3.875250160535864*^9}, {3.875251828605658*^9, 
   3.8752520856239567`*^9}, {3.87525220003971*^9, 3.875252208516185*^9}, 
   3.875252253955262*^9, {3.875341700090385*^9, 3.87534171247169*^9}, {
   3.875602736267667*^9, 3.875602737735437*^9}, {3.875602835594685*^9, 
   3.875602861845422*^9}, {3.875603035079709*^9, 3.87560303555866*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"46a14b6b-9b52-410e-aa59-497939f8f528"]
}, Closed]],

Cell[CellGroupData[{

Cell["Association Maps ", "Subsection",
 CellChangeTimes->{{3.869899449969453*^9, 3.8698994533826647`*^9}, {
  3.875602289106679*^9, 
  3.875602302592162*^9}},ExpressionUUID->"63539feb-6444-4474-9558-\
5f3cef8c9ecf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$VertexAssocAppend\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$VertexAssocAppend", "::", "tag"}], "=", 
   "\"\<UpDirec\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$VertexAssocAppend", "::", "input"}], "=", 
   "\"\<SSdata: the list {parent algebra, sorted parent highest weights, \
projection matrix}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$VertexAssocAppend", "::", "output"}], "=", 
   "\"\<{Node ID, bool}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$VertexAssocAppend", "::", "description"}], "=", 
    "\"\<Input uniquely specifies a node in the graph. If parent node exists, \
return ID and False. If not, create node and return ID and True\>\""}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$VertexAssocAppend", "[", "SSdata_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ret", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ret", "=", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"Flocci$VertexAssoc", ",", 
          RowBox[{"{", "SSdata", "}"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"need", " ", "extra", " ", 
        RowBox[{"{", "}"}], " ", "so", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "look", " ", "up", " ", "each", " ",
         "piece", " ", "of", " ", "data", " ", "separately"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ret", "==", 
         RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flocci$SSNode$MaxId", "+=", "1"}], ";", 
         RowBox[{"AssociateTo", "[", 
          RowBox[{"Flocci$VertexAssoc", ",", 
           RowBox[{"SSdata", "->", "Flocci$SSNode$MaxId"}]}], "]"}], ";", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"Flocci$SSNode$MaxId", ",", "True"}], "}"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"node", " ", "not", " ", "in", " ", "tree", " ", 
          RowBox[{"yet", ":", " ", 
           RowBox[{
           "add", " ", "and", " ", "return", " ", "new", " ", "id"}]}]}], 
         "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"ret", ",", "False"}], "}"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"node", " ", "in", " ", "tree"}], ",", " ", 
         RowBox[{"simply", " ", "return", " ", "id"}]}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868079889858794*^9, 3.868079933268018*^9}, {
   3.8680801052120943`*^9, 3.868080204112067*^9}, {3.868080235747575*^9, 
   3.868080339688513*^9}, {3.868080402957728*^9, 3.868080419844586*^9}, {
   3.868080451925424*^9, 3.868080606697774*^9}, {3.868080820518718*^9, 
   3.8680808692983913`*^9}, {3.868081017162526*^9, 3.868081018575922*^9}, {
   3.8691500241183853`*^9, 3.8691500250898743`*^9}, {3.869201466997614*^9, 
   3.869201502724431*^9}, {3.874576054967184*^9, 3.874576072544036*^9}, {
   3.874576110127923*^9, 3.87457612491374*^9}, {3.8745762459337587`*^9, 
   3.8745762971424437`*^9}, {3.874576331879231*^9, 3.8745763694808493`*^9}, {
   3.874576407118136*^9, 3.874576415682334*^9}, {3.8745764740642967`*^9, 
   3.874576547029978*^9}, {3.874576620560404*^9, 3.8745768059921427`*^9}, {
   3.8745838964330606`*^9, 3.874583939144985*^9}, {3.874584133194008*^9, 
   3.8745841342059937`*^9}, {3.875249362017091*^9, 3.875249365032175*^9}, {
   3.875595872881894*^9, 3.875595875771883*^9}, {3.87560234218297*^9, 
   3.875602345313271*^9}, 3.875602379057933*^9, {3.875602441200489*^9, 
   3.875602456040905*^9}, {3.877077555118244*^9, 3.877077555120103*^9}, {
   3.877439076602512*^9, 3.877439090863484*^9}, {3.87743927622545*^9, 
   3.877439488870522*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"1426e729-4a0a-46ec-b8ab-869d9ffcce48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$EdgeAssocAppend\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$EdgeAssocAppend", "::", "tag"}], "=", "\"\<UpDirec\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$EdgeAssocAppend", "::", "input"}], "=", 
   "\"\<SEdata: the list {Parent node ID -> Child node ID, projection matrix}\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$EdgeAssocAppend", "::", "output"}], "=", 
   "\"\<{Edge ID, bool}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$EdgeAssocAppend", "::", "description"}], "=", 
    "\"\<Input uniquely specifies an edge in the graph. If exists, return ID \
and False. If not, create edge and return ID and True\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$EdgeAssocAppend", "[", "SEdata_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ret", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ret", "=", 
       RowBox[{
        RowBox[{"Lookup", "[", 
         RowBox[{"Flocci$EdgeAssoc", ",", 
          RowBox[{"{", "SEdata", "}"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"need", " ", "extra", " ", 
        RowBox[{"{", "}"}], " ", "so", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "look", " ", "up", " ", "each", " ",
         "piece", " ", "of", " ", "data", " ", "separately"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ret", "==", 
         RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flocci$SSEdge$MaxId", "+=", "1"}], ";", 
         RowBox[{"AssociateTo", "[", 
          RowBox[{"Flocci$EdgeAssoc", ",", 
           RowBox[{"SEdata", "->", "Flocci$SSEdge$MaxId"}]}], "]"}], ";", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"Flocci$SSEdge$MaxId", ",", "True"}], "}"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"edge", " ", "not", " ", "in", " ", "tree", " ", 
          RowBox[{"yet", ":", " ", 
           RowBox[{
           "add", " ", "and", " ", "return", " ", "new", " ", "id"}]}]}], 
         "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"ret", ",", "False"}], "}"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"edge", " ", "in", " ", "tree"}], ",", " ", 
         RowBox[{"simply", " ", "return", " ", "id"}]}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868081414578673*^9, 3.868081543949194*^9}, {
   3.874576872413306*^9, 3.874576873626033*^9}, {3.8745769115474463`*^9, 
   3.874577047244548*^9}, {3.874583903322592*^9, 3.874583906407496*^9}, 
   3.874583945723103*^9, {3.8745841382789383`*^9, 3.874584139237753*^9}, {
   3.8752493689820843`*^9, 3.8752493721216793`*^9}, {3.875595878980999*^9, 
   3.8755958815516644`*^9}, {3.8756024934608603`*^9, 3.875602548853532*^9}, {
   3.877077623027631*^9, 3.87707762302936*^9}, {3.877439099793352*^9, 
   3.877439118127912*^9}, 3.877439529448082*^9, {3.877439562884406*^9, 
   3.877439633003706*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"bda4f4e2-c4ac-46a6-8fb8-699dae02826e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Other auxiliary functions", "Subsection",
 CellChangeTimes->{{3.8756037188820047`*^9, 
  3.875603730542511*^9}},ExpressionUUID->"56fea337-6064-4231-a962-\
598b4190d63f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$UnorderedTuples\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<len) An integer\\n max) An integer\>\"", 
      ",", "\"\<A integer 2-tensor\>\"", ",", 
      "\"\<A list of all vectors of length len, with numbers 1-max in \
decending order.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$UnorderedTuples", "[", 
   RowBox[{"len_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IntegerPartitions", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", "len", "}"}], ",", 
        RowBox[{"Range", "[", "max", "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"len", ",", 
       RowBox[{"max", "*", "len"}]}], "]"}]}], ",", "1"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "136814"}], "/", "unordered"}], "-", 
      RowBox[{"tuples", "?", "noredirect"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "&"}], "lq"}], "=", "1"}]}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868021117486857*^9, 3.868021117492077*^9}, {
  3.868021151801655*^9, 3.868021184922921*^9}, {3.87524934398069*^9, 
  3.87524934680859*^9}, {3.8755957312922688`*^9, 3.875595734333552*^9}, {
  3.875682195745277*^9, 3.875682293695921*^9}, {3.879323826547908*^9, 
  3.879323891080174*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"c829fcbb-0edd-42f0-a062-a0a1e560db98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$RaggedToFlat\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", 
      "\"\<A ragged list e.g. {{{1,2},{1,2}},{{3,4}}}\>\"", ",", 
      "\"\<A pair of the input flattened at 1 level e.g. {{1,2},{1,2},{3,4}}, \
and the length of each ragged part e.g. {2,1}\>\"", ",", 
      "\"\<Flattens the 1st level of a ragged list, and records the length, \
so that the ragged list can be reconstructed.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$RaggedToFlat", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flat", ",", "end", ",", "start", ",", "range"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flat", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"list", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"end", "=", 
       RowBox[{"Accumulate", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", "list"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"start", "=", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{"end", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "0"}], "]"}], "+", "1"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"range", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"start", ",", "end"}], "}"}], "//", "Transpose"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"flat", ",", "range"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875249375228175*^9, 3.875249377692499*^9}, 
   3.8752522960091*^9, {3.875595884808112*^9, 3.875595888176695*^9}, {
   3.8756819752700987`*^9, 3.875681988030073*^9}, {3.8756820357571363`*^9, 
   3.875682115178103*^9}, {3.879323908657126*^9, 3.879323995102043*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"7304ac1b-8c40-49d0-aadf-27284ba01b26"],

Cell[BoxData[{
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$SublistQ\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<UpDirec\>\"", ",", 
     "\"\<FullList) An Integer 2-tensor\\nSubList) An Integer 2-Tensor\>\"", 
     ",", "\"\<True or False.\>\"", ",", 
     "\"\<Outputs True if SubList is a sublist (accounting for \
multiplicities) of FullList.\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SublistQ", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FullList", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"SubList", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"https", ":"}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "questions"}], "/", "100660"}], "/"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Templist", ",", "pos"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Templist", "=", "SubList"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"Templist", ",", "si"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pos", "]"}], "\[NotEqual]", "0"}], ",", 
             " ", 
             RowBox[{"Templist", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"Templist", ",", 
                RowBox[{"pos", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
               "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"si", ",", "FullList"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Length", "[", "Templist", "]"}], "\[Equal]", "0"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompilePrint", "[", "Flocci$SublistQ", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8703511359598713`*^9, 3.870351189949339*^9}, {
  3.8703512201381073`*^9, 3.870351224351533*^9}, {3.870351394756176*^9, 
  3.87035152251931*^9}, {3.870351560364972*^9, 3.870351632526012*^9}, {
  3.870351993807913*^9, 3.870352037129431*^9}, {3.87524940997077*^9, 
  3.875249412441826*^9}, {3.875595919785981*^9, 3.875595923882926*^9}, {
  3.875604611762429*^9, 3.875604688842334*^9}, {3.879324039551058*^9, 
  3.879324105285692*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"92453a9d-3b54-48a4-ac76-97532c5ff19c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$SelectByMemberQ\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", 
      "\"\<hw2) A integer 2-tensor.\\n \[CapitalLambda]) A matrix.\\n \
\[CapitalPhi]t) An integer 2-tensor\>\"", ",", "\"\<An integer-2tensor\>\"", 
      ",", "\"\<Selects those elements of hw2 by weather \[CapitalLambda].# \
is in \[CapitalPhi]t.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SelectByMemberQ", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"hw2", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalLambda]", ",", "_Integer", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[CapitalPhi]t", ",", "_Integer", ",", "2"}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"hw2", ",", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"\[CapitalPhi]t", ",", 
          RowBox[{"\[CapitalLambda]", ".", "#"}]}], "]"}], "&"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
     RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompilePrint", "[", "Flocci$SelectByMemberQ", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87018671368672*^9, 3.870186724739884*^9}, {
   3.8701867679241962`*^9, 3.870186848868587*^9}, {3.870186905507134*^9, 
   3.870186914747272*^9}, {3.8701869833828897`*^9, 3.870186985475647*^9}, {
   3.87018707828465*^9, 3.870187138483797*^9}, {3.870187185133011*^9, 
   3.870187256310775*^9}, {3.8701873372204638`*^9, 3.870187342622117*^9}, {
   3.870189316428327*^9, 3.870189316685771*^9}, {3.870189387989764*^9, 
   3.870189438758996*^9}, 3.870190250473361*^9, {3.870190412977561*^9, 
   3.870190416226943*^9}, {3.870255839347785*^9, 3.870255840801532*^9}, {
   3.8702692018472548`*^9, 3.8702692033377533`*^9}, 3.870269594812892*^9, {
   3.870270161692635*^9, 3.870270162962924*^9}, {3.8702714179347267`*^9, 
   3.870271418203031*^9}, {3.8702766552294903`*^9, 3.870276655536244*^9}, {
   3.870328467723341*^9, 3.870328468567223*^9}, {3.870333935789806*^9, 
   3.870333937681037*^9}, {3.870344492874084*^9, 3.870344506389381*^9}, {
   3.875249423151848*^9, 3.875249425846614*^9}, {3.875596043199151*^9, 
   3.875596045668009*^9}, {3.8756085422855167`*^9, 3.875608598736321*^9}, {
   3.8793241564635277`*^9, 3.8793242605991297`*^9}},
 CellLabel->
  "In[640]:=",ExpressionUUID->"5b201234-b218-4ce2-ae0f-cd252a2a4f6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$NonnegativeMatrixQ\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<\[CapitalLambda]) An integer 2-tensor\>\"", 
      ",", "\"\<True or False\>\"", ",", 
      "\"\<Outputs True if all elements of \[CapitalLambda] are non-negative. \
Otherwise outputs False.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$NonnegativeMatrixQ", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[CapitalLambda]", ",", "_Integer", ",", "2"}], "}"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "bool", "}"}], ",", 
       RowBox[{
        RowBox[{"bool", "=", "True"}], ";", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"r", "<", "0"}], ",", 
            RowBox[{
             RowBox[{"bool", "=", "False"}], ";", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "\[CapitalLambda]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "p"}], "}"}]}], "]"}], ";", " ", "bool"}]}], 
      "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompilePrint", "[", "Flocci$NonnegativeMatrixQ", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.870429826871026*^9, {3.875249434134787*^9, 3.8752494374829283`*^9}, {
   3.8755960542472153`*^9, 3.875596057038024*^9}, {3.875597566270151*^9, 
   3.875597599664633*^9}, {3.879324279575616*^9, 3.8793243276228123`*^9}},
 CellLabel->
  "In[643]:=",ExpressionUUID->"57fa5775-3f89-456f-b056-b88d282dbe82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$HighestWeightMultiplicityId\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", 
      "\"\<inId) The id of a child node.\\n irrep) The projected ws of a \
parent node.\>\"", ",", "\"\<A 1-integer tensor or multiplicities.\>\"", ",", 
      "\"\<Runs Flocci$HighestWeightMultiplicity with the child node \
specified by inID.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$HighestWeightMultiplicityId", "[", 
    RowBox[{"inID_", ",", "irrep_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"irrepMult", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$HighestWeightMultiplicity", "[", 
          RowBox[{"irrep", ",", 
           RowBox[{"Flocci$SSNode$DeltaCoprime", "[", "inID", "]"}], ",", 
           RowBox[{"Flocci$SSNode$HWsMult", "[", "inID", "]"}], ",", 
           RowBox[{"Flocci$SSNode$UniHWs", "[", "inID", "]"}], ",", 
           RowBox[{"Flocci$SSNode$UniIrrepDominFlat", "[", "inID", "]"}], ",", 
           RowBox[{"Flocci$SSNode$UniIrrepDominRange", "[", "inID", "]"}]}], 
          "]"}], "//", "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<CanEmbedProjWS: 23\>\"", "]"}]}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "irrepMult", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"Return", "[", "Nothing", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "irrepMult"}]}], 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
       RowBox[{"if", " ", "can", " ", "embed"}], ",", " ", 
       RowBox[{"has", " ", 
        RowBox[{"form", ":", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"irrepMult", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"parent", " ", "hw"}], ",", " ", 
              RowBox[{"parent", " ", "ws"}]}], "}"}]}], "}"}], " ", 
          RowBox[{"eg", ".", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], " ", ",", " ", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "1", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "}"}], " ", ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", "..."}], 
                "}"}]}], " ", "}"}]}], " ", "}"}]}]}]}]}]}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", "]"}]}],
   ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.869844543312881*^9, 3.8698446837562923`*^9}, {
   3.86984478945404*^9, 3.869844790153315*^9}, 3.869844841734168*^9, {
   3.869844874619996*^9, 3.869844881680633*^9}, {3.869892020053748*^9, 
   3.869892027218438*^9}, 3.869892222254314*^9, 3.8698922931527233`*^9, {
   3.869892522634087*^9, 3.869892539313486*^9}, {3.8698926669132233`*^9, 
   3.869892694053104*^9}, {3.8698930144321337`*^9, 3.869893045411839*^9}, {
   3.869894165953868*^9, 3.8698941662776213`*^9}, {3.869897227657095*^9, 
   3.8698972942746964`*^9}, {3.8702654257038*^9, 3.87026542676064*^9}, {
   3.870265546444861*^9, 3.870265554788086*^9}, {3.870265730106988*^9, 
   3.870265749037672*^9}, {3.8702658543294487`*^9, 3.870265866838532*^9}, {
   3.8702661180559263`*^9, 3.870266126797707*^9}, 3.87026956227386*^9, 
   3.870447410954479*^9, {3.875249414946957*^9, 3.875249420157777*^9}, {
   3.875595928157504*^9, 3.875595930587846*^9}, {3.875604740020959*^9, 
   3.875604740369857*^9}, 3.8756061525692873`*^9, {3.8756063519296303`*^9, 
   3.875606362865261*^9}, 3.876230576962503*^9, {3.87707520425099*^9, 
   3.8770752091186028`*^9}, {3.877075283791438*^9, 3.877075286069738*^9}, {
   3.877075461762241*^9, 3.877075474309452*^9}, {3.8770755487372427`*^9, 
   3.87707555205228*^9}, {3.8770757750900717`*^9, 3.877075777948132*^9}, {
   3.8793243623901567`*^9, 3.879324426603656*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"d0e948f9-ac33-4720-a703-b253a80c10f7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Make parent nodes", "Subsection",
 CellChangeTimes->{{3.86773803652433*^9, 3.867738037949006*^9}, 
   3.867743632968955*^9, {3.8689699640418797`*^9, 3.868969966046645*^9}, {
   3.869141003056151*^9, 3.869141012487336*^9}, {3.875603924308065*^9, 
   3.8756039277570963`*^9}},ExpressionUUID->"778f1c73-8392-4b18-83cc-\
33c8cec1ccef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SSNode$AlgebraList", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flocci$SSNode$Algebra", "[", "i", "]"}], ",", 
       RowBox[{"Flocci$SSNode$HWs", "[", "i", "]"}], ",", 
       RowBox[{"Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "i", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "Flocci$SSNode$MaxId"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SSEdge$EdgeList", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flocci$SSEdge$Edge", "[", "i", "]"}], ",", 
      RowBox[{"Flocci$SSEdge$\[CapitalLambda]\[Rho]", "[", "i", "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "Flocci$SSEdge$MaxId"}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8677437678968763`*^9, 3.867743821332999*^9}, 
   3.8677440516035347`*^9, {3.867832150769412*^9, 3.867832153416316*^9}, 
   3.8678322457909927`*^9, {3.875249380612067*^9, 3.875249383945435*^9}, {
   3.875595899432575*^9, 3.875595902207308*^9}, {3.8770736043458843`*^9, 
   3.8770736077185593`*^9}, {3.877074068873019*^9, 3.877074072486261*^9}, 
   3.877074448254348*^9, 3.877074513147821*^9, {3.877075904431169*^9, 
   3.8770759060421953`*^9}, 3.877077555121262*^9, {3.877416626259076*^9, 
   3.8774166418818808`*^9}, {3.8774177128999977`*^9, 3.877417713659503*^9}, {
   3.877417756649275*^9, 3.877417761424343*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"ec7684de-871c-4915-be8f-dbbd33eb7749"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testreps", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flocci$MakeParentNodes", "[", "i", "]"}], "[", 
   RowBox[{
    RowBox[{"Flocci$MinimalSupAlgebras", "[", 
     RowBox[{
      RowBox[{"Flocci$SSNode$Algebra", "[", "i", "]"}], ",", 
      "Flocci$User$MaxAlgList"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testrepsAll", "[", "i_", "]"}], ":=", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flocci$MakeParentNodes", "[", "i", "]"}], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Flocci$MinimalSupAlgebras", "[", 
        RowBox[{
         RowBox[{"Flocci$SSNode$Algebra", "[", "i", "]"}], ",", 
         "Flocci$User$MaxAlgList"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.870500823000416*^9, 3.87050085608342*^9}, 
   3.872257692231138*^9, {3.875603876397023*^9, 3.8756038778005123`*^9}, {
   3.8756084058997927`*^9, 3.875608410539706*^9}, {3.8769141536332273`*^9, 
   3.876914157232126*^9}, {3.877073612688994*^9, 3.877073624962925*^9}, {
   3.8770744482552443`*^9, 3.877074448255849*^9}, {3.877077804023528*^9, 
   3.877077804024206*^9}},ExpressionUUID->"0f9a2648-3e5e-4ee7-a953-\
0dfdd2b583ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$MakeParentNodes\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", 
      "\"\<inID) The id of the child node to be considered.\\n g)A \
semi-simple Lie algebra \\n \[CapitalLambda]) A projection matrix such that \
(g,\[CapitalLambda]) define a minimal sup algebra of inID.\>\"", ",", 
      "\"\<None.\>\"", ",", 
      "\"\<Finds all parent nodes in the UpDirec graph of the child node \
inID.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$MakeParentNodes", "[", "inID_", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"g_", ",", "\[CapitalLambda]_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "irrepsL", ",", "elWS", ",", "\[CapitalLambda]ws", ",", "f", ",", 
       "counts", ",", "keys", ",", "c2", ",", "WSSubSets", ",", "level0", ",",
        "allLevel", ",", "allLeveln", ",", "nint", ",", "np", ",", " ", 
       "sols", ",", "a", ",", "listReps", ",", "t", ",", "level03", ",", 
       "pos", ",", "thisid", ",", "out", ",", "\[CapitalLambda]\[Alpha]t", 
       ",", "\[CapitalLambda]\[Rho]t", ",", "out\[Beta]", ",", "posed", ",", 
       "aut\[CapitalLambda]\[Alpha]", ",", "or", ",", "tot", ",", "part", ",",
        "ut", ",", "tt", ",", "SSalgebrasave", ",", "bool", ",", "booled", 
       ",", "level01", ",", "thised", ",", "\[CapitalLambda]t", ",", "temp", 
       ",", "tempe", ",", "lengths", ",", "selectList", ",", "lookup", ",", 
       "dim", ",", "hw1", ",", "hw2", ",", "hwws", ",", "ranklist", ",", 
       "selectListT", ",", "\[CapitalPhi]d", ",", "gtake", ",", "dimlist", 
       ",", "AnomList", ",", "anomalycoef", ",", "parts2", ",", 
       "\[Beta]multT", ",", "assoicationmap", ",", "out\[Beta]Association", 
       ",", "tempA", ",", "ord", ",", "outused", ",", "ordInv"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{"Step", " ", "1"}], ":", " ", 
         RowBox[{
         "We", " ", "find", " ", "all", " ", "irreps", " ", "of", " ", 
          "g"}]}], ",", " ", 
        RowBox[{
        "of", " ", "dimension", " ", "less", " ", "than", " ", "or", " ", 
         "equal", " ", "to", " ", "the", " ", "dimension", " ", 
         RowBox[{"of", " ", "\\", "tilde", " ", "\\", 
          RowBox[{"beta", ".", " ", "The"}]}], " ", "output", " ", "is", " ", 
         "pairs", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\\", "beta"}], ",", 
           RowBox[{
            RowBox[{"\\", "Phi"}], 
            RowBox[{"(", 
             RowBox[{"\\", "beta"}], ")"}]}]}], "}"}], " ", "of", " ", 
         "heighest", " ", "weights"}], ",", " ", 
        RowBox[{"and", " ", "weight", " ", 
         RowBox[{"systems", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dim", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Flocci$SSNode$WS", "[", "inID", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"A", " ", "natural", " ", 
         RowBox[{"number", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"hw2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "[", 
          RowBox[{"g", ",", "dim", ",", "Flocci$User$A1Dim"}], "]"}], "//", 
         "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 1\>\"", "]"}]}]}], ";", " ", 
      
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"An", " ", "integer", " ", "2"}], "-", 
         RowBox[{"tensor", " ", "of", " ", "highest", " ", 
          RowBox[{"weights", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"Step", " ", "2"}], ":", " ", 
          RowBox[{
          "We", " ", "append", " ", "to", " ", "\[CapitalLambda]ws"}]}], ",", 
         " ", 
         RowBox[{"the", " ", "projection", " ", "of", " ", "\[CapitalPhi]", 
          RowBox[{"(", "\[Beta]", ")"}], " ", "under", " ", "the", " ", 
          "projection", " ", "matrix", " ", 
          RowBox[{"\[CapitalLambda]\[Rho]", ".", " ", "This"}], " ", 
          "contains", " ", 
          RowBox[{"a", " ", "'"}], 
          RowBox[{"necessary", "'"}], " ", 
          RowBox[{"(", 
           RowBox[{"but", " ", "not", " ", "sufficent"}], ")"}], " ", "test", 
          " ", "of", " ", "wether", " ", "\[CapitalLambda]", 
          RowBox[{"(", 
           RowBox[{"\[CapitalPhi]", 
            RowBox[{"(", "\[Beta]", ")"}]}], ")"}], " ", "is", " ", "a", " ", 
          "subset", " ", "of", " ", "\[CapitalPhi]", 
          RowBox[{
           RowBox[{"(", "t\[Beta]", ")"}], "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"tempe", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"AssociationMap", "[", 
            RowBox[{
             RowBox[{"True", "&"}], ",", 
             RowBox[{"Flocci$SSNode$WS", "[", "inID", "]"}]}], "]"}], "//", 
           "Timing"}], "//", 
          RowBox[{"Flocci$Timing", "[", "\"\<reps: 2.1\>\"", "]"}]}]}], ";"}],
        "*)"}], " ", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"A", " ", "hash", " ", 
         RowBox[{"table", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\n", "\[IndentingNewLine]", 
      
      RowBox[{"\[CapitalLambda]t", "=", 
       RowBox[{"Transpose", "[", "\[CapitalLambda]", "]"}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"A", " ", 
         RowBox[{"matrix", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ranklist", "=", 
       RowBox[{"Flocci$Rank", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"\[CapitalPhi]d", "=", 
       RowBox[{"Flocci$ExtractDominantWeights", "[", 
        RowBox[{"Flocci$SSNode$WS", "[", "inID", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"Should", " ", "make", " ", "global", " ", "varible"}],
        FontColor->RGBColor[1, 0, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalPhi]temp", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Flocci$NonnegativeMatrixQ", "[", "\[CapitalLambda]", "]"}], 
              ",", 
              RowBox[{"DeleteDuplicates", "[", "\[CapitalPhi]d", "]"}], ",", 
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"Flocci$SSNode$WS", "[", "inID", "]"}], "]"}]}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"selectList", "=", 
            RowBox[{"Flocci$SelectByMemberQ", "[", 
             RowBox[{
             "hw2", ",", "\[CapitalLambda]", ",", "\[CapitalPhi]temp"}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "//", "Timing"}],
        "//", 
       RowBox[{"Flocci$Timing", "[", "\"\<reps: 2.1-2\>\"", "]"}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"An", " ", "integer", " ", "2"}], "-", 
         RowBox[{"tensor", " ", "of", " ", "highest", " ", 
          RowBox[{"weights", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", "\n", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"selectList", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Pick", "[", 
            RowBox[{"hw2", ",", 
             RowBox[{"Lookup", "[", 
              RowBox[{"tempe", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Flatten", "/@", "hw2"}], ")"}], ".", 
                "\[CapitalLambda]t"}], ",", "False"}], "]"}]}], "]"}], "//", 
           "Timing"}], "//", 
          RowBox[{"Flocci$Timing", "[", "\"\<reps: 2.2\>\"", "]"}]}]}], ";"}],
        "*)"}], 
      RowBox[{"(*", 
       RowBox[{
       "select", " ", "those", " ", "hws", " ", "that", " ", "project", " ", 
        "into", " ", "ws"}], "*)"}], "\[IndentingNewLine]", "        ", 
      RowBox[{"assoicationmap", "=", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"selectList", ",", 
         RowBox[{
          RowBox[{"Flocci$ExtractDominantWeights", "[", 
           RowBox[{
            RowBox[{"Flocci$WeightSystemSorted", "[", 
             RowBox[{"g", ",", "#"}], "]"}], ".", "\[CapitalLambda]t"}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
         "with", " ", "keys", " ", "as", " ", "projected", " ", "weight", " ",
           "systems"}], ",", " ", 
         RowBox[{"and", " ", "values", " ", "as", " ", "highest", " ", 
          RowBox[{"weights", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"Step", " ", "3"}], ":", " ", 
         RowBox[{
         "We", " ", "throw", " ", "away", " ", "all", " ", "irreps", " ", 
          "which", " ", "do", " ", "not", " ", "have", " ", 
          "\[CapitalLambda]", 
          RowBox[{"(", 
           RowBox[{"\[CapitalPhi]", 
            RowBox[{"(", "\[Beta]", ")"}]}], ")"}], " ", "a", " ", "subset", 
          " ", "of", " ", "\[CapitalPhi]", 
          RowBox[{
           RowBox[{"(", "t\[Beta]", ")"}], "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"level0", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"KeySelect", "[", 
          RowBox[{"assoicationmap", ",", 
           RowBox[{
            RowBox[{"Flocci$SublistQ", "[", 
             RowBox[{"\[CapitalPhi]d", ",", "#"}], "]"}], "&"}]}], "]"}], "//",
          "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 3.1\>\"", "]"}]}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"See", " ", "lengths"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Maybe", " ", "able", " ", "to", " ", "use", " ", "some", " ", 
         "partition", " ", "of", " ", "integers", " ", "here"}],
        FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"level01", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"KeyDrop", "[", 
          RowBox[{
           RowBox[{"KeyMap", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flocci$HighestWeightMultiplicityId", "[", 
               RowBox[{"inID", ",", "#"}], "]"}], "&"}], ",", "level0"}], 
            "]"}], ",", "Nothing"}], "]"}], "//", "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 3.2\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["list",
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["of",
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0.5, 0]], 
        RowBox[{
         StyleBox["pairs",
          FontColor->RGBColor[1, 0.5, 0]], 
         StyleBox[":",
          FontColor->RGBColor[1, 0.5, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0.5, 0]], " ", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"irrepMult", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"parent", " ", "hw"}], ",", " ", 
              RowBox[{"parent", " ", "ws"}]}], "}"}]}], "}"}],
          FontColor->RGBColor[1, 0.5, 0]]}]}], "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "level01", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"Step", " ", "4"}], ":", " ", 
         RowBox[{
         "We", " ", "find", " ", "all", " ", "reducible", " ", 
          "representations", " ", 
          RowBox[{"(", 
           RowBox[{"g", ",", "\[Beta]"}], ")"}], " ", "which", " ", "branch", 
          " ", "down", " ", "to", " ", 
          RowBox[{"(", 
           RowBox[{"tg", ",", " ", "t\[Beta]"}], ")"}], " ", "under", " ", 
          RowBox[{"\[Rho]", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"listReps", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"listRepsF", "[", 
            RowBox[{"inID", ",", "level01", ",", "g"}], "]"}], "//", 
           "Timing"}], "//", 
          RowBox[{"Flocci$Timing", "[", "\"\<reps: 4\>\"", "]"}]}]}], ";"}], 
       "*)"}], " ", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"A", " ", "list", " ", "of", " ", 
              RowBox[{"pairs", ":", " ", "1"}]}], ")"}], " ", "List", " ", 
            "of", " ", "hws"}], ",", " ", "2"}], ")"}], " ", "Weight", " ", 
         "system"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "now", " ", "solve", " ", "the", " ", "simultanous", " ", 
         "Frobenius", " ", 
         RowBox[{"equations", "."}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]multT", "=", 
       RowBox[{"Flocci$SSNode$HWsMult", "[", "inID", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allLevel", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Flocci$FrobeniusSimSolve", "[", 
            RowBox[{
             RowBox[{"Keys", "[", "level01", "]"}], ",", "\[Beta]multT"}], 
            "]"}], ",", "1"}], "]"}], "//", "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 4.3\>\"", "]"}]}]}], ";", 
      " ", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{"A", " ", "list", " ", "of", " ", "non"}], "-", 
         RowBox[{"negative", " ", "integer", " ", 
          RowBox[{"solutions", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "hwEqualTup", ",", "hwAllTup", ",", "hwAllTupFlat", ",", "unihw", 
          ",", "anomAssoMap", ",", "anomFree", ",", "faithful"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hwEqualTup", "=", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"level01", "[", 
                 RowBox[{
                  RowBox[{"Keys", "[", "level01", "]"}], 
                  "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
                 "]"}], "\[LeftDoubleBracket]", "#", 
                "\[RightDoubleBracket]"}], "&"}], ",", 
              RowBox[{"Flocci$UnorderedTuples", "[", 
               RowBox[{
                RowBox[{
                "sol", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}],
                 ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"level01", "[", 
                  RowBox[{
                   RowBox[{"Keys", "[", "level01", "]"}], 
                   "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
                  "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"sol", ",", "allLevel"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"Length", "[", "sol", "]"}]}], "}"}]}], "]"}]}], ";", 
         " ", 
         RowBox[{"(*", 
          RowBox[{
          "Could", " ", "do", " ", "this", " ", "with", " ", "a", " ", 
           "compiled", " ", "unordered", " ", "Tuples"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"hwAllTup", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Tuples", ",", "hwEqualTup"}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"hwAllTupFlat", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", "hwAllTup"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "We", " ", "select", " ", "those", " ", "which", " ", "act", " ", 
            "faithfully"}],
           FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"faithful", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"hwAllTupFlat", ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"TakeList", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "#", "]"}], ",", 
                  RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], " ", ",", 
                "LinearAlgebra`Private`ZeroArrayQ"}], "]"}]}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"faithful", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{
            RowBox[{"Return", "[", "]"}], ";"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "We", " ", "find", " ", "the", " ", "anomaly", " ", "cancelations",
             " ", "association", " ", "map"}],
           FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"unihw", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"faithful", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"gtake", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"Transpose", ",", 
            RowBox[{"TakeList", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "unihw", "]"}], ",", 
              RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"dimlist", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"Flocci$WeightSystemSorted", "[", 
               RowBox[{"g", ",", "#"}], "]"}], "]"}], "&"}], ",", "unihw"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AnomList", "=", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$TypeAQ", "[", 
                 RowBox[{
                 "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "]"}], "&&", 
                RowBox[{"!", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "g", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "===", "A1"}], ")"}]}]}], ",", 
               " ", 
               RowBox[{"Flocci$AnomCoeffCompiled", "[", 
                RowBox[{
                 RowBox[{
                 "gtake", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", "dimlist"}], "]"}], ",", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"Length", "[", "dimlist", "]"}]}], "]"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "//", 
           "Transpose"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"anomAssoMap", "=", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"unihw", ",", "AnomList"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "We", " ", "select", " ", "those", " ", "with", " ", "anomaly", 
            " ", "cancleation"}],
           FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"anomFree", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"faithful", ",", 
            RowBox[{
             RowBox[{"LinearAlgebra`Private`ZeroArrayQ", "[", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"anomAssoMap", "[", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}], "]"}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "Adding", " ", "the", " ", "weight", " ", "systems", " ", "in"}],
           FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"listReps", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"Sort", "[", 
                RowBox[{"Join", "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Flocci$WeightSystemSorted", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], 
                "]"}]}], "}"}], "&"}], ",", "anomFree"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"Step", " ", "5"}], ":", " ", 
          RowBox[{
          "We", " ", "test", " ", "whether", " ", "the", " ", "triple", " ", 
           RowBox[{"(", 
            RowBox[{"g", ",", "\[Beta]", ",", "\[CapitalLambda]\[Alpha]"}], 
            ")"}], " ", "allow", " ", "a", " ", "valid", " ", "u", 
           RowBox[{"(", "1", ")"}], " ", "obeying", " ", "the", " ", 
           "ACCs"}]}], ",", " ", 
         RowBox[{"after", " ", "possible", " ", 
          RowBox[{"extention", "."}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Is", " ", "it", " ", "doing", " ", "matrix", " ", "multiplication", 
         " ", "here", " ", "for", " ", "every", " ", 
         RowBox[{"entry", "?"}]}],
        FontColor->RGBColor[1, 0, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"Flocci$User$U1sPresentBool", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listReps", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"Flocci$anomalyFreeU1Addition", "[", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$AnomFreeCharges", "[", "inID", "]"}], ",", 
                    
                    RowBox[{"Flocci$SSNode$WS", "[", "inID", "]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "\[CapitalLambda]"}], 
                   "]"}], "]"}]}], "}"}], "&"}], ",", "listReps"}], "]"}], "//",
             "Timing"}], "//", 
           RowBox[{"Flocci$Timing", "[", "\"\<reps: 5.1\>\"", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"listReps", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"listReps", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                 "]"}], ">", " ", "0"}], " ", "&"}]}], "]"}], "//", 
            "Timing"}], "//", 
           RowBox[{"Flocci$Timing", "[", "\"\<reps: 5.2\>\"", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"listReps", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"listReps", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Flocci$chargeAlignment", "[", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "g", ",", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "inID", 
                    "]"}], ".", "\[CapitalLambda]"}], ",", 
                   "Flocci$User$IrrepWeightLocation"}], "]"}], "]"}], ">", 
                "0"}], "&"}]}], "]"}], "//", "Timing"}], "//", 
           RowBox[{"Flocci$Timing", "[", "\"\<reps: 5.3\>\"", "]"}]}]}], 
         ";"}]}], 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"See", " ", "listReps", " ", "above"}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"Step", " ", "6"}], ":", " ", 
          RowBox[{
           RowBox[{"We", " ", "take", " ", "our", " ", "representations", " ", 
            RowBox[{"(", 
             RowBox[{"g", ",", "\[Beta]"}], ")"}], " ", "to", " ", "our", " ",
             "chosen", " ", "representative", " ", "of", " ", "the", " ", 
            "equvilence", " ", 
            RowBox[{"class", " ", "\[LeftDoubleBracket]", 
             RowBox[{"g", ",", "\[Beta]"}], "\[RightDoubleBracket]"}], " ", 
            "defined", " ", "by", " ", "out"}], "-", 
           RowBox[{"automorphism", " ", "of", " ", "g", " ", "on", " ", 
            RowBox[{"\[Beta]", ".", " ", "We"}], " ", "save", " ", "the", " ",
             "outer"}], "-", "automorphism"}]}], ",", " ", 
         RowBox[{"for", " ", "later", " ", 
          RowBox[{"use", ".", "\[IndentingNewLine]", "We"}], " ", "must", " ",
           "do", " ", "this"}], ",", " ", 
         RowBox[{
          RowBox[{
          "since", " ", "we", " ", "only", " ", "one", " ", "\[Rho]", " ", 
           "per"}], "-", 
          RowBox[{
          "equivelence", " ", "class", " ", "defined", " ", "by", " ", 
           "automorphism", " ", "of", " ", 
           RowBox[{"g", "."}]}]}]}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$OuterAutomorphisms", "[", "g", "]"}], "//", 
         "Timing"}], "//", 
        RowBox[{"Flocci$Timing", "[", "\"\<reps: 6.1\>\"", "]"}]}]}], ";", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"A", " ", "list", " ", "of", " ", "vectors", " ", "of", " ", 
         RowBox[{"integers", ".", " ", "Each"}], " ", "vector", " ", "of", 
         " ", "integers", " ", "corresponds", " ", "to", " ", "the", " ", 
         "columns", " ", "where", " ", "the", " ", "1", " ", "appears", " ", 
         "in", " ", "the", " ", "projection", " ", 
         RowBox[{"matrix", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"out\[Beta]Association", "=", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"listReps", ",", 
         RowBox[{
          RowBox[{"Flocci$OuterAutTakeWsToMinAndGroupPreserveMin", "[", 
           RowBox[{"out", ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"out\[Beta]Association", "=", 
       RowBox[{"If", "[", 
        RowBox[{"Flocci$User$U1sPresentBool", ",", "\[IndentingNewLine]", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "out\[Beta]Association", "]"}], "\[Rule]", 
           " ", 
           RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ord", "=", 
                  RowBox[{"Ordering", "[", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "All", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "All"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "]"}], "]"}]}], ";", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "All", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                   RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "All", ",", "ord"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"o", ",", "#2"}], "}"}]}], "]"}], 
              "\[IndentingNewLine]", "&"}], ",", "out\[Beta]Association"}], 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "out\[Beta]Association", "]"}], "\[Rule]", 
           " ", 
           RowBox[{"KeyValueMap", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"o", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "All", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                  ",", 
                  RowBox[{"Sort", "[", 
                   RowBox[{"o", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "All", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"o", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
             "out\[Beta]Association"}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\[CapitalLambda]\[Alpha]t", ",", "\[CapitalLambda]\[Rho]t", ",", 
            "aut\[CapitalLambda]\[Alpha]", ",", "outused"}], "}"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Flocci$ProjectionMatricesUniqueForm", "[", 
             RowBox[{
              RowBox[{
              "Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "inID", "]"}], 
              ",", 
              RowBox[{"\[CapitalLambda]", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", 
                RowBox[{
                "out\[Beta]", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], ",", 
              
              RowBox[{
              "out\[Beta]", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", "g", ",", 
              RowBox[{
              "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", "inID", 
               "]"}]}], "]"}], "//", "Timing"}], " ", "//", 
           RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.1\>\"", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"thisid", ",", "bool"}], "}"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"SSDecisionTreeAppend", "[", 
                RowBox[{"g", ",", 
                 RowBox[{
                 "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", "\[CapitalLambda]\[Alpha]t"}], "]"}], "//", "Timing"}], 
              " ", "//", 
              RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.2\>\"", "]"}]}]}], 
            ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"thisid", ",", "bool"}], "}"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Flocci$VertexAssocAppend", "[", 
                RowBox[{"{", 
                 RowBox[{"g", ",", 
                  RowBox[{
                   RowBox[{
                   "r", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "//", "Sort"}], ",", 
                  "\[CapitalLambda]\[Alpha]t"}], "}"}], "]"}], "//", 
               "Timing"}], " ", "//", 
              RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.2\>\"", "]"}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"pos", "=", 
               RowBox[{"FirstPosition", "[", 
                RowBox[{"Flocci$SSNode$AlgebraList", ",", 
                 RowBox[{"{", 
                  RowBox[{"g", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   "\[CapitalLambda]\[Alpha]t"}], "}"}]}], "]"}]}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"bool", ",", 
              RowBox[{"(*", 
               RowBox[{
               "We", " ", "check", " ", "if", " ", "we", " ", "are", " ", 
                "making", " ", "a", " ", "duplicate", " ", "or", " ", "not"}],
                "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flocci$SSNode$Algebra", "[", "thisid", "]"}], 
                    "=", "g"}], ";", " ", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"A", " ", "list", " ", "of", " ", 
                    RowBox[{"algebras", "."}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$HWs", "[", "thisid", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "//", "Sort"}]}], ";", " ", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "A", " ", "list", " ", "of", " ", "hw", " ", "seperated", 
                    " ", "by", " ", "simple", " ", 
                    RowBox[{"ideals", ".", " ", "e", ".", "g", ".", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$WS", "[", "thisid", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "//", "Sort"}]}], ";", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"A", " ", "list", " ", "of", " ", 
                    RowBox[{"vectors", ".", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], " ", 
                    "of", " ", "all", " ", "weights"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "thisid", 
                    "]"}], "=", "\[CapitalLambda]\[Alpha]t"}], ";", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"A", " ", "matrix"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", 
                    "thisid", "]"}], "=", "aut\[CapitalLambda]\[Alpha]"}], 
                   ";", " ", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{"A", " ", "list", " ", "of", " ", "matrices"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"ord", "=", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"r", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "All"}], "\[RightDoubleBracket]"}], ".", 
                    RowBox[{"Transpose", "[", "outused", "]"}]}], "]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"ordInv", "=", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "ord", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ordInv", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "ord", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "=",
                     "i"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "ord", "]"}]}], "}"}]}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{"Flocci$User$U1sPresentBool", ",", 
                    RowBox[{
                    RowBox[{
                    "Flocci$SSNode$AnomFreeCharges", "[", "thisid", "]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "ordInv"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$Delta", "[", "thisid", "]"}], "=", 
                    
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$MetricTensor", "[", "a", "]"}], ".", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Flocci$Rank", "[", "a", "]"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", 
                    RowBox[{"Flocci$SSNode$Algebra", "[", "thisid", "]"}]}], 
                    "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$DeltaCoprime", "[", "thisid", "]"}], "=", 
                    RowBox[{
                    RowBox[{"Flocci$SSNode$Delta", "[", "thisid", "]"}], "/", 
                    
                    RowBox[{"GCD", "@@", 
                    RowBox[{"Flocci$SSNode$Delta", "[", "thisid", "]"}]}]}]}],
                    ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$UniHWs", "[", "thisid", "]"}], "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Tally", "[", 
                    RowBox[{"Flocci$SSNode$HWs", "[", "thisid", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    ")"}]}], ";", 
                   RowBox[{"(*", 
                    RowBox[{"child", " ", "hws", " ", 
                    RowBox[{"(", "flattened", ")"}], " ", 
                    RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$HWsMult", "[", "thisid", "]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"Tally", "[", 
                    RowBox[{"Flocci$SSNode$HWs", "[", "thisid", "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
                   RowBox[{"(*", 
                    RowBox[{
                    "list", " ", "of", " ", "their", " ", "multiplicities"}], 
                    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSNode$UniIrrepDomin", "[", "thisid", "]"}], "=", 
                    
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$ExtractDominantWeights", "[", 
                    RowBox[{"Flocci$WeightSystemSorted", "[", 
                    RowBox[{
                    RowBox[{"Flocci$SSNode$Algebra", "[", "thisid", "]"}], 
                    ",", "#"}], "]"}], "]"}], "&"}], ",", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Flocci$SSNode$HWs", "[", "thisid", "]"}], 
                    "]"}]}], "]"}]}], ";", " ", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    "A", " ", "list", " ", "of", " ", "lists", " ", "of", " ",
                     "vectors"}], ",", " ", 
                    RowBox[{
                    "where", " ", "each", " ", "sublist", " ", "is", " ", 
                    "the", " ", "weight", " ", "system", " ", "of", " ", "a", 
                    " ", "unique", " ", 
                    RowBox[{"hw", "."}]}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "Flocci$SSNode$UniIrrepDominFlat", "[", "thisid", "]"}], 
                    ",", 
                    RowBox[{
                    "Flocci$SSNode$UniIrrepDominRange", "[", "thisid", 
                    "]"}]}], "}"}], "=", 
                    RowBox[{"Flocci$RaggedToFlat", "[", 
                    RowBox[{
                    "Flocci$SSNode$UniIrrepDomin", "[", "thisid", "]"}], 
                    "]"}]}], ";"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "//", "Timing"}], " ", ")"}], "//", 
                RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.3\>\"", "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"thised", ",", "booled"}], "}"}], "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"SEDecisionTreeAppend", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"thisid", "\[Rule]", " ", "inID"}], ")"}], ",", 
                   "\[CapitalLambda]\[Rho]t"}], "]"}], "//", "Timing"}], " ", 
                "//", 
                RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.4\>\"", "]"}]}]}], 
              ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"thised", ",", "booled"}], "}"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Flocci$EdgeAssocAppend", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"thisid", "\[Rule]", " ", "inID"}], ",", 
                  "\[CapitalLambda]\[Rho]t"}], "}"}], "]"}], "//", "Timing"}],
               " ", "//", 
              RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.4\>\"", "]"}]}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"booled", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flocci$SSEdge$Edge", "[", "thised", "]"}], "=", 
                    RowBox[{"thisid", "\[Rule]", " ", "inID"}]}], ";", "  ", 
                   RowBox[{"(*", 
                    StyleBox[
                    RowBox[{
                    "A", " ", "rule", " ", "specifying", " ", "the", " ", 
                    "parent", " ", "and", " ", "child", " ", 
                    RowBox[{"node", "."}]}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Flocci$SSEdge$\[CapitalLambda]\[Rho]", "[", "thised", 
                    "]"}], "=", "\[CapitalLambda]\[Rho]t"}], ";"}], 
                  RowBox[{"(*", 
                   StyleBox[
                    RowBox[{"A", " ", "matrix"}],
                    FontColor->RGBColor[1, 0.5, 0]], "*)"}], "//", "Timing"}],
                  ")"}], " ", "//", 
                RowBox[{"Flocci$Timing", "[", "\"\<reps: 9.5\>\"", "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
            "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"out\[Beta]Association", "[", "out\[Beta]", "]"}]}], 
            "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"out\[Beta]", ",", 
          RowBox[{"Keys", "[", "out\[Beta]Association", "]"}]}], "}"}]}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867738100030183*^9, 3.867738126707198*^9}, {
   3.867738186632538*^9, 3.8677383478548813`*^9}, {3.8677383838820963`*^9, 
   3.867738519926587*^9}, 3.867738674368726*^9, {3.867738712753972*^9, 
   3.8677388903135138`*^9}, {3.867738921691668*^9, 3.867739011491684*^9}, {
   3.867739046211773*^9, 3.8677391152383127`*^9}, 3.867739578446476*^9, {
   3.867740179259906*^9, 3.867740181526898*^9}, {3.8677403775755377`*^9, 
   3.867740507474985*^9}, {3.867740558521824*^9, 3.867740687699933*^9}, {
   3.867740767290723*^9, 3.867740776049472*^9}, {3.867740817807267*^9, 
   3.867740822759556*^9}, {3.867741192899539*^9, 3.867741208035046*^9}, {
   3.867741238091845*^9, 3.867741240744178*^9}, {3.8677412801859617`*^9, 
   3.867741339262237*^9}, {3.867741377755589*^9, 3.867741380666819*^9}, {
   3.867741432450572*^9, 3.867741504675581*^9}, {3.867741551195204*^9, 
   3.867741556331829*^9}, {3.86774307820722*^9, 3.867743098379991*^9}, {
   3.8677431369528522`*^9, 3.867743137564172*^9}, {3.86774330437433*^9, 
   3.867743325829303*^9}, {3.867743759924348*^9, 3.867743762804019*^9}, {
   3.867743831787305*^9, 3.867743956134693*^9}, {3.8677441771642723`*^9, 
   3.8677441915496597`*^9}, {3.867744292538581*^9, 3.8677442927665787`*^9}, {
   3.867744983532875*^9, 3.867745032171431*^9}, {3.8677451061350946`*^9, 
   3.867745177391863*^9}, {3.867745352540391*^9, 3.867745383608453*^9}, {
   3.867745567936214*^9, 3.867745600449637*^9}, {3.867745715549245*^9, 
   3.867745725911264*^9}, {3.86774578337624*^9, 3.867745791616502*^9}, {
   3.867745989126684*^9, 3.867745989941062*^9}, {3.8677460241709547`*^9, 
   3.8677460654494267`*^9}, {3.867746107644547*^9, 3.867746122729218*^9}, 
   3.867746273712739*^9, {3.867747004171028*^9, 3.86774716042248*^9}, {
   3.867747715405856*^9, 3.8677477185328207`*^9}, {3.867749086405794*^9, 
   3.8677490953970127`*^9}, 3.867749169985098*^9, {3.867749202612535*^9, 
   3.867749213086603*^9}, {3.867749473747692*^9, 3.867749590399789*^9}, {
   3.867759364100782*^9, 3.867759373538303*^9}, 3.867820421898498*^9, {
   3.8678214811911173`*^9, 3.867821673012622*^9}, {3.867821726455435*^9, 
   3.867821765562131*^9}, {3.8678319299609623`*^9, 3.867832141562743*^9}, {
   3.867832183365622*^9, 3.867832197758483*^9}, {3.867832273447135*^9, 
   3.8678323310105*^9}, {3.867832435373742*^9, 3.867832437162781*^9}, 
   3.867845041473885*^9, {3.867845176020382*^9, 3.867845181370673*^9}, 
   3.867845220078869*^9, {3.867845268259713*^9, 3.867845269009536*^9}, {
   3.867845441950202*^9, 3.867845474422501*^9}, {3.867845548296546*^9, 
   3.867845549079295*^9}, {3.8678456561327343`*^9, 3.867845692199095*^9}, {
   3.867845736386766*^9, 3.8678457404957933`*^9}, {3.8678458022846737`*^9, 
   3.8678458226076593`*^9}, {3.8678463740492496`*^9, 
   3.8678464585616293`*^9}, {3.867846509429921*^9, 3.8678465128815107`*^9}, {
   3.8678472256017838`*^9, 3.8678472603907003`*^9}, {3.8678474608136387`*^9, 
   3.867847461031649*^9}, {3.867851787921419*^9, 3.867851817701571*^9}, {
   3.867851900550757*^9, 3.867851927267418*^9}, {3.867851957564983*^9, 
   3.8678519695512133`*^9}, {3.8678522449069633`*^9, 3.867852245379476*^9}, {
   3.867853163161098*^9, 3.867853196747348*^9}, {3.867853233567864*^9, 
   3.8678532470349903`*^9}, {3.867853884809308*^9, 3.867853915694137*^9}, {
   3.8678557138580112`*^9, 3.8678557205277843`*^9}, {3.8678558692425613`*^9, 
   3.867855918584581*^9}, {3.867855968992957*^9, 3.8678559701042643`*^9}, {
   3.8678560422285*^9, 3.8678560426417*^9}, {3.867856886992489*^9, 
   3.867856997226157*^9}, {3.867857298672204*^9, 3.867857299057664*^9}, 
   3.867915126148046*^9, {3.8679196115200653`*^9, 3.867919661842679*^9}, {
   3.867923933856648*^9, 3.867924004526431*^9}, {3.867924055096816*^9, 
   3.8679240604498663`*^9}, {3.8679241222454844`*^9, 3.867924137154539*^9}, {
   3.8679247480096827`*^9, 3.867924752902986*^9}, {3.86792511795385*^9, 
   3.867925166878894*^9}, {3.867925338325849*^9, 3.867925362460964*^9}, {
   3.867925431751029*^9, 3.86792558026754*^9}, 3.86792565316192*^9, {
   3.8679259324855137`*^9, 3.867925951597178*^9}, {3.867925982749096*^9, 
   3.867926103580551*^9}, {3.8679333260077877`*^9, 3.867933394067833*^9}, {
   3.8679334389147577`*^9, 3.867933468497867*^9}, {3.867933551565062*^9, 
   3.867933554673608*^9}, {3.8679336204746513`*^9, 3.867933625413566*^9}, {
   3.8679336957204313`*^9, 3.8679336961463537`*^9}, {3.867939155073038*^9, 
   3.867939176509241*^9}, {3.867939221066902*^9, 3.867939242475775*^9}, {
   3.867939280026947*^9, 3.8679393503107986`*^9}, {3.867939792876237*^9, 
   3.867939793462902*^9}, {3.867950638379805*^9, 3.867950715456499*^9}, {
   3.867950780785142*^9, 3.867950849026924*^9}, {3.867950885472389*^9, 
   3.8679512500329514`*^9}, {3.867951280371813*^9, 3.8679513684891777`*^9}, {
   3.8679516429098997`*^9, 3.867951655549107*^9}, 3.867952663522336*^9, {
   3.867953007178279*^9, 3.867953017401608*^9}, {3.8679921480267677`*^9, 
   3.867992151879429*^9}, {3.867994066844562*^9, 3.867994085049457*^9}, {
   3.8679956829324017`*^9, 3.867995752789434*^9}, {3.867995792927552*^9, 
   3.8679958378109283`*^9}, {3.8679958738484907`*^9, 
   3.8679959174741507`*^9}, {3.8679959969262447`*^9, 3.867996148207961*^9}, {
   3.867996212111762*^9, 3.867996269819317*^9}, {3.8679963042862883`*^9, 
   3.8679963118877563`*^9}, {3.8679963910525637`*^9, 3.867996483906238*^9}, {
   3.8679965628576593`*^9, 3.867996611321477*^9}, {3.867996713156332*^9, 
   3.867996716662931*^9}, {3.8679967537610493`*^9, 3.867996822448591*^9}, {
   3.8679968588307743`*^9, 3.867997023387059*^9}, {3.867997074563205*^9, 
   3.867997109980063*^9}, {3.86799714819802*^9, 3.867997243087955*^9}, {
   3.867997273624701*^9, 3.867997630306697*^9}, {3.8679976829658613`*^9, 
   3.867997685627386*^9}, {3.867997844565571*^9, 3.867997932350051*^9}, {
   3.8679983455668507`*^9, 3.867998368232942*^9}, {3.867998406129963*^9, 
   3.867998426127439*^9}, {3.867998491847498*^9, 3.867998534376567*^9}, {
   3.8679997390487003`*^9, 3.8679997574023247`*^9}, {3.8679999033115873`*^9, 
   3.867999911451638*^9}, {3.868000767778943*^9, 3.8680007736181803`*^9}, {
   3.8680018139827013`*^9, 3.868001889529602*^9}, {3.868001930135141*^9, 
   3.8680019379642897`*^9}, {3.868001987330847*^9, 3.868002017645205*^9}, {
   3.868002382813526*^9, 3.868002394239159*^9}, {3.868002529681904*^9, 
   3.8680025368449783`*^9}, {3.868002662714904*^9, 3.8680026967680264`*^9}, 
   3.8680027466638203`*^9, 3.868002872303914*^9, {3.8680029401285257`*^9, 
   3.868003093684375*^9}, {3.8680034996980057`*^9, 3.868003504971615*^9}, {
   3.8680035535818377`*^9, 3.868003556005102*^9}, {3.8680037439009743`*^9, 
   3.86800380683535*^9}, {3.868004019599826*^9, 3.868004037817574*^9}, {
   3.8680052850339108`*^9, 3.868005294651725*^9}, {3.8680053632514677`*^9, 
   3.868005369840514*^9}, {3.868005570132626*^9, 3.868005570909544*^9}, {
   3.868005874767873*^9, 3.868005938591914*^9}, 3.868006517744602*^9, {
   3.8680068806763678`*^9, 3.868006893287983*^9}, {3.86801083862327*^9, 
   3.868010892883176*^9}, {3.86801111022467*^9, 3.868011110700968*^9}, {
   3.868011660727187*^9, 3.868011660819119*^9}, {3.868011751061648*^9, 
   3.868011751519013*^9}, 3.868017266340384*^9, {3.868017978889378*^9, 
   3.8680179791807404`*^9}, {3.8680192917327538`*^9, 3.868019318645891*^9}, {
   3.868019423006949*^9, 3.86801943295186*^9}, {3.8680197261317797`*^9, 
   3.8680197418726873`*^9}, {3.8680197719102373`*^9, 3.868019775966134*^9}, {
   3.86801982696072*^9, 3.8680198341256123`*^9}, {3.868019930445079*^9, 
   3.8680200074711723`*^9}, {3.868020048323308*^9, 3.868020094529035*^9}, {
   3.8680202467282248`*^9, 3.86802041416707*^9}, {3.868020448230453*^9, 
   3.86802058329772*^9}, {3.868020629824596*^9, 3.8680207724246397`*^9}, 
   3.868020824355859*^9, {3.8680209924195757`*^9, 3.8680210339366837`*^9}, {
   3.8680212018624887`*^9, 3.868021207604608*^9}, {3.8680212628015537`*^9, 
   3.868021529829318*^9}, {3.868021618434239*^9, 3.868021646441574*^9}, {
   3.8680216889025*^9, 3.868021711636211*^9}, {3.868021762710775*^9, 
   3.868021765927781*^9}, {3.868021820755612*^9, 3.8680218312865677`*^9}, {
   3.8680218835541773`*^9, 3.86802219451152*^9}, {3.868022255405455*^9, 
   3.868022269022059*^9}, {3.868022379838932*^9, 3.868022385930913*^9}, {
   3.8680227313552027`*^9, 3.8680227357596893`*^9}, 3.868022788825738*^9, {
   3.868024038611033*^9, 3.8680240510023813`*^9}, {3.868024090341049*^9, 
   3.868024141135808*^9}, 3.868024204251193*^9, {3.868024270703361*^9, 
   3.868024300913588*^9}, {3.868024582542659*^9, 3.86802463623987*^9}, 
   3.868024681426152*^9, {3.868024982427618*^9, 3.868025162178173*^9}, {
   3.868025228896975*^9, 3.868025343582349*^9}, {3.868025419353643*^9, 
   3.868025477424972*^9}, {3.8680255154559917`*^9, 3.868025532050888*^9}, {
   3.868025574217173*^9, 3.868025601044778*^9}, {3.868025653879348*^9, 
   3.868025714043867*^9}, {3.868025766398005*^9, 3.868025807736685*^9}, {
   3.868025854061441*^9, 3.8680258791433687`*^9}, {3.868025914477498*^9, 
   3.868026019348756*^9}, {3.868026113878084*^9, 3.8680261164019613`*^9}, {
   3.86802615525207*^9, 3.868026211284918*^9}, {3.868026242061791*^9, 
   3.868026272711252*^9}, {3.8680264985249567`*^9, 3.868026568620661*^9}, 
   3.868026789363689*^9, {3.86802682836532*^9, 3.868026829233479*^9}, {
   3.868026972703972*^9, 3.86802697995925*^9}, 3.8680270433725967`*^9, {
   3.8680281802512302`*^9, 3.868028242970368*^9}, {3.868080875487595*^9, 
   3.868080968938644*^9}, {3.8680810356240997`*^9, 3.8680810801369867`*^9}, {
   3.868081170812044*^9, 3.868081218665803*^9}, {3.868081387817005*^9, 
   3.8680813904220657`*^9}, {3.868081561578862*^9, 3.868081644917028*^9}, {
   3.868081749076881*^9, 3.868081775056229*^9}, 3.8680818099158916`*^9, {
   3.868083162014145*^9, 3.868083220671075*^9}, {3.868083345222941*^9, 
   3.868083346143221*^9}, {3.8680833833526163`*^9, 3.868083399303166*^9}, {
   3.868084246196406*^9, 3.868084259410274*^9}, {3.868084333019147*^9, 
   3.868084412184559*^9}, {3.868084445855832*^9, 3.8680844496367493`*^9}, {
   3.8680845006470737`*^9, 3.868084570295661*^9}, {3.868084792964509*^9, 
   3.8680847960926847`*^9}, {3.868085014422399*^9, 3.8680850170664253`*^9}, {
   3.868085206669804*^9, 3.868085210253096*^9}, {3.868085263123048*^9, 
   3.86808526753756*^9}, {3.868085677720025*^9, 3.8680858456584873`*^9}, {
   3.868085921942848*^9, 3.868086181540903*^9}, 3.868086356986624*^9, {
   3.868086858265696*^9, 3.86808688199979*^9}, {3.868086932266296*^9, 
   3.868086948198894*^9}, {3.8680870200712347`*^9, 3.868087046518845*^9}, {
   3.868087106301538*^9, 3.868087111710513*^9}, {3.868087159956359*^9, 
   3.868087177916864*^9}, {3.8680872335825377`*^9, 3.8680872403565397`*^9}, {
   3.868087287976103*^9, 3.868087299579794*^9}, {3.868094552271357*^9, 
   3.868094565818273*^9}, {3.8680946085195637`*^9, 3.868094683367021*^9}, {
   3.8680947234537067`*^9, 3.868094746153048*^9}, 3.868094958801725*^9, {
   3.868094997616559*^9, 3.868094998452636*^9}, {3.868095085618731*^9, 
   3.868095148211029*^9}, {3.868095182160864*^9, 3.868095309280767*^9}, {
   3.868095474434819*^9, 3.868095474557859*^9}, {3.868095531697521*^9, 
   3.8680955440043573`*^9}, {3.868095899140757*^9, 3.868096221661327*^9}, {
   3.8680963189816513`*^9, 3.868096358080351*^9}, {3.8680964097578506`*^9, 
   3.868096525166113*^9}, {3.868097007944139*^9, 3.8680970207059402`*^9}, {
   3.868097263146735*^9, 3.868097301682577*^9}, {3.868097399455399*^9, 
   3.8680974601730137`*^9}, {3.868097600582181*^9, 3.868097601261793*^9}, {
   3.868097794950128*^9, 3.868097811553031*^9}, {3.868098405159397*^9, 
   3.868098447639187*^9}, {3.8680984855529957`*^9, 3.868098577654168*^9}, {
   3.868338198923512*^9, 3.8683382001567297`*^9}, 3.86833826478611*^9, {
   3.868338388676242*^9, 3.868338493843235*^9}, {3.868338534124589*^9, 
   3.86833869270757*^9}, {3.868338916645481*^9, 3.868338934734111*^9}, {
   3.868339035889781*^9, 3.868339060723186*^9}, {3.8683391578204803`*^9, 
   3.868339162410242*^9}, {3.86834036613656*^9, 3.868340383851796*^9}, {
   3.868340542787384*^9, 3.868340582042341*^9}, {3.868340824385363*^9, 
   3.868340926401126*^9}, {3.868341060031375*^9, 3.868341099175906*^9}, {
   3.868341251829103*^9, 3.868341304677257*^9}, {3.8683413556232443`*^9, 
   3.8683414464709253`*^9}, {3.8683414861259108`*^9, 3.868341532923983*^9}, {
   3.868341804623012*^9, 3.868341806255857*^9}, {3.8683423502410717`*^9, 
   3.8683423660141983`*^9}, {3.868342406343335*^9, 3.8683425819792433`*^9}, {
   3.868342641690216*^9, 3.868342766614724*^9}, {3.868342852220627*^9, 
   3.868342858479063*^9}, {3.8683429172348824`*^9, 3.868342949287827*^9}, {
   3.8683433870769043`*^9, 3.86834345283751*^9}, {3.868343633756591*^9, 
   3.86834363514832*^9}, {3.868343778215613*^9, 3.8683437801253853`*^9}, {
   3.8683441089428177`*^9, 3.868344198672065*^9}, {3.86834423918748*^9, 
   3.868344290781954*^9}, {3.8683445304164124`*^9, 3.868344806905923*^9}, {
   3.868344842748295*^9, 3.868344915706505*^9}, {3.86834499645251*^9, 
   3.8683450286788807`*^9}, {3.868345070037815*^9, 3.868345077744582*^9}, {
   3.8683458757313213`*^9, 3.8683458763107967`*^9}, {3.868345907373451*^9, 
   3.8683459159525414`*^9}, {3.868354509012404*^9, 3.868354740448985*^9}, {
   3.868354796245441*^9, 3.868354802059712*^9}, {3.868354849199152*^9, 
   3.868354867343515*^9}, 3.868355287656053*^9, {3.868369769947043*^9, 
   3.868369772625684*^9}, {3.86836991879428*^9, 3.868369971755863*^9}, {
   3.868370379915599*^9, 3.8683704179798613`*^9}, {3.868370460346943*^9, 
   3.868370600329116*^9}, {3.868370673014221*^9, 3.868370687025141*^9}, 
   3.868372198869083*^9, {3.868372527932172*^9, 3.868372528280998*^9}, {
   3.868372587668326*^9, 3.868372675802327*^9}, {3.86837441946243*^9, 
   3.868374515507388*^9}, {3.8683746995072813`*^9, 3.868374700045959*^9}, {
   3.868375089880862*^9, 3.868375157515353*^9}, {3.868435194512941*^9, 
   3.868435259210577*^9}, {3.868444565649386*^9, 3.868444567560875*^9}, {
   3.868455654846298*^9, 3.8684556650953093`*^9}, {3.868455909646079*^9, 
   3.868455936576088*^9}, {3.868456517394142*^9, 3.868456517833335*^9}, {
   3.868456632636836*^9, 3.868456881867181*^9}, {3.868627860591612*^9, 
   3.868627940761256*^9}, {3.8686280825146837`*^9, 3.868628087850683*^9}, {
   3.8687757739800253`*^9, 3.868775775689703*^9}, {3.8689554192100554`*^9, 
   3.8689555295466843`*^9}, {3.868955755410314*^9, 3.868955755682933*^9}, {
   3.8689611279267683`*^9, 3.868961142411791*^9}, {3.868969976049788*^9, 
   3.868969976474638*^9}, {3.868970324678581*^9, 3.868970350030773*^9}, {
   3.868971237342609*^9, 3.8689712460762243`*^9}, {3.8689723701660213`*^9, 
   3.868972370541889*^9}, 3.869140836895609*^9, {3.869288523552373*^9, 
   3.8692885382655373`*^9}, {3.8692886236614113`*^9, 3.869288627722547*^9}, {
   3.869288719798007*^9, 3.869288731592373*^9}, {3.869289017169752*^9, 
   3.869289026652514*^9}, {3.869302737654845*^9, 3.86930276688223*^9}, 
   3.869302831762209*^9, 3.869553420297187*^9, {3.86964447689329*^9, 
   3.869644520769272*^9}, {3.869644556491786*^9, 3.869644587251465*^9}, {
   3.869644754726789*^9, 3.869644757565062*^9}, 3.8696448785370903`*^9, {
   3.869659594938746*^9, 3.8696596338681097`*^9}, 3.8696597312916317`*^9, {
   3.869659765949926*^9, 3.869659770958239*^9}, {3.869660576950984*^9, 
   3.8696605938436813`*^9}, {3.86966115163372*^9, 3.8696611545794573`*^9}, {
   3.8696709032747097`*^9, 3.869670917125815*^9}, {3.869752554363874*^9, 
   3.869752567684095*^9}, {3.869831354891864*^9, 3.869831383763091*^9}, {
   3.869831506948785*^9, 3.8698315705029173`*^9}, {3.8698340600125227`*^9, 
   3.86983409623561*^9}, {3.869839002828348*^9, 3.869839067129195*^9}, {
   3.869841766692726*^9, 3.869841775205264*^9}, {3.86984225564832*^9, 
   3.869842258164442*^9}, {3.8698423223957663`*^9, 3.869842352635273*^9}, {
   3.869844696610256*^9, 3.869844707569615*^9}, {3.8698931460812263`*^9, 
   3.869893167168768*^9}, {3.8698932053874283`*^9, 3.8698932566004477`*^9}, {
   3.8698941842827673`*^9, 3.869894185991002*^9}, {3.869895342167643*^9, 
   3.86989535810777*^9}, {3.869895410190721*^9, 3.8698954103429127`*^9}, {
   3.869895533372533*^9, 3.8698955786713448`*^9}, {3.8698956330554113`*^9, 
   3.869895639002866*^9}, {3.869895680180173*^9, 3.869895680761776*^9}, {
   3.86989661007224*^9, 3.869896681937632*^9}, {3.86989690040804*^9, 
   3.869896971359591*^9}, {3.869897014872593*^9, 3.869897132121222*^9}, {
   3.869897477790317*^9, 3.869897518675989*^9}, {3.869897691487323*^9, 
   3.86989769789153*^9}, {3.8698989460645123`*^9, 3.869898998712337*^9}, 
   3.870186660204249*^9, {3.870186887513135*^9, 3.870186989032127*^9}, {
   3.8701871570591593`*^9, 3.8701871606536217`*^9}, {3.870187330196368*^9, 
   3.870187331239862*^9}, {3.870188580118729*^9, 3.8701885875963097`*^9}, {
   3.870188717103075*^9, 3.8701887555269527`*^9}, {3.8701892460871973`*^9, 
   3.870189247192371*^9}, {3.87018929302456*^9, 3.870189311279171*^9}, {
   3.870189463753818*^9, 3.870189522092708*^9}, {3.870189658478598*^9, 
   3.870189683891388*^9}, {3.870189944042942*^9, 3.870189955740143*^9}, {
   3.870190606695414*^9, 3.870190609448956*^9}, {3.8702640231191673`*^9, 
   3.870264174907434*^9}, {3.870264237442049*^9, 3.8702642386493063`*^9}, {
   3.870264315876889*^9, 3.870264318751203*^9}, {3.8702701095925417`*^9, 
   3.870270237334046*^9}, {3.870270274406863*^9, 3.870270275470255*^9}, {
   3.870272917248302*^9, 3.8702729335853558`*^9}, {3.870273199908142*^9, 
   3.870273210502328*^9}, {3.870273276068742*^9, 3.870273380329443*^9}, {
   3.870273415205714*^9, 3.870273430437025*^9}, {3.8702735073408003`*^9, 
   3.8702735118898*^9}, {3.870273690822488*^9, 3.870273733670721*^9}, {
   3.870273768813003*^9, 3.870273839056405*^9}, {3.8702739900558853`*^9, 
   3.870273993813661*^9}, 3.870274393177677*^9, {3.8702756746627073`*^9, 
   3.870275693211605*^9}, {3.8702757329008493`*^9, 3.870275751156968*^9}, {
   3.8702757836927443`*^9, 3.870275787474908*^9}, {3.8702759022321997`*^9, 
   3.8702759078390903`*^9}, {3.870275951979085*^9, 3.870275969649226*^9}, {
   3.870276069145156*^9, 3.870276074221278*^9}, {3.8702761709388237`*^9, 
   3.870276199760583*^9}, {3.870333916794297*^9, 3.870333924758038*^9}, 
   3.87035678961077*^9, {3.87035717352244*^9, 3.870357175328092*^9}, 
   3.8704141713388023`*^9, {3.870416255111806*^9, 3.8704162627685413`*^9}, 
   3.8704221794987698`*^9, {3.8704236580688334`*^9, 3.870423687990344*^9}, {
   3.870429322073524*^9, 3.8704293909292603`*^9}, {3.870447128862979*^9, 
   3.870447141556266*^9}, 3.870447375332519*^9, {3.8705107527931223`*^9, 
   3.87051076806746*^9}, {3.8722405410750504`*^9, 3.872240543599112*^9}, {
   3.87224092258814*^9, 3.8722409351451883`*^9}, {3.8722409840531397`*^9, 
   3.8722410102258*^9}, {3.872241094816079*^9, 3.87224111480649*^9}, {
   3.872241158675098*^9, 3.872241169714531*^9}, {3.8722412092190933`*^9, 
   3.872241249915201*^9}, {3.8722412899012623`*^9, 3.872241298472475*^9}, {
   3.8722413332528954`*^9, 3.872241398412879*^9}, {3.872241497015089*^9, 
   3.872241520972723*^9}, {3.872241558406196*^9, 3.872241631310492*^9}, {
   3.872241675766534*^9, 3.87224167628856*^9}, {3.8722417210720167`*^9, 
   3.872241745156959*^9}, {3.872241824945335*^9, 3.87224187026406*^9}, {
   3.872241957182774*^9, 3.8722419683302402`*^9}, {3.8722420549994507`*^9, 
   3.872242118462141*^9}, {3.872242166629451*^9, 3.8722422380631227`*^9}, {
   3.872242268681567*^9, 3.87224228723702*^9}, {3.872242350263205*^9, 
   3.87224235971507*^9}, {3.8722423915232573`*^9, 3.872242472081581*^9}, {
   3.872242505923903*^9, 3.872242557500448*^9}, {3.8722426178627234`*^9, 
   3.8722426363429003`*^9}, {3.872242705234599*^9, 3.872242909666327*^9}, {
   3.87224309790381*^9, 3.872243100623137*^9}, {3.8722431408886557`*^9, 
   3.872243287452878*^9}, {3.87224333301857*^9, 3.872243369965413*^9}, {
   3.872243883025298*^9, 3.8722438859931383`*^9}, {3.8722442055226583`*^9, 
   3.872244210107155*^9}, {3.872244362542378*^9, 3.872244364604447*^9}, {
   3.872244522873994*^9, 3.872244663405026*^9}, {3.8722447703387527`*^9, 
   3.8722447965956182`*^9}, {3.87224486226654*^9, 3.872244862527582*^9}, {
   3.8722449149404078`*^9, 3.872244937609375*^9}, {3.872245194733922*^9, 
   3.872245211642128*^9}, {3.872245288253604*^9, 3.8722453190809317`*^9}, {
   3.872245388958581*^9, 3.872245390158637*^9}, {3.872245422405941*^9, 
   3.8722454443019238`*^9}, {3.87224547455066*^9, 3.872245500026185*^9}, {
   3.8722457223857*^9, 3.872245727509035*^9}, {3.872246008757043*^9, 
   3.872246100205408*^9}, {3.872253311665298*^9, 3.8722533216866083`*^9}, 
   3.8722537163486*^9, {3.8722542803959837`*^9, 3.87225428772218*^9}, {
   3.872254374406328*^9, 3.8722543803427477`*^9}, {3.872254577101386*^9, 
   3.87225465322145*^9}, {3.872254696210907*^9, 3.872254708916885*^9}, {
   3.8722547938436623`*^9, 3.87225485611978*^9}, {3.87225493564217*^9, 
   3.8722549502683287`*^9}, {3.872255100754718*^9, 3.872255141124495*^9}, {
   3.8722552074426107`*^9, 3.8722552443434258`*^9}, 3.87225535957069*^9, {
   3.8722555084161654`*^9, 3.872255540982254*^9}, {3.872255632535296*^9, 
   3.872255717196711*^9}, {3.872255873776266*^9, 3.872255880457263*^9}, {
   3.872255936654889*^9, 3.872255958139971*^9}, {3.8722560924696503`*^9, 
   3.87225612606105*^9}, {3.8722562616441813`*^9, 3.872256276074101*^9}, {
   3.872256349600985*^9, 3.872256431460011*^9}, {3.8722569604784317`*^9, 
   3.872256969968851*^9}, {3.872257040772127*^9, 3.8722570590084963`*^9}, {
   3.872257098615219*^9, 3.8722571065012007`*^9}, {3.8722571542835903`*^9, 
   3.87225718365195*^9}, {3.872257266707123*^9, 3.872257306417791*^9}, {
   3.872331952830757*^9, 3.8723319708861732`*^9}, {3.874582785062804*^9, 
   3.8745827987439957`*^9}, {3.874582850107539*^9, 3.8745828713749123`*^9}, {
   3.8745879781651278`*^9, 3.874587980260684*^9}, {3.874994449074017*^9, 
   3.874994453406815*^9}, {3.874994559294755*^9, 3.874994611135887*^9}, {
   3.87499473190219*^9, 3.8749947422004623`*^9}, 3.874994913594009*^9, {
   3.8752494479766817`*^9, 3.87524945065069*^9}, {3.8755960711622553`*^9, 
   3.875596076909754*^9}, {3.8755972445059147`*^9, 3.875597253776637*^9}, 
   3.875597602927915*^9, 3.875602461828268*^9, 3.875602553341648*^9, 
   3.8756028754315233`*^9, 3.875603146672639*^9, {3.8756038612343187`*^9, 
   3.875603875239533*^9}, 3.875603906770166*^9, 3.8756046930113297`*^9, 
   3.8756063711138897`*^9, 3.8756069164858027`*^9, 3.875607304914919*^9, 
   3.875608602302047*^9, 3.875681997612337*^9, 3.87568229804664*^9, {
   3.876230581442*^9, 3.876230632515255*^9}, {3.876230689451408*^9, 
   3.876230694396819*^9}, 3.8768272980026712`*^9, {3.876922825685466*^9, 
   3.87692283162029*^9}, {3.876926142779291*^9, 3.876926146480926*^9}, 
   3.876926709064137*^9, 3.877015092921472*^9, {3.8770736302871723`*^9, 
   3.8770736671943283`*^9}, {3.877074080975618*^9, 3.877074122178137*^9}, {
   3.877074448266377*^9, 3.877074448296672*^9}, {3.877074513157715*^9, 
   3.877074513194604*^9}, {3.877074629824121*^9, 3.877074696528987*^9}, {
   3.877074899339004*^9, 3.877074929088064*^9}, {3.877075217024541*^9, 
   3.877075221076461*^9}, {3.8770752926212873`*^9, 3.877075294774724*^9}, {
   3.8770754797137537`*^9, 3.877075481453779*^9}, {3.87707555854254*^9, 
   3.877075568707425*^9}, {3.877075708694703*^9, 3.8770757229754057`*^9}, {
   3.877075785000268*^9, 3.877075786976128*^9}, {3.8770759108745737`*^9, 
   3.87707593259241*^9}, {3.877076006240553*^9, 3.877076017523473*^9}, {
   3.8770761107461147`*^9, 3.877076119237588*^9}, {3.87707627582611*^9, 
   3.8770762779332943`*^9}, {3.877076350095428*^9, 3.877076368732397*^9}, 
   3.877077710999607*^9, {3.87707774870407*^9, 3.877077766162882*^9}, 
   3.877078049585408*^9, 3.877078642000958*^9, 3.877416645468799*^9, {
   3.879324454263863*^9, 3.87932455182971*^9}, {3.890730523168806*^9, 
   3.890730526045692*^9}, {3.8907305560706587`*^9, 3.890730556464427*^9}},
 CellLabel->
  "In[650]:=",ExpressionUUID->"08c32532-fbbe-49a1-a205-d5c76ea257c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generating full graph upwards", "Subsection",
 CellChangeTimes->{{3.867740096692943*^9, 3.8677401033609743`*^9}, 
   3.869659680609363*^9, {3.8756042756164103`*^9, 
   3.8756042804276447`*^9}},ExpressionUUID->"62e0187b-61a7-4a64-af47-\
2ae0d1c99773"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ShowIntermediateGraph\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<A graph\>\"", ",", 
      "\"\<Outputs the graph after the Updirec has been done. This is not the \
final graph of the program.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ShowIntermediateGraph", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vertices", ",", "edgesV", ",", "labels"}], "}"}], ",", 
    RowBox[{
     RowBox[{"vertices", "=", " ", 
      RowBox[{"Range", "[", "Flocci$SSNode$MaxId", "]"}]}], ";", 
     RowBox[{"edgesV", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flocci$SSEdge$Edge", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Flocci$SSEdge$MaxId"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"labels", "=", 
      RowBox[{"Map", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$SSNode$Algebra", "[", "#", "]"}], "&"}], ",", 
        "vertices"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{"edgesV", ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"v_", "\[RuleDelayed]", 
          RowBox[{"Placed", "[", 
           RowBox[{"v", 
            RowBox[{"(*", 
             RowBox[{"Style", "[", 
              RowBox[{
              "labels", "\[LeftDoubleBracket]", "v", 
               "\[RightDoubleBracket]"}], "]"}], "*)"}], ",", "Center"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "0.4"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<IndexLabeled\>\""}], ",", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875249477777766*^9, 3.875249482673559*^9}, {
   3.875596099274927*^9, 3.875596101330572*^9}, {3.875604292995183*^9, 
   3.875604305091054*^9}, {3.8756051946461077`*^9, 3.8756052029440517`*^9}, {
   3.877073672282999*^9, 3.877073676595728*^9}, 3.877074448300622*^9, {
   3.877076285845553*^9, 3.877076287530921*^9}, 3.877077555122883*^9, 
   3.877077623031992*^9, {3.879324581267387*^9, 3.879324631579392*^9}},
 CellLabel->
  "In[652]:=",ExpressionUUID->"9024b2c8-77ae-440d-9339-790a1df6105c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$DeleteChildData\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", 
      "\"\<inID) The id of the child node just done.\>\"", ",", 
      "\"\<None.\>\"", ",", "\"\<Deletes data that we no longer need.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$DeleteChildData", "[", "inID_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$UniIrrepDomin", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$UniIrrepDominFlat", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$UniIrrepDominRange", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$UniHWs", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$HWsMult", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$Delta", ",", "inID"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"Flocci$SSNode$DeltaCoprime", ",", "inID"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8798379735148973`*^9, 3.879837990252709*^9}, {
  3.879838122479596*^9, 3.879838173180832*^9}, {3.879838455355218*^9, 
  3.879838521954969*^9}, {3.8798387952921886`*^9, 3.8798388304255447`*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"a5675269-4188-4d98-b2d5-0d7cb9e5aa47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$DeleteStoredData\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<None.\>\"", ",", "\"\<None.\>\"", ",", 
      "\"\<Deletes stored data, helping with memory constraints.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$DeleteStoredDataCounter\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<None.\>\"", ",", "\"\<None.\>\"", ",", 
      "\"\<A user defined varible of how frequent to clear data.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$DeleteStoredData", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ClearSystemCache", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879863088991723*^9, 3.8798631832151957`*^9}, {
  3.87986321907985*^9, 3.8798632212239923`*^9}, {3.8798632748385677`*^9, 
  3.8798633186573772`*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"c8a40681-1d0f-4731-8917-6ee70908cea9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$GenerateGraphUpwards\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<UpDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<None.\>\"", ",", 
       "\"\<This is the main code for generaing the graph upwards. In \
particular it runs Flocci$MakeParentNodes recursively.\>\""}], "}"}]}], "]"}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$UpAlgebraTracker\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<UpDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<String.\>\"", ",", 
     "\"\<Keeps track of current algebra for display.\>\""}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$SetDescription", "[", 
  RowBox[{"\"\<Flocci$User$MemoryPlot\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<UpDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<A list of integers.\>\"", 
     ",", "\"\<Keeps track of memory usage to plot memory graph.\>\""}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$DetailedProgressData\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<UpDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<True or False.\>\"", ",", 
      "\"\<A user defined option in SuperFlocci on whether or not do show \
detailed progress data.\>\""}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$GenerateGraphUpwards", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "progrssPlotTemp", ",", "algebraTrackerTemp", ",", "memoryPlotTemp", ",",
       "progrssPlotTempLab"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "monitor", " ", "progress", " ", "with", " ", "trackers"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$User$GraphPoints", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"progrssPlotTemp", "=", 
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "Flocci$User$GraphPoints", "]"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"InsetBoxOptions", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Background", "\[Rule]", 
               RowBox[{"RGBColor", "@", 
                RowBox[{"{", 
                 RowBox[{
                 "0.996078431372549`", ",", "0.9529411764705882`", ",", 
                  "0.8901960784313725`"}], "}"}]}]}], "}"}]}], "}"}]}], "\n", 
          ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Progress\>\""}]}], "]"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"progrssPlotTempLab", "=", 
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Total number of nodes done.\>\"", ",", 
           "\"\<Total number of nodes found.\>\"", ",", 
           "\"\<No. found - No. done (first part of code will finish when \
this reaches 0)\>\""}], "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"Flocci$DetailedProgressData", ",", 
       RowBox[{
        RowBox[{"Flocci$User$MemoryPlot", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MemoryInUse", "[", "]"}], "/", 
           SuperscriptBox["10", "6"]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"memoryPlotTemp", "=", 
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"ListPlot", "[", 
            RowBox[{"Flocci$User$MemoryPlot", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"InsetBoxOptions", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Background", "\[Rule]", 
                  RowBox[{"RGBColor", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    "0.996078431372549`", ",", "0.9529411764705882`", ",", 
                    "0.8901960784313725`"}], "}"}]}]}], "}"}]}], "}"}]}], 
             "\n", ",", 
             RowBox[{"PlotLabel", "\[Rule]", "\"\<Memory Usage\>\""}]}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flocci$UpAlgebraTracker", "=", "\"\<\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"algebraTrackerTemp", "=", 
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{
           "\"\<Current algebra: \>\"", "<>", "Flocci$UpAlgebraTracker"}], 
           "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
         "Flocci$SSNode$currentSSid", "\[LessEqual]", " ", 
          "Flocci$SSNode$MaxId"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"Flocci$DetailedProgressData", ",", 
            RowBox[{"Flocci$UpAlgebraTracker", "=", 
             RowBox[{"ToString", "[", 
              RowBox[{
              "Flocci$SSNode$Algebra", "[", "Flocci$SSNode$currentSSid", 
               "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{
                "x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}], "\[LessEqual]", "Flocci$SimpleIdealConstraint"}], " ", 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "Flocci$MakeParentNodes", "[", "Flocci$SSNode$currentSSid", 
                "]"}], "[", "x", "]"}]}], "\[IndentingNewLine]", "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Flocci$MinimalSupAlgebras", "[", 
               RowBox[{
                RowBox[{
                "Flocci$SSNode$Algebra", "[", "Flocci$SSNode$currentSSid", 
                 "]"}], ",", "Flocci$User$MaxAlgList"}], "]"}]}], "}"}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "clear", " ", "data", " ", "of", " ", "the", " ", 
             "child", " ", "node"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
          "Flocci$DeleteChildData", "[", "Flocci$SSNode$currentSSid", "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"We", " ", "increment", " ", "the", " ", "id"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], " ", 
          "\[IndentingNewLine]", "  ", 
          RowBox[{"Flocci$SSNode$currentSSid", "++"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
             "If", " ", "we", " ", "are", " ", "at", " ", "the", " ", "given",
               " ", "frequency"}], ",", " ", 
             RowBox[{"we", " ", "checkpoint", " ", "the", " ", "data"}]}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"Flocci$Checkpoint$FileName", "===", "False"}], 
               ")"}]}], "&&", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
               "Flocci$SSNode$currentSSid", ",", 
                "Flocci$Checkpoint$CheckpointUpFreq"}], "]"}], "\[Equal]", 
              "0"}]}], ",", "Flocci$Checkpoint$SaveDataUp"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"Flocci$SSNode$currentSSid", ",", "checkpointfreq"}], 
                "]"}], "\[Equal]", "0"}], ",", 
              RowBox[{"Flocci$SaveCheckpoint", "[", "checkpointfile", "]"}]}],
              "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "clear", " ", "data", " ", "every", " ", "so", " ", 
             "many", " ", "evaluations"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
              "Flocci$SSNode$currentSSid", ",", 
               "Flocci$DeleteStoredDataCounter"}], "]"}], "\[Equal]", "0"}], 
            ",", " ", "Flocci$DeleteStoredData"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Flocci$User$GraphPoints", ",", 
            RowBox[{"{", 
             RowBox[{
             "Flocci$SSNode$currentSSid", ",", "Flocci$SSNode$MaxId", ",", 
              RowBox[{
              "Flocci$SSNode$MaxId", "-", "Flocci$SSNode$currentSSid"}]}], 
             "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"Flocci$DetailedProgressData", ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"Flocci$User$MemoryPlot", ",", 
              RowBox[{
               RowBox[{"MemoryInUse", "[", "]"}], "/", 
               SuperscriptBox["10", "6"]}]}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "Flocci$SSNode$currentSSid", ",", "Flocci$SSNode$MaxId", ",", 
         RowBox[{"Flocci$SSNode$MaxId", "-", "Flocci$SSNode$currentSSid"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "progrssPlotTemp", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "progrssPlotTempLab", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"Flocci$DetailedProgressData", ",", 
       RowBox[{
        RowBox[{"NotebookDelete", "[", "algebraTrackerTemp", "]"}], ";", 
        RowBox[{"NotebookDelete", "[", "memoryPlotTemp", "]"}], ";"}]}], 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684396965663557`*^9, 3.8684398330119257`*^9}, {
   3.8686135066652107`*^9, 3.868613509959732*^9}, {3.868613578467318*^9, 
   3.868613581519746*^9}, {3.8689676981139297`*^9, 3.8689678160931873`*^9}, {
   3.868967848537599*^9, 3.868967870686084*^9}, {3.8689679080248747`*^9, 
   3.86896798826392*^9}, {3.868968098081381*^9, 3.868968122478207*^9}, {
   3.86896855477967*^9, 3.8689685561630507`*^9}, {3.868968604094342*^9, 
   3.8689686184900618`*^9}, {3.868968757620878*^9, 3.868968764202197*^9}, {
   3.868968966027092*^9, 3.8689689739308443`*^9}, {3.868969026952469*^9, 
   3.868969121975109*^9}, {3.8689692071404867`*^9, 3.868969213942878*^9}, {
   3.86896931530294*^9, 3.8689693761760902`*^9}, {3.868969742081011*^9, 
   3.868969786436995*^9}, {3.868969913771078*^9, 3.868969917205648*^9}, {
   3.868969998602049*^9, 3.8689700108489237`*^9}, {3.8689700447182617`*^9, 
   3.8689700454378157`*^9}, {3.868970088358261*^9, 3.86897011507059*^9}, {
   3.869140979760272*^9, 3.869140993101316*^9}, {3.869141038597444*^9, 
   3.869141110850046*^9}, {3.86914117771669*^9, 3.869141339172604*^9}, {
   3.869141919130842*^9, 3.869141931699345*^9}, 3.869145655390717*^9, {
   3.8691456919415092`*^9, 3.869145698078885*^9}, {3.869145821287448*^9, 
   3.86914591251966*^9}, {3.8691460899712687`*^9, 3.86914609086891*^9}, {
   3.86914623458077*^9, 3.869146250284377*^9}, {3.86920330869108*^9, 
   3.869203369237267*^9}, {3.8692082474705772`*^9, 3.86920825007683*^9}, {
   3.86923271610499*^9, 3.8692327181201487`*^9}, {3.874065480691948*^9, 
   3.874065481659979*^9}, {3.875087530625492*^9, 3.875087531218754*^9}, {
   3.875249485098054*^9, 3.875249488155147*^9}, {3.875596104122528*^9, 
   3.875596106259954*^9}, 3.875596203716682*^9, 3.8756038923831167`*^9, {
   3.875604176631804*^9, 3.875604208497394*^9}, 3.875608414159604*^9, {
   3.875610634125012*^9, 3.875610636140132*^9}, 3.876914169020623*^9, {
   3.877073680971099*^9, 3.877073685232196*^9}, 3.87707444830256*^9, {
   3.877077555124214*^9, 3.877077555128655*^9}, 3.877077804026112*^9, {
   3.877078167116104*^9, 3.87707816712731*^9}, {3.8770786123309*^9, 
   3.877078634881679*^9}, {3.8771554595050077`*^9, 3.877155466672957*^9}, {
   3.877418055226942*^9, 3.877418072219994*^9}, 3.877422388150454*^9, {
   3.879324646543432*^9, 3.879324697115941*^9}, {3.879592894345635*^9, 
   3.879592896944031*^9}, {3.879593040418703*^9, 3.87959305746103*^9}, {
   3.8798348477892923`*^9, 3.879834961420011*^9}, {3.879835216274378*^9, 
   3.879835216635861*^9}, {3.8798381863248873`*^9, 3.879838230845765*^9}, {
   3.8798632369757023`*^9, 3.879863269846176*^9}, {3.87986332514429*^9, 
   3.879863343335129*^9}, {3.8799486527330847`*^9, 3.8799486649115143`*^9}, {
   3.8799487723175573`*^9, 3.879948816111972*^9}, {3.879953844642777*^9, 
   3.879954061143976*^9}, {3.879954145518676*^9, 3.879954148762021*^9}, {
   3.879954205376421*^9, 3.8799542526904573`*^9}, {3.8799542977438374`*^9, 
   3.879954304521008*^9}, {3.8799544783739433`*^9, 3.8799544917084007`*^9}, {
   3.8799546546923122`*^9, 3.879954741569563*^9}, {3.879954927050323*^9, 
   3.879955035384375*^9}, {3.891949271783699*^9, 3.891949305127365*^9}, {
   3.891949337529233*^9, 3.8919493390744534`*^9}, {3.891949382959364*^9, 
   3.8919494371434317`*^9}, {3.891949535309764*^9, 3.891949579091144*^9}, {
   3.891949929413726*^9, 3.891949930318468*^9}, {3.891949961861706*^9, 
   3.891949984311112*^9}, {3.891950025289359*^9, 3.89195003068744*^9}, {
   3.8958147300645247`*^9, 
   3.895814732348258*^9}},ExpressionUUID->"7c5cfdf3-1d16-4adc-8da3-\
dcf3788a82e1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Going back down the graph", "Section",
 CellChangeTimes->{{3.873791961541033*^9, 3.873791970354398*^9}, 
   3.873797365379204*^9, {3.873798528920961*^9, 3.873798532041526*^9}, {
   3.875609291571456*^9, 
   3.875609296131831*^9}},ExpressionUUID->"96a71c69-9dd0-4762-99d1-\
0ef4397f39b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$SpawnU1Nodes\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DownDirec\>\"", ",", 
      "\"\<idIn) The id of the node of the UpDirec graph to consider.\>\"", 
      ",", "\"\<Either inId or Nothing.\>\"", ",", 
      "\"\<Generarates the nodes in the RR graph based on the nodes of the SS \
graph. If a given idIn does not lead to any RR nodes, we output inID else \
Nothing.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SpawnU1Nodes", "[", "idIn_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "u1rows", ",", "u1rows1", ",", "stabalizerRows", ",", "orbits", ",", 
      "representatives", ",", "nearestNeigbours", ",", "supSSid", ",", 
      "supRRid", ",", "supRRidL", ",", "\[CapitalLambda]\[Rho]", ",", 
      "aut\[CapitalLambda]\[Rho]", ",", "objectEquivelenceClasses"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "update", " ", "our", " ", "progress", " ", "indicator"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$U1ProgressCounter", "+=", "1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flocci$U1Progress", "=", 
      RowBox[{
       RowBox[{"ToString", "[", "Flocci$U1ProgressCounter", "]"}], "<>", 
       "\"\< (\>\"", "<>", 
       RowBox[{"ToString", "[", "idIn", "]"}], "<>", "\"\<): \>\"", "<>", 
       RowBox[{"Flocci$PrintLie", "[", 
        RowBox[{"Flocci$SSNode$Algebra", "[", "idIn", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "get", " ", "all", " ", "u1", " ", "rows", " ", "which", 
        " ", "can", " ", "be", " ", "added", " ", "to", " ", 
        "\[CapitalLambda]\[Alpha]"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"input", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flocci$SSNode$AnomFreeCharges", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$WS", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$HWs", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$Algebra", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "idIn", "]"}], 
        ",", "Flocci$User$IrrepWeightLocation"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u1rows", "=", 
      RowBox[{"Flocci$U1Find", "[", 
       RowBox[{
        RowBox[{"Flocci$SSNode$AnomFreeCharges", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$WS", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$HWs", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$Algebra", "[", "idIn", "]"}], ",", 
        RowBox[{"Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "idIn", "]"}], 
        ",", "Flocci$User$IrrepWeightLocation"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "remove", " ", "those", " ", "rows", " ", "which", " ", 
        "will", " ", "never", " ", "lead", " ", "to", " ", "a", " ", 
        "commuting", " ", "extension", " ", "of", " ", 
        "\[CapitalLambda]\[Alpha]", " ", "to", " ", "a", " ", "full", " ", 
        "\[Alpha]"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"u1rows1", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"u1rows", ",", 
        RowBox[{
         RowBox[{"Flocci$ProjectionMatrixNonEmpty\[CapitalGamma]sQ", "[", 
          RowBox[{
           RowBox[{"Flocci$SSNode$Algebra", "[", "idIn", "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
             "Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "idIn", "]"}], 
             ",", "#"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "u1rows1", "]"}], "\[NotEqual]", " ", 
        RowBox[{"Length", "[", "u1rows", "]"}]}], ",", 
       RowBox[{
       "Print", "[", "\"\<Contradiction to supposed conjecture\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "now", " ", "do", " ", "the", " ", "full", " ", "test", " ",
         "of", " ", "weather", " ", "a", " ", "\[CapitalLambda]\[Alpha]", " ",
         "extends", " ", "to", " ", "a", " ", "full", " ", 
        RowBox[{"\[Alpha]", "."}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"u1rows", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"u1rows1", ",", 
          RowBox[{
           RowBox[{"Flocci$ProjectionMatrixExtendableQ", "[", 
            RowBox[{
             RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", 
             RowBox[{"Flocci$SSNode$Algebra", "[", "idIn", "]"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
               "Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "idIn", "]"}], 
               ",", "#"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
          RowBox[{
          "JTS", " ", "conjectures", " ", "that", " ", "the", " ", "below", 
           " ", "will", " ", "never", " ", "output", " ", "true"}], ".."}],
         FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "u1rows1", "]"}], "\[NotEqual]", " ", 
          RowBox[{"Length", "[", "u1rows", "]"}]}], ",", 
         RowBox[{
         "Print", "[", "\"\<Contradiction to supposed conjecture\>\"", 
          "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"u1rows", "=", "u1rows1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "If", " ", "no", " ", "rows", " ", "remain", " ", "we", " ", "output",
          " ", "idIn"}], ",", " ", 
        RowBox[{
        "which", " ", "indicates", " ", "that", " ", "this", " ", "node", " ",
          "and", " ", "all", " ", "those", " ", "nodes", " ", "below", " ", 
         "it", " ", "in", " ", "the", " ", "SS", " ", "tree", " ", "are", " ",
          "to", " ", "be", " ", 
         RowBox[{"removed", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "u1rows", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"Return", "[", "idIn", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "want", " ", "to", " ", "find", " ", "the", " ", "orbits", 
        " ", "of", " ", "the", " ", "u1s", " ", "under", " ", 
        RowBox[{"Automorphisms", "."}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "This", " ", "may", " ", "not", " ", "be", " ", "the", " ", "same", 
        " ", "as", " ", "the", " ", "full", " ", "automorphism", " ", 
        "group"}], ",", " ", 
       RowBox[{
        RowBox[{"since", " ", "some", " ", "out"}], "-", 
        RowBox[{
        "automorphisms", " ", "may", " ", "change", " ", "the", " ", "u1", 
         " ", "charges", " ", "but", " ", "not", " ", "the", " ", "semi"}], 
        "-", 
        RowBox[{"simple", " ", 
         RowBox[{"reps", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"stabalizerRows", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
          "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", "idIn", "]"}],
           ",", " ", 
          RowBox[{"Function", "[", 
           RowBox[{"o", ",", " ", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", ".", "o"}], "&"}], ",", " ", "u1rows"}], "]"}], 
              "]"}], "==", 
             RowBox[{"Sort", "[", "u1rows", "]"}]}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"orbits", "=", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"#", ".", "o"}], ",", 
                RowBox[{"{", 
                 RowBox[{"o", ",", "stabalizerRows"}], "}"}]}], "]"}], "]"}], 
             "]"}], "&"}], ",", " ", "u1rows"}], "]"}], "//", 
         "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"representatives", "=", 
        RowBox[{"orbits", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "want", " ", "to", " ", "get", " ", "the", " ", 
         "equivelence", " ", "classes", " ", "of", " ", "objects"}], ",", " ", 
        RowBox[{
        "and", " ", "the", " ", "morphisms", " ", "which", " ", "connect", 
         " ", "them"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"objectEquivelenceClasses", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"#", ".", "o"}], ",", 
              RowBox[{"{", 
               RowBox[{"o", ",", 
                RowBox[{
                "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", "idIn", 
                 "]"}]}], "}"}]}], "]"}], "]"}], "]"}], "&"}], ",", " ", 
         "u1rows"}], "]"}], "//", "DeleteDuplicates"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"representatives", "=", 
      RowBox[{"objectEquivelenceClasses", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "select", " ", "direct", " ", "parent", " ", "nodes", " ", 
        "to", " ", "the", " ", "current", " ", "nodes"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nearestNeigbours", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"Flocci$SSEdge$EdgeList", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "\[Equal]", 
          "idIn"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "We", " ", "sum", " ", "over", " ", "representatives", " ", "of", " ", 
         RowBox[{"objectEquivelenceClasses", ".", " ", "Each"}], " ", 
         "representative", " ", "gives", " ", "a", " ", "different", " ", 
         "node", " ", "on", " ", "our", " ", "RR", " ", 
         RowBox[{"graph", "."}]}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"We", " ", "create", " ", "the", " ", "node"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Flocci$RRNode$MaxId", "+=", "1"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flocci$RRNode$CorSSid", "[", "Flocci$RRNode$MaxId", "]"}], 
         "=", "idIn"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", "[", 
          "Flocci$RRNode$MaxId", "]"}], "=", 
         RowBox[{
         "representatives", "\[LeftDoubleBracket]", "r", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
           "Flocci$RRNode$StabalizeU1List", "[", "Flocci$RRNode$MaxId", "]"}],
            "=", "stabalizerRows"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Flocci$RRNode$U1EquivelenceClasses", "[", "Flocci$RRNode$MaxId", 
          "]"}], "=", 
         RowBox[{
         "objectEquivelenceClasses", "\[LeftDoubleBracket]", "r", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "We", " ", "now", " ", "want", " ", "to", " ", "consider", " ", 
          "the", " ", "morphisms"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "For", " ", "each", " ", "of", " ", "the", " ", "existing", " ", 
            "parent", " ", "edge", " ", "we", " ", "want", " ", "to", " ", 
            "see", " ", "new", " ", 
            RowBox[{"edges", "."}]}],
           FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
            RowBox[{
            "For", " ", "the", " ", "parent", " ", "node", " ", "in", " ", 
             "SS"}], ",", " ", 
            RowBox[{
            "we", " ", "get", " ", "the", " ", "corresponding", " ", "nodes", 
             " ", "in", " ", "RR"}]}],
           FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"supSSid", "=", 
            RowBox[{"n", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"supRRidL", "=", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Range", "[", "Flocci$RRNode$MaxId", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$RRNode$CorSSid", "[", "#", "]"}], "\[Equal]", 
                "supSSid"}], " ", "&"}]}], "]"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "The", " ", "corresponding", " ", "list", " ", "of", " ", 
             RowBox[{"Flocci$RRNode$MaxId", "'"}], "s"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
             "We", " ", "select", " ", "the", " ", "parent", " ", "nodes", 
              " ", "which", " ", "maps", " ", "down", " ", "to", " ", "the", 
              " ", "current", " ", "node", " ", "under", " ", 
              "\[CapitalLambda]\[Rho]"}],
             FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"\[CapitalLambda]\[Rho]", "=", 
            RowBox[{
            "n", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"supRRid", "=", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"supRRidL", ",", " ", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{
                  "Flocci$RRNode$U1EquivelenceClasses", "[", "#", "]"}], ",", 
                  
                  RowBox[{
                   RowBox[{
                   "representatives", "\[LeftDoubleBracket]", "r", 
                    "\[RightDoubleBracket]"}], ".", 
                   "\[CapitalLambda]\[Rho]"}]}], "]"}], "&"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
           " ", 
           RowBox[{"(*", 
            RowBox[{
            "The", " ", "length", " ", "of", " ", "this", " ", "must", " ", 
             "be", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
             "We", " ", "want", " ", "to", " ", "select", " ", "an", " ", 
              "outer", " ", "automorphism", " ", "so", " ", "that", " ", 
              "the", " ", "projection", " ", "matrix", " ", "works", " ", 
              "for", " ", "the", " ", "represenative"}],
             FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"aut\[CapitalLambda]\[Rho]", "=", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
              "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", "supSSid",
                "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "representatives", "\[LeftDoubleBracket]", "r", 
                  "\[RightDoubleBracket]"}], ".", "\[CapitalLambda]\[Rho]", 
                 ".", "#"}], "==", 
                RowBox[{
                "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", "[", 
                 "supRRid", "]"}]}], " ", "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[CapitalLambda]\[Rho]", "=", 
            RowBox[{"\[CapitalLambda]\[Rho]", ".", 
             RowBox[{
             "aut\[CapitalLambda]\[Rho]", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
             "We", " ", "then", " ", "save", " ", "this", " ", "data", " ", 
              "to", " ", "our", " ", "list", " ", "of", " ", 
              RowBox[{"edges", "."}]}],
             FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Flocci$RREdge$MaxId", "+=", "1"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Flocci$RREdge$Edge", "[", "Flocci$RREdge$MaxId", "]"}], 
            "=", 
            RowBox[{"supRRid", "\[Rule]", " ", "Flocci$RRNode$MaxId"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Flocci$RREdge$\[CapitalLambda]\[Rho]", "[", 
             "Flocci$RREdge$MaxId", "]"}], "=", "\[CapitalLambda]\[Rho]"}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "nearestNeigbours"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "1", ",", 
         RowBox[{"Length", "[", "representatives", "]"}]}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "If", " ", "we", " ", "get", " ", "to", " ", "this", " ", "point"}], 
        ",", " ", 
        RowBox[{
        "our", " ", "SS", " ", "node", " ", "gives", " ", "valid", " ", "RR", 
         " ", 
         RowBox[{"nodes", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     "Nothing"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873955786407481*^9, 3.873955829202104*^9}, {
   3.873956079227215*^9, 3.873956092715021*^9}, {3.8739561380041637`*^9, 
   3.873956202658942*^9}, {3.8739562844473057`*^9, 3.873956356924901*^9}, {
   3.8739564553541727`*^9, 3.873956498010048*^9}, {3.873957259092256*^9, 
   3.8739572685463657`*^9}, {3.874059996223419*^9, 3.874060066885873*^9}, {
   3.874063642388781*^9, 3.874063674332456*^9}, {3.8740637616144238`*^9, 
   3.874063775198779*^9}, {3.875249655918806*^9, 3.875249659788826*^9}, 
   3.875605630017509*^9, 3.875605768475342*^9, {3.8756087447938004`*^9, 
   3.8756087845561037`*^9}, {3.875608827611148*^9, 3.875608875734414*^9}, {
   3.877073688907485*^9, 3.877073735916149*^9}, {3.877074126596937*^9, 
   3.877074128484524*^9}, {3.8770744483067408`*^9, 3.87707444831971*^9}, 
   3.877074513198942*^9, {3.877074677045146*^9, 3.877074678741503*^9}, {
   3.877075941002893*^9, 3.877075955303155*^9}, {3.8770760227514143`*^9, 
   3.8770760249661417`*^9}, {3.877076124083104*^9, 3.8770761256746492`*^9}, {
   3.87707667004955*^9, 3.877076699824883*^9}, {3.877076798295504*^9, 
   3.877076798299337*^9}, {3.8770769017637672`*^9, 3.87707690176723*^9}, {
   3.877076954412627*^9, 3.87707702318532*^9}, {3.877077057106758*^9, 
   3.877077086192864*^9}, {3.877077367650095*^9, 3.877077398125352*^9}, {
   3.877077464189488*^9, 3.877077466836774*^9}, 3.877078049590571*^9, {
   3.877184744085747*^9, 3.87718474478127*^9}, {3.877185748696396*^9, 
   3.877185789038554*^9}, 3.877417740339325*^9, {3.877767729945047*^9, 
   3.877767776460984*^9}, {3.877767819817935*^9, 3.877767830320524*^9}, 
   3.877767892291541*^9, {3.877768551679418*^9, 3.877768555626193*^9}, {
   3.8777696685863323`*^9, 3.877769694554167*^9}, {3.877769851290678*^9, 
   3.8777698519105787`*^9}, {3.877769894116802*^9, 3.877769912655531*^9}, {
   3.877769957724667*^9, 3.877769958036128*^9}, {3.87777021309883*^9, 
   3.8777702231340733`*^9}, {3.8777707619802227`*^9, 3.8777707796518793`*^9}, 
   3.8777708418403397`*^9, {3.877771289402453*^9, 3.877771307912753*^9}, {
   3.8777714081396837`*^9, 3.877771463653883*^9}, {3.877771520440889*^9, 
   3.8777715266354313`*^9}, {3.87777167060422*^9, 3.8777716716303463`*^9}, {
   3.877772108854549*^9, 3.877772263682802*^9}, {3.877772399444386*^9, 
   3.8777724199745407`*^9}, 3.877772764769699*^9, {3.877772796554833*^9, 
   3.877772830902481*^9}, {3.8777730137028008`*^9, 3.877773024380574*^9}, {
   3.877773089398217*^9, 3.877773149784258*^9}, {3.878025479959449*^9, 
   3.878025480278219*^9}, {3.8780519286418467`*^9, 3.878051940758114*^9}, {
   3.879324762597241*^9, 3.8793248448469*^9}, {3.880680491856388*^9, 
   3.8806805177387867`*^9}, {3.880681009016066*^9, 3.880681015759222*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"8e9d544a-df33-4d5a-97d1-1a46fde87b87"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$RRNode$Algebra", "[", "id_", "]"}], ":=", 
  RowBox[{"Flocci$SSNode$Algebra", "[", 
   RowBox[{"Flocci$RRNode$CorSSid", "[", "id", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$RRNode$HWs", "[", "id_", "]"}], ":=", 
  RowBox[{"Flocci$SSNode$HWs", "[", 
   RowBox[{"Flocci$RRNode$CorSSid", "[", "id", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$RRNode$WS", "[", "id_", "]"}], ":=", 
  RowBox[{"Flocci$SSNode$WS", "[", 
   RowBox[{"Flocci$RRNode$CorSSid", "[", "id", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$RRNode$\[CapitalLambda]\[Alpha]", "[", "id_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", 
     RowBox[{"Flocci$RRNode$CorSSid", "[", "id", "]"}], "]"}], ",", 
    RowBox[{
    "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", "[", "id", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$RRNode$AlgebraList", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flocci$RRNode$Algebra", "[", "id", "]"}], ",", 
      RowBox[{"Flocci$RRNode$HWs", "[", "id", "]"}], ",", 
      RowBox[{"Flocci$RRNode$\[CapitalLambda]\[Alpha]", "[", "id", "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "1", ",", "Flocci$RRNode$MaxId"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$RREdge$EdgeList", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flocci$RREdge$Edge", "[", "id", "]"}], ",", 
      RowBox[{"Flocci$RREdge$\[CapitalLambda]\[Rho]", "[", "id", "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "1", ",", "Flocci$RREdge$MaxId"}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867909353483594*^9, 3.867909484521366*^9}, {
   3.8737971836511507`*^9, 3.873797202687374*^9}, {3.875249678752042*^9, 
   3.875249703956223*^9}, {3.875609067687849*^9, 3.87560910429405*^9}, {
   3.875609252607258*^9, 3.875609270966055*^9}, {3.8770737142768183`*^9, 
   3.877073719295823*^9}, {3.8770738863936377`*^9, 3.877073900486882*^9}, {
   3.877074133504253*^9, 3.8770741350726633`*^9}, {3.877074448321154*^9, 
   3.877074475992806*^9}, 3.877074513200049*^9, {3.877074685169765*^9, 
   3.8770746870532084`*^9}, {3.877075960205838*^9, 3.877075962116558*^9}, {
   3.877076457201159*^9, 3.8770764658713923`*^9}, {3.877076509459934*^9, 
   3.877076511504509*^9}, {3.877076558499172*^9, 3.877076575908864*^9}, {
   3.877076678251685*^9, 3.877076706293898*^9}, {3.8770767983008013`*^9, 
   3.877076798303732*^9}, 3.877076901768579*^9, 3.877077385957326*^9, 
   3.877077469776445*^9, {3.8774163276237917`*^9, 3.877416400435678*^9}, {
   3.8774164893335114`*^9, 3.87741651277833*^9}, {3.8774165990818787`*^9, 
   3.877416600697047*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"72e9dcfa-18b5-4e24-891c-922c0f83cc7c"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.88068284490941*^9, 3.880682963097425*^9}, {
   3.8806834224067802`*^9, 3.880683520212484*^9}, 
   3.880683600697608*^9},ExpressionUUID->"e555fc00-ffcc-4c65-b1d0-\
5dabb6f07a9b"],

Cell[BoxData[
 FormBox[
  DynamicBox[ToBoxes[$CellContext`count, TraditionalForm],
   ImageSizeCache->{48., {1., 10.}}], TraditionalForm]], "Print",
 CellChangeTimes->{{3.880683457394865*^9, 3.880683471710354*^9}, 
   3.88068352072193*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"f9b28820-4f85-48bc-af4c-6c6c82a74e13"],

Cell[BoxData[
 FormBox["$Aborted", TraditionalForm]], "Output",
 CellChangeTimes->{{3.880683440671792*^9, 3.8806834872791767`*^9}, 
   3.8806835864196043`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"4aba3447-fec3-42c0-aeca-d5bf06998bb4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8806834176627483`*^9, 
  3.880683421644136*^9}},ExpressionUUID->"57c82b2e-1893-426f-96dc-\
0cc46c63b836"],

Cell[CellGroupData[{

Cell[BoxData["grpahInput"], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"87806527-f913-4c44-9db5-8b484a458ea2"],

Cell[BoxData[
 FormBox[
  RowBox[{"$Aborted", "[", "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.880683411689859*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"d13acbf7-7066-4067-b7eb-abedbd13c403"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flocci$VertexDelete", "[", 
   RowBox[{"p_", ",", "assMap_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newEdges", ",", "alledges", ",", "oldEdges"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"p", "\[Equal]", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"oldEdges", "=", 
      RowBox[{"{", "p", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"alledges", "=", 
      RowBox[{"{", "p", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"alledges", "=", 
      RowBox[{"Reap", "[", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{"True", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"newEdges", "=", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"assMap", ",", "oldEdges"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"alledges", ",", "#"}], "]"}]}], ")"}], "&"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "newEdges", "]"}], "\[Equal]", "0"}], 
             ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldEdges", "=", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"newEdges", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Sow", "[", "oldEdges", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{
         "alledges", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", "p"}], "]"}], "//", "Flatten"}], "//", "DeleteDuplicates"}]}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.880689294622159*^9, 3.880689302632461*^9}, {
  3.8807025612480707`*^9, 3.8807025701342773`*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"edf46a23-b38c-4a76-8fb2-7c27585a4be9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$GenerateGraphDownwards\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DownDirec\>\"", ",", 
      "\"\<UserAlgebra) The inputed user algebra.\\nUserHW)The inputted user \
weight system. \>\"", ",", "\"\<Nothing.\>\"", ",", 
      "\"\<Works through the SS graph to create the RR graph. Then it \
performs the checks on extending \[CapitalLambda]\[Alpha] to \[Alpha].\>\""}],
      "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$GenerateGraphDownwards", "[", 
   RowBox[{"UserAlgebra_", ",", "UserHW_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vertices", ",", "edgesV", ",", "Vertexasc", ",", "assMap", ",", 
      "edgeListFlat", ",", "maximalSS", ",", "g", ",", "toRemove", ",", 
      "PathRemove", ",", "paths", ",", "verticesDelete", ",", "minimal", ",", 
      "conjectureBool", ",", "u1ProgressTemp"}], "}"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Flocci$RRNode$MaxId", "=", "0"}], ";", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"Flocci$RREdge$MaxId", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$UserHW", "=", "UserHW"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "start", " ", "with", " ", "a", " ", "list", " ", "of", 
         " ", "vertices", " ", "and", " ", "edges"}], ",", " ", 
        RowBox[{"and", " ", "make", " ", "the", " ", "full", " ", 
         RowBox[{"graph", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vertices", "=", " ", 
      RowBox[{"Range", "[", "Flocci$SSNode$MaxId", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgesV", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flocci$SSEdge$Edge", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Flocci$SSEdge$MaxId"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgeListFlat", "=", 
      RowBox[{"edgesV", "/.", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"assMap", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], " ", "&"}], 
        ",", 
        RowBox[{"GroupBy", "[", 
         RowBox[{"edgeListFlat", ",", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "&"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "extract", " ", "the", " ", "maximial", " ", "nodeS", " ", 
        "of", " ", "the", " ", 
        RowBox[{"garph", "."}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maximalSS", "=", 
      RowBox[{"GraphComputation`SourceVertexList", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "create", " ", "an", " ", "progress", " ", "monitor"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$U1Progress", "=", "\"\<\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flocci$U1ProgressCounter", "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u1ProgressTemp", "=", 
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"Dynamic", "[", "Flocci$U1Progress", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"maximalSS", "===", 
          RowBox[{"{", "1", "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"graphTest", "=", 
         RowBox[{"{", 
          RowBox[{
          "maximalSS", ",", "g", ",", "PathRemove", ",", "vertices", ",", 
           "edgesV", ",", "assMap"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"DumpSave", "[", 
           RowBox[{"\"\<GraphTest4.mx\>\"", ",", 
            RowBox[{"{", "graphTest", "}"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "For", " ", "each", " ", "maximal", " ", "node", " ", "SS", " ", 
            "node"}], ",", " ", 
           RowBox[{"we", " ", "make", " ", "the", " ", "RR", " ", 
            RowBox[{"nodes", ".", " ", "If"}], " ", "no", " ", "RR", " ", 
            "nodes", " ", "exist"}], ",", " ", 
           RowBox[{
           "the", " ", "corresponding", " ", "id", " ", "will", " ", "be", 
            " ", "in", " ", "this", " ", 
            RowBox[{"list", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PathRemove", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"Flocci$SpawnU1Nodes", ",", "maximalSS"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "will", " ", "delete", " ", "all", " ", "maximal", " ", 
            "nodes"}], ",", " ", 
           RowBox[{
           "and", " ", "all", " ", "paths", " ", "from", " ", "those", " ", 
            "for", " ", "which", " ", "no", " ", "u1", " ", 
            RowBox[{"exists", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"verticesDelete", "=", "maximalSS"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"verticesDelete", "=", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{"verticesDelete", ",", 
                   RowBox[{"Flocci$VertexDelete", "[", 
                    RowBox[{"p", ",", "assMap"}], "]"}]}], "]"}], "]"}], ",", 
                "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "PathRemove"}], "}"}]}], "]"}], ",", "p"}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"vertices", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"vertices", ",", "verticesDelete"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Vertexasc", "=", 
         RowBox[{"AssociationMap", "[", 
          RowBox[{
           RowBox[{"True", "&"}], ",", "verticesDelete"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"edgesV", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"edgesV", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Lookup", "[", 
                RowBox[{"Vertexasc", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", "False"}], "]"}], "||", 
               RowBox[{"Lookup", "[", 
                RowBox[{"Vertexasc", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", "False"}], "]"}]}], ")"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "repeate", " ", "the", " ", "above", " ", "steps", " ", 
            "with", " ", "the", " ", "new", " ", "maximal", " ", "nodes"}], 
           ",", " ", 
           RowBox[{"until", " ", "we", " ", "have", " ", "none", " ", 
            RowBox[{"left", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maximalSS", "=", 
         RowBox[{"GraphComputation`SourceVertexList", "[", "g", "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"verticesDelete", "=", "maximalSS"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"paths", "=", 
            RowBox[{"FindPath", "[", 
             RowBox[{"g", ",", "p", ",", "1", ",", "Infinity", ",", "All"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"verticesDelete", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"verticesDelete", ",", 
                 RowBox[{"Flatten", "[", "paths", "]"}]}], "]"}], "]"}], ",", 
              "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "PathRemove"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vertices", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"vertices", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"verticesDelete", ",", "#"}], "]"}]}], "&"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"edgesV", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"edgesV", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"verticesDelete", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"verticesDelete", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "repeate", " ", "the", " ", "above", " ", "steps", " ", 
            "with", " ", "the", " ", "new", " ", "maximal", " ", "nodes"}], 
           ",", " ", 
           RowBox[{"until", " ", "we", " ", "have", " ", "none", " ", 
            RowBox[{"left", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maximalSS", "=", 
         RowBox[{"GraphComputation`SourceVertexList", "[", "g", "]"}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "now", " ", "do", " ", "the", " ", "full", " ", "test", 
         " ", "of", " ", "weather", " ", "a", " ", "\[CapitalLambda]\[Alpha]",
          " ", "extends", " ", "to", " ", "a", " ", "full", " ", 
         RowBox[{"\[Alpha]", ".", " ", "This"}], " ", "should", " ", "really",
          " ", "be", " ", "in", " ", 
         RowBox[{"Flocci$SpawnU1Nodes", ".", " ", "However"}]}], ",", " ", 
        RowBox[{
        "if", " ", "the", " ", "minimal", " ", "pass", " ", "then", " ", "it",
          " ", "is", " ", "sufficent", " ", "to", " ", "do", " ", "only", " ", 
         RowBox[{"these", ".", " ", "We"}], " ", "conjecture", " ", "that", 
         " ", "this", " ", "check", " ", "never", " ", 
         RowBox[{"fails", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "PrintTemporary", "[", 
      "\"\<Performing check on extending \[CapitalLambda]\[Alpha] to full \
\[Alpha].\>\"", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"Flocci$PerformExtendingChecks", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"We", " ", "get", " ", "the", " ", "sink", " ", "vertcies"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"edgesV", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Flocci$RREdge$Edge", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "Flocci$RREdge$MaxId"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vertices", "=", " ", 
         RowBox[{"Range", "[", "Flocci$RRNode$MaxId", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"minimal", "=", 
         RowBox[{"GraphComputation`SinkVertexList", "[", "g", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"conjectureBool", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"conjectureBoolTemp", "=", 
            RowBox[{"Flocci$ProjectionMatrixExtendableQ", "[", 
             RowBox[{
              RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", 
              RowBox[{"Flocci$RRNode$Algebra", "[", "m", "]"}], ",", 
              RowBox[{
              "Flocci$RRNode$\[CapitalLambda]\[Alpha]", "[", "m", "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            StyleBox[
             RowBox[{
              RowBox[{
              "The", " ", "below", " ", "will", " ", "output", " ", "false", 
               " ", "on", " ", 
               RowBox[{"e", ".", "g", ".", " ", "A1"}]}], ",", "A2", ",", 
              RowBox[{"U1", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1", ",", 
                   RowBox[{"-", "4"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], 
                "}"}]}]}],
             FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "conjectureBoolTemp"}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Some algebras are not extendable, a more detailed \
analysis will be done. Example of fail: \>\"", ",", 
                RowBox[{"Flocci$RRNode$Algebra", "[", "m", "]"}], ",", 
                RowBox[{
                "Flocci$RRNode$\[CapitalLambda]\[Alpha]", "[", "m", "]"}]}], 
               "]"}], ";", 
              RowBox[{"conjectureBool", "=", "False"}], ";", 
              RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "minimal"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{
           "If", " ", "the", " ", "result", " ", "is", " ", "not", " ", 
            "true"}], " ", "-", " ", 
           RowBox[{
           "we", " ", "extract", " ", "all", " ", "algebras", " ", "for", " ",
             "which", " ", "it", " ", 
            RowBox[{"fails", ".", " ", 
             RowBox[{"JTS", ":", 
              RowBox[{
               RowBox[{"20", "/", "01"}], "/", "23"}]}]}]}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "minimalBreak", ",", "edgesRmv", ",", "verticesRmv", ",", 
            "compVert", ",", "compEdge"}], "}"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "conjectureBool"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
               "We", " ", "find", " ", "which", " ", "of", " ", "the", " ", 
                "minimal", " ", "algebras", " ", "break", " ", "the", " ", 
                "condition"}],
               FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"While", "[", 
               RowBox[{"True", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"minimalBreak", "=", 
                  RowBox[{"Monitor", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", " ", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Flocci$ProjectionMatrixExtendableQ", "[", 
                    RowBox[{
                    RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", 
                    RowBox[{"Flocci$RRNode$Algebra", "[", "mt", "]"}], ",", 
                    RowBox[{
                    "Flocci$RRNode$\[CapitalLambda]\[Alpha]", "[", "mt", 
                    "]"}]}], "]"}], ",", "Nothing", ",", "mt"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"mt", ",", "minimal"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"mt", ",", 
                    RowBox[{"Length", "[", "minimal", "]"}]}], "}"}]}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "minimalBreak", "]"}], "\[Equal]", 
                    "0"}], ",", 
                   RowBox[{
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                   "We", " ", "find", " ", "the", " ", "new", " ", "minima"}],
                   
                   FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"edgesRmv", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "Flocci$RREdge$MaxId", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"minimalBreak", ",", 
                    RowBox[{
                    RowBox[{"Flocci$RREdge$Edge", "[", "#", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "]"}], "||", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"minimalBreak", ",", 
                    RowBox[{
                    RowBox[{"Flocci$RREdge$Edge", "[", "#", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"verticesRmv", "=", 
                  RowBox[{"minimalBreak", "//", "Sort"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                    RowBox[{"Changing", ":", " ", "Flocci$RRNode$MaxId"}], 
                    ",", " ", "Flocci$RRNode$CorSSid", ",", " ", 
                    "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", ",", " ", 
                    "Flocci$RRNode$U1EquivelenceClasses", ",", 
                    "Flocci$RRNode$Algebra", ",", "Flocci$RRNode$HWs", ",", 
                    "Flocci$RRNode$WS", ",", 
                    "Flocci$RRNode$\[CapitalLambda]\[Alpha]"}],
                   FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"compVert", "=", 
                  RowBox[{
                   RowBox[{"Complement", "[", 
                    RowBox[{"vertices", ",", "minimalBreak"}], "]"}], "//", 
                   "Sort"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Flocci$RRNode$MaxId", "=", 
                  RowBox[{"Flocci$RRNode$MaxId", "-", 
                   RowBox[{"Length", "[", "minimalBreak", "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$RRNode$CorSSid", "[", "ip", "]"}], "=", 
                    RowBox[{"Flocci$RRNode$CorSSid", "[", 
                    RowBox[{
                    "compVert", "\[LeftDoubleBracket]", "ip", 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", "[", "ip",
                     "]"}], "=", 
                    RowBox[{
                    "Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows", "[", 
                    RowBox[{
                    "compVert", "\[LeftDoubleBracket]", "ip", 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Flocci$RRNode$U1EquivelenceClasses", "[", "ip", "]"}], 
                    "=", 
                    RowBox[{"Flocci$RRNode$U1EquivelenceClasses", "[", 
                    RowBox[{
                    "compVert", "\[LeftDoubleBracket]", "ip", 
                    "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"ip", ",", "1", ",", "Flocci$RRNode$MaxId"}], 
                    "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  StyleBox[
                   RowBox[{
                    RowBox[{"Changing", ":", " ", "Flocci$RREdge$MaxId"}], 
                    ",", "Flocci$RREdge$Edge", ",", 
                    "Flocci$RREdge$\[CapitalLambda]\[Rho]"}],
                   FontColor->RGBColor[0.6, 0.4, 0.2]], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"compEdge", "=", 
                  RowBox[{
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "Flocci$RREdge$MaxId", "]"}], ",", 
                    "edgesRmv"}], "]"}], "//", "Sort"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Flocci$RREdge$MaxId", "=", 
                  RowBox[{"Flocci$RREdge$MaxId", "-", 
                   RowBox[{"Length", "[", "edgesRmv", "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Flocci$RREdge$Edge", "[", "ip", "]"}], "=", 
                    RowBox[{
                    RowBox[{"Flocci$RREdge$Edge", "[", 
                    RowBox[{
                    "compEdge", "\[LeftDoubleBracket]", "ip", 
                    "\[RightDoubleBracket]"}], "]"}], "/.", " ", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"compVert", "\[Rule]", " ", 
                    RowBox[{"Range", "[", "Flocci$RRNode$MaxId", "]"}]}], 
                    "]"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Flocci$RREdge$\[CapitalLambda]\[Rho]", "[", "ip", "]"}], 
                    "=", 
                    RowBox[{"Flocci$RREdge$\[CapitalLambda]\[Rho]", "[", 
                    RowBox[{
                    "compEdge", "\[LeftDoubleBracket]", "ip", 
                    "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"ip", ",", "1", ",", "Flocci$RREdge$MaxId"}], 
                    "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"edgesV", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Flocci$RREdge$Edge", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "Flocci$RREdge$MaxId"}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"vertices", "=", " ", 
                  RowBox[{"Range", "[", "Flocci$RRNode$MaxId", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"g", "=", 
                  RowBox[{"Graph", "[", 
                   RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"minimal", "=", 
                  RowBox[{
                  "GraphComputation`SinkVertexList", "[", "g", "]"}]}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "PrintTemporary", "[", 
      "\"\<End of check on extending \[CapitalLambda]\[Alpha] to full \
\[Alpha].\>\"", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "u1ProgressTemp", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873796841515156*^9, 3.8737970627584333`*^9}, {
   3.875249663507351*^9, 3.875249666378899*^9}, 3.875608850807516*^9, {
   3.875608883880608*^9, 3.875608884259384*^9}, {3.875608939279992*^9, 
   3.8756089530509777`*^9}, {3.875609020591617*^9, 3.8756090465619183`*^9}, {
   3.875609090197728*^9, 3.875609093875757*^9}, {3.877076293967496*^9, 
   3.877076296953107*^9}, 3.877077389327505*^9, 3.877077473227721*^9, 
   3.877077555131092*^9, 3.877077623034308*^9, {3.877767787435072*^9, 
   3.877767798326833*^9}, {3.87776964326173*^9, 3.877769654067375*^9}, {
   3.877769862162208*^9, 3.877769887481146*^9}, {3.87776995207165*^9, 
   3.8777699524798317`*^9}, {3.877770115692093*^9, 3.877770141926263*^9}, {
   3.877770195736321*^9, 3.8777702071195097`*^9}, {3.8777714419440603`*^9, 
   3.877771443670203*^9}, {3.8780519787882357`*^9, 3.8780521202090693`*^9}, {
   3.878052152496317*^9, 3.878052252392805*^9}, {3.878052383162262*^9, 
   3.878052423772583*^9}, {3.879324862436949*^9, 3.879324874121375*^9}, {
   3.87932502276407*^9, 3.879325049927334*^9}, {3.879325128482876*^9, 
   3.87932519840232*^9}, {3.879401065322028*^9, 3.879401065664315*^9}, {
   3.879593150008444*^9, 3.879593170034089*^9}, {3.879593216158564*^9, 
   3.879593228454606*^9}, {3.880681685045207*^9, 3.880681688158046*^9}, {
   3.880682213763129*^9, 3.880682243945435*^9}, {3.880682974058133*^9, 
   3.8806829926427526`*^9}, {3.880689369740059*^9, 3.880689465116708*^9}, {
   3.8806895051885433`*^9, 3.880689505440124*^9}, 3.880689934843135*^9, 
   3.880691111519178*^9, {3.880692001402937*^9, 3.880692079682053*^9}, {
   3.880694727711969*^9, 3.8806947601504517`*^9}, {3.880694797650538*^9, 
   3.8806948011302633`*^9}, {3.8807131705853024`*^9, 3.880713187346389*^9}, {
   3.880718085634691*^9, 3.880718121015593*^9}, {3.880721226640085*^9, 
   3.880721282552973*^9}, {3.895838167941029*^9, 3.895838178046712*^9}, 
   3.8961755952984867`*^9, {3.8963452211236343`*^9, 3.8963452239707623`*^9}, {
   3.896349440477146*^9, 
   3.896349440743217*^9}},ExpressionUUID->"caa0c708-10a8-4a4f-a2ef-\
095368905d8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ShowFinalGraph\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DownDirec\>\"", ",", "\"\<-\>\"", ",", "\"\<A graph\>\"", ",", 
      "\"\<Generates the final RR graph.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ShowFinalGraph", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vertices", ",", "edgesV", ",", "labels"}], "}"}], ",", 
    RowBox[{
     RowBox[{"vertices", "=", " ", 
      RowBox[{"Range", "[", "Flocci$RRNode$MaxId", "]"}]}], ";", 
     RowBox[{"edgesV", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flocci$RREdge$Edge", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Flocci$RREdge$MaxId"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"labels", "=", 
      RowBox[{"Map", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$RRNode$Algebra", "[", "#", "]"}], "&"}], ",", 
        "vertices"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{"vertices", ",", "edgesV", ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"v_", "\[RuleDelayed]", 
          RowBox[{"Placed", "[", 
           RowBox[{"v", 
            RowBox[{"(*", 
             RowBox[{"Style", "[", 
              RowBox[{
              "labels", "\[LeftDoubleBracket]", "v", 
               "\[RightDoubleBracket]"}], "]"}], "*)"}], ",", "Center"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "0.4"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<IndexLabeled\>\""}], ",", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867910902442924*^9, 3.867910923144435*^9}, {
   3.867911109352652*^9, 3.867911110461898*^9}, {3.867913624115129*^9, 
   3.867913629400999*^9}, {3.867913806006276*^9, 3.867913807512054*^9}, {
   3.87524970655265*^9, 3.875249709085662*^9}, {3.8756091165810833`*^9, 
   3.8756091294467278`*^9}, {3.8756103430811872`*^9, 3.875610345784233*^9}, {
   3.877073872535349*^9, 3.8770738774378557`*^9}, 3.8770744759939537`*^9, {
   3.877076685912575*^9, 3.877076687934608*^9}, 3.877077394148993*^9, 
   3.877077478658647*^9, {3.8793252217967453`*^9, 3.879325254080043*^9}},
 CellLabel->
  "In[675]:=",ExpressionUUID->"804126f5-46df-4e03-b1f2-c73405bbdaa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checkpointing ", "Section",
 CellChangeTimes->{{3.879833112113796*^9, 
  3.879833117747671*^9}},ExpressionUUID->"879344ba-83a2-4298-b790-\
fa186bed6f26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Checkpoint$FileName\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Checkpoint\>\"", ",", "\"\<-\>\"", ",", 
      "\"\<False or a string.\>\"", ",", 
      "\"\<False is checkpointing should not be done. The start bit of the \
file name, if checkpointing should be done.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Checkpoint$CheckpointUpFreq\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Checkpoint\>\"", ",", "\"\<-\>\"", ",", "\"\<An integer.\>\"", ",", 
      "\"\<How often in terms of Flocci$SSNode$currentSSid should \
checkpointing be done.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Checkpoint$StartFromCheckpoint\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Checkpoint\>\"", ",", "\"\<-\>\"", ",", "\"\<True or False.\>\"", 
      ",", "\"\<If true, the evalutation will start from a mid-point if the \
required file name exists.\>\""}], "}"}]}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879837580720509*^9, 3.879837685825645*^9}},
 CellLabel->
  "In[677]:=",ExpressionUUID->"58fc506a-df72-4e6d-bfd6-3edfef595a5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Checkpoint$SaveDataUp\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Checkpoint\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
      "\"\<Saves the minimal set of data required to restart the code from \
mid-evalutation.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$Checkpoint$SaveDataUp", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PrintTemporary", "[", "\"\<Checkpointed\>\"", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"DumpSave", "[", 
       RowBox[{
        RowBox[{"Flocci$Checkpoint$FileName", "<>", "\"\<.mx\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Flocci$SSNode$currentSSid", ",", "Flocci$SSNode$MaxId", ",", 
          "Flocci$SSNode$Algebra", ",", "Flocci$SSNode$HWs", ",", 
          "Flocci$SSNode$WS", ",", "Flocci$SSNode$UniIrrepDomin", ",", 
          "Flocci$SSNode$UniIrrepDominFlat", ",", 
          "Flocci$SSNode$UniIrrepDominRange", ",", "Flocci$SSNode$UniHWs", 
          ",", "Flocci$SSNode$HWsMult", ",", "Flocci$SSNode$Delta", ",", 
          "Flocci$SSNode$DeltaCoprime", ",", 
          "Flocci$SSNode$\[CapitalLambda]\[Alpha]", ",", 
          "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", ",", 
          "Flocci$SSNode$AnomFreeCharges", ",", "Flocci$SSNode$AlgebraList", 
          ",", "Flocci$SSEdge$MaxId", ",", "Flocci$SSEdge$Edge", ",", 
          "Flocci$SSEdge$\[CapitalLambda]\[Rho]", ",", 
          "Flocci$SSEdge$EdgeList", ",", "Flocci$VertexAssoc", ",", 
          "Flocci$EdgeAssoc"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879833233550655*^9, 3.8798332798306093`*^9}, {
   3.87983474823153*^9, 3.879834795411107*^9}, {3.8798349643177853`*^9, 
   3.879834973424568*^9}, {3.879835574359046*^9, 3.879835599112608*^9}, {
   3.879835653881254*^9, 3.879835709923011*^9}, 3.879836051501937*^9, {
   3.879836529230809*^9, 3.87983665092668*^9}, {3.879836913736615*^9, 
   3.879836918422227*^9}, {3.8798374115507298`*^9, 3.879837457756287*^9}},
 CellLabel->
  "In[680]:=",ExpressionUUID->"363fdf7c-4081-484c-8464-b52e11be8129"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$Checkpoint$Restart\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Checkpoint\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
      "\"\<Reads in data required for restart at a mid-evaluation \
point.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$Checkpoint$Restart", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PrintTemporary", "[", "\"\<Loading in saved data\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Import", "[", 
       RowBox[{"Flocci$Checkpoint$FileName", "<>", "\"\<.mx\>\""}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879835304083028*^9, 3.87983532445013*^9}, {
  3.8798355700690527`*^9, 3.879835571044261*^9}, {3.8798356092447643`*^9, 
  3.8798356187002163`*^9}, {3.879835817429637*^9, 3.879835827048812*^9}, {
  3.879837473395636*^9, 3.879837490328383*^9}, {3.8798375262689743`*^9, 
  3.879837569844886*^9}},
 CellLabel->
  "In[683]:=",ExpressionUUID->"014b10a8-4d81-4986-8d1b-4c9dd4b064b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Meta functions", "Section",
 CellChangeTimes->{{3.8691488863061333`*^9, 3.869148888933097*^9}, {
  3.869149508361644*^9, 3.8691495167372103`*^9}, {3.8691495867461643`*^9, 
  3.8691495895852537`*^9}, {3.875610669261938*^9, 
  3.8756106717492733`*^9}},ExpressionUUID->"b0d4e4b1-3edc-4ca6-a6c6-\
b994fb5407d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "SS", " ", "nodes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$currentSSid\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<Integer\>\"", ",", 
        "\"\<The current child node we are looking at. This will be less then \
Flocci$SSNode$MaxId.\>\"", ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$MaxId\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<Integer\>\"", ",", 
        "\"\<The number of SS nodes generated.\>\"", ",", "\"\<1\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$Algebra\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
        "\"\<A semi-simple algebra\>\"", ",", 
        "\"\<The algebra associated with SS node i.\>\"", ",", "\"\<2\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$HWs\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
        "\"\<An integer 2-tensor.\>\"", ",", 
        "\"\<The heighest weights associated with SS node i.\>\"", ",", 
        "\"\<2\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$WS\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
        "\"\<An integer 2-tensor.\>\"", ",", 
        "\"\<The weight system of Flocci$SSNode$HWs[i].\>\"", ",", 
        "\"\<2\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$UniIrrepDomin\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
        "\"\<A ragged list of 2-tensors.\>\"", ",", 
        "\"\<The dominant weights of unique irreps appearing in \
Flocci$SSNode$HWs[i]. Could be un-globalized.\>\"", ",", "\"\<2\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$UniIrrepDominFlat\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 2-tensors.\>\"", ",", 
       "\"\<A flattened version of Flocci$SSNode$UniIrrepDomin[i].\>\"", ",", 
       "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$UniIrrepDominRange\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 2-tensors.\>\"", ",", 
       "\"\<The ranges between which each 2-tensor in  \
Flocci$SSNode$UniIrrepDomin[i] appears in the flattened version \
Flocci$SSNode$UniIrrepDominFlat[i].\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$UniHWs\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 2-tensors.\>\"", ",", 
       "\"\<The highest weights associated with SS node i with duplicates \
deleted.\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$HWsMult\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 1-tensors.\>\"", ",", 
       "\"\<The multiplicity of each unique type of weight in \
Flocci$SSNode$HWs[i] in an order matching Flocci$SSNode$UniHWs[i].\>\"", ",", 
       "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$Delta\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An 1-tensors.\>\"", ",", 
       "\"\<A concontatination of the vectors formed by applying the metric \
tensor of each simple ideal in Flocci$SSNode$Algebra[i] to the constant \
vector of 1s. \>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$Delta\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An 1-tensors.\>\"", ",", 
       "\"\<A concontatination of the vectors formed by applying the metric \
tensor of each simple ideal in Flocci$SSNode$Algebra[i] to the constant \
vector of 1s.Could be un-globalized. \>\"", ",", "\"\<2\>\""}], "}"}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$DeltaCoprime\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 1-tensors.\>\"", ",", 
       "\"\<A constant multiple of Flocci$SSNode$Delta such that all entries \
are integer.\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$\[CapitalLambda]\[Alpha]\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 2-tensors.\>\"", ",", 
       "\"\<The projection matrix down to the semi-simple part of the user \
input algebra associated with the SS node i.\>\"", ",", "\"\<2\>\""}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An  list of integer 2-tensors.\>\"", ",", 
       "\"\<The automorphisms of Flocci$SSNode$Algebra[i] which preserve the \
weight system and Flocci$SSNode$\[CapitalLambda]\[Alpha][i].\>\"", ",", 
       "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$SSNode$AnomFreeCharges\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<i) Integer >= 1\>\"", ",", 
       "\"\<An integer 3-tensors.\>\"", ",", 
       "\"\<Charge assigments matching the weightsystem which pass anomaly \
free checks. Permutations amonst equal weights are not repeated.\>\"", ",", 
       "\"\<2\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSNode$AlgebraList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A list of triples.\>\"", 
        ",", "\"\<Outputs the list of all \
{Flocci$SSNode$Algebra[i],Flocci$SSNode$HWs[i],Flocci$SSNode$\[CapitalLambda]\
\[Alpha][i]}\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "SS", " ", "edges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSEdge$MaxId\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer.\>\"", ",", 
        "\"\<The number of SS edges generated.\>\"", ",", "\"\<1\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSEdge$Edge\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <= Flocci$SSEdge$MaxId\>\"", ",", 
        "\"\<A Rule[...,...]\>\"", ",", 
        "\"\<The rule will be j1->j2 indicating that j1 is a parent node of \
j2.\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSEdge$\[CapitalLambda]\[Rho]\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <= Flocci$SSEdge$MaxId\>\"", ",", 
        "\"\<A 2-integer.\>\"", ",", 
        "\"\<The projection matrix associated with the edge \
Flocci$SSEdge$Edge[i].\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SSEdge$EdgeList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A list of pairs.\>\"", 
        ",", "\"\<Outputs the list of all \
Flocci$SSEdge$Edge[i],Flocci$SSEdge$\[CapitalLambda]\[Rho][i]\>\""}], "}"}]}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "RR", " ", "nodes"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$MaxId\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer.\>\"", ",", 
        "\"\<The number of RR edges generated.\>\"", ",", "\"\<1\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$CorSSid\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) An Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<An Integer.\>\"", ",", 
        "\"\<The id of the SS node this RR node spawned from.\>\"", ",", 
        "\"\<2\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$U1\[CapitalLambda]\[Alpha]Rows\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) An Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<An Integer 2-tensor.\>\"", ",", 
        "\"\<The rows of \[CapitalLambda]\[Alpha] associated with \
U(1)'s.\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Flocci$SetDescription", "[", 
      RowBox[{"\"\<Flocci$RRNode$StabalizeU1List\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Global\>\"", ",", 
         "\"\<i) An Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
         "\"\<A  integer 3-Tensor.\>\"", ",", 
         "\"\<Let idIn be the corresponding SS node id. The subgroup of \
Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha][idIn] which preserves the list \
of all u1 rows (not point wise).\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$U1EquivelenceClasses\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) An Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<An Integer 3-tensor.\>\"", ",", 
        "\"\<The connected elements of Flocci$RRNode$U1\[CapitalLambda]\
\[Alpha]Rows[i] under the action of  Flocci$SSNode$AutPres\[CapitalLambda]\
\[Alpha][inID].\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$Algebra\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<A semi-simple algebra\>\"", ",", 
        "\"\<The algebra associated with RR node i.\>\""}], "}"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$HWs\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<An integer 2-tensor.\>\"", ",", 
        "\"\<The heighest weights associated with RR node i.\>\""}], "}"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$WS\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
        "\"\<An integer 2-tensor.\>\"", ",", 
        "\"\<The weight system of Flocci$RRNode$HWs[i].\>\""}], "}"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$RRNode$\[CapitalLambda]\[Alpha]\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", 
       "\"\<i) Integer >= 1 and <=Flocci$RRNode$MaxId\>\"", ",", 
       "\"\<An integer 2-tensors.\>\"", ",", 
       "\"\<The projection matrix down to the user input algebra associated \
with the RR node i.\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RRNode$AlgebraList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A list of triples.\>\"", 
        ",", "\"\<Outputs the list of all \
{Flocci$RRNode$Algebra[id],Flocci$RRNode$HWs[id],Flocci$RRNode$\
\[CapitalLambda]\[Alpha][id]}\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "RR", " ", "edges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RREdge$MaxId\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer.\>\"", ",", 
        "\"\<The number of RR edges generated.\>\"", ",", "\"\<1\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RREdge$Edge\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <= Flocci$RREdge$MaxId\>\"", ",", 
        "\"\<A Rule[...,...]\>\"", ",", 
        "\"\<The rule will be j1->j2 indicating that j1 is a parent node of \
j2.\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RREdge$\[CapitalLambda]\[Rho]\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", 
        "\"\<i) Integer >= 1 and <= Flocci$RREdge$MaxId\>\"", ",", 
        "\"\<A 2-integer.\>\"", ",", 
        "\"\<The projection matrix associated with the edge \
Flocci$RREdge$Edge[i].\>\"", ",", "\"\<2\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$RREdge$EdgeList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A list of pairs.\>\"", 
        ",", "\"\<Outputs the list of all \
{Flocci$RREdge$Edge[id],Flocci$RREdge$\[CapitalLambda]\[Rho][id]}\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Other", " ", "global", " ", "varibles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Flocci$User$A1Dim\>\"", ",", "\"\<Flocci$User$U1sPresentBool\>\"", 
       ",", "\"\<Flocci$User$RootList\>\"", ",", 
       "\"\<Flocci$User$IrrepWeightLocation\>\"", ",", 
       "\"\<Flocci$User$MaxAlgList\>\"", ",", 
       "\"\<Flocci$User$GraphPoints\>\""}], "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$A1Dim\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer.\>\"", ",", 
        "\"\<The dimension of all reps that are tirivial under all non-A1 \
factors.\>\"", ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$U1sPresentBool\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<True or False\>\"", ",", 
        "\"\<True if the user algebra contains U(1)'s, False otherwise.\>\"", 
        ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$RootList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A Integer 2-Tensor\>\"", 
        ",", "\"\<A list of the roots for the user algebra, with 0's for U(1) \
factors.\>\"", ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$IrrepWeightLocation\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A Integer 2-Tensor\>\"", 
        ",", "\"\<Contains a list based on the user algebra e.g. {{31, 32}, \
{1, 2}, {3, 4}, {7, 8}, {25, 26}, {27, 28}, {-1, -1}, {17, 20}, {9, 12}, {21, \
24}, {-1, -1}, {29, 30}, {5, 6}, {-1, -1}, {13, 16}}. The {-1,-1} splits \
distinict irreps. The first number e.g. {31,32} is the location of the \
highest weight. The numbers which follow are the positions of the other \
weights for that representation (in no real order).\>\"", ",", "\"\<1\>\""}], 
       "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$MaxAlgList\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", 
        "\"\<A list of triples containing 1) The simple parent algebra. 2) \
The semi-simple child algebra. 3) The projection matrix.\>\"", ",", 
        "\"\<Contains the dynamically generated list of maximal \
embeddings\>\"", ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$User$GraphPoints\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A 2-tensor\>\"", ",", 
        "\"\<Used for plotting the progress graph on running the code.\>\"", 
        ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$U1Progress\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<A string\>\"", ",", 
        "\"\<Used to monitor the progress in the downward direction.\>\"", 
        ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$U1ProgressCounter\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer\>\"", ",", 
        "\"\<Used to monitor the progress in the downward direction.\>\"", 
        ",", "\"\<1\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$ProjectionMatrixList\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Global\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<False or list of projection matrices\>\"", ",", 
       "\"\<Optional input, so algebra list does not have to be created \
multiple times.\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$SetDescription", "[", 
     RowBox[{"\"\<Flocci$SimpleIdealConstraint\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Global\>\"", ",", "\"\<-\>\"", ",", "\"\<An Integer\>\"", ",", 
        "\"\<Optional input, limiting the number simple ideals in the up \
direction tree.\>\""}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.875771208265913*^9, 3.875771302433652*^9}, {
   3.8757714238480577`*^9, 3.875771508028491*^9}, {3.876230774831696*^9, 
   3.87623079275263*^9}, {3.876914106530514*^9, 3.876914118231512*^9}, {
   3.877071816008794*^9, 3.877071837618354*^9}, {3.877073450684156*^9, 
   3.877073468725471*^9}, {3.87707384558123*^9, 3.8770738606699333`*^9}, {
   3.87707392627005*^9, 3.877073971500207*^9}, {3.877074428770081*^9, 
   3.8770745670371923`*^9}, 3.877074711386457*^9, {3.877074784645626*^9, 
   3.877074844803255*^9}, {3.8770749414621887`*^9, 3.8770749830027237`*^9}, {
   3.877075137345954*^9, 3.877075140577071*^9}, {3.877075241433563*^9, 
   3.877075248343924*^9}, {3.87707531510583*^9, 3.877075366105234*^9}, {
   3.8770754209047403`*^9, 3.877075434069702*^9}, {3.877075512930851*^9, 
   3.8770755327907553`*^9}, {3.877075585648312*^9, 3.877075604728466*^9}, {
   3.877075646400436*^9, 3.877075656280508*^9}, {3.877075736192584*^9, 
   3.877075742575431*^9}, {3.877075800549049*^9, 3.877075880273388*^9}, {
   3.877075985694275*^9, 3.877075991727537*^9}, {3.8770760501266193`*^9, 
   3.877076081987516*^9}, {3.87707614441033*^9, 3.877076171565971*^9}, 
   3.877076205570932*^9, {3.877076236418085*^9, 3.877076255422159*^9}, {
   3.877076327353057*^9, 3.877076333542934*^9}, {3.877076379811853*^9, 
   3.877076399247797*^9}, {3.877076446913886*^9, 3.877076452071389*^9}, {
   3.87707648727028*^9, 3.877076501364677*^9}, {3.877076537058538*^9, 
   3.877076542380262*^9}, {3.877076592552375*^9, 3.877076610641161*^9}, {
   3.8770766524179783`*^9, 3.877076662679777*^9}, {3.8770767592612047`*^9, 
   3.87707680617941*^9}, {3.877076876572307*^9, 3.877076881240458*^9}, {
   3.8770770337127743`*^9, 3.877077033906415*^9}, {3.877077095125704*^9, 
   3.877077099667457*^9}, {3.877077335233466*^9, 3.87707735660038*^9}, {
   3.877077410991877*^9, 3.877077456219261*^9}, {3.877077513558008*^9, 
   3.877077532793543*^9}, {3.877077599570587*^9, 3.877077627461194*^9}, {
   3.877077692464884*^9, 3.877077717701301*^9}, {3.877077748723559*^9, 
   3.8770778040287943`*^9}, 3.877077879911756*^9, {3.877078049592277*^9, 
   3.877078101099392*^9}, {3.877078181200636*^9, 3.87707819146408*^9}, {
   3.877155435494493*^9, 3.8771554456533327`*^9}, {3.877155479977911*^9, 
   3.877155481057776*^9}, {3.877155545626122*^9, 3.87715555046758*^9}, 
   3.877155703410183*^9, {3.877156895392766*^9, 3.8771569602511263`*^9}, {
   3.877157496849906*^9, 3.877157590236947*^9}, {3.87715763582808*^9, 
   3.877158158108032*^9}, {3.877158209795629*^9, 3.877158587610755*^9}, {
   3.877169489965415*^9, 3.877169834089346*^9}, {3.87716992730462*^9, 
   3.8771699574286203`*^9}, {3.8771699978309717`*^9, 
   3.8771704414465027`*^9}, {3.877170479481328*^9, 3.877170638534238*^9}, {
   3.877170673462368*^9, 3.877170675923913*^9}, {3.877170715078793*^9, 
   3.8771707350099382`*^9}, {3.877170770693623*^9, 3.877170783379017*^9}, {
   3.8771708340179577`*^9, 3.877170881295207*^9}, {3.877416413570573*^9, 
   3.8774164348464937`*^9}, {3.8774164650456667`*^9, 3.877416479416531*^9}, {
   3.877416547990562*^9, 3.877416577302226*^9}, {3.8774176666868057`*^9, 
   3.877417698462555*^9}, {3.877417784592264*^9, 3.877417806777622*^9}, {
   3.877418718030161*^9, 3.8774187536089487`*^9}, {3.877418844795336*^9, 
   3.877418863412443*^9}, {3.8774191745324287`*^9, 3.877419369579134*^9}, {
   3.877767906131518*^9, 3.877767932747045*^9}, {3.87777035528494*^9, 
   3.877770375058754*^9}, {3.877771544456574*^9, 3.877771552580968*^9}, {
   3.8777732266377277`*^9, 3.8777732719175587`*^9}, {3.879326984175414*^9, 
   3.879326984794882*^9}, {3.879844752093172*^9, 3.879844793685545*^9}, {
   3.879948882124186*^9, 3.8799489231799*^9}, {3.879949101346982*^9, 
   3.879949110180895*^9}},
 CellLabel->
  "In[685]:=",ExpressionUUID->"9b7ef555-6ff1-4371-ad75-68b8f2b9b99f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$InitializeInputData\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Meta\>\"", ",", 
      "\"\<UserAlgbra) The User algebra.\\n UserHW) The User highest weights.\
\>\"", ",", "\"\<None.\>\"", ",", 
      "\"\<Sets global varibles, and the first node of the SS graph. Runs \
Flocci$GenerateMaxEmbeddingList.\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$InitializeInputData", "[", 
   RowBox[{"UserAlgebra_", ",", "UserHW_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rank", ",", "U1ws", ",", "chargesUser", ",", "noU1s", ",", "weightList",
       ",", "weightListFlat"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Flocci$ClearSavedData", ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "want", " ", "to", " ", "count", " ", "the", " ", "number", 
        " ", "of", " ", 
        RowBox[{"U1", "'"}], "s", " ", "in", " ", "our", " ", 
        RowBox[{"algebra", "."}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"noU1s", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"UserAlgebra", ",", "U1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flocci$User$U1sPresentBool", "=", 
      RowBox[{"noU1s", "\[NotEqual]", " ", "0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "reset", " ", "our", " ", "counters"}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$MaxId", "=", "1"}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "Flocci$SSNode$MaxId", " ", "tracks", " ", "the", " ", "nodes"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSEdge$MaxId", "=", "0"}], ";", " ", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "Flocci$SSEdge$MaxId", " ", "tracks", " ", "the", " ", "edges"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "initiate", " ", "association", " ", 
        RowBox[{"maps", "."}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$UniIrrepDomin", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$UniIrrepDominFlat", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$UniIrrepDominRange", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$UniHWs", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$HWsMult", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$Delta", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$DeltaCoprime", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "start", " ", "saving", " ", "the", " ", "data", " ", "for",
         " ", "our", " ", "terminal", " ", "node", " ", "regarding", " ", 
        "the", " ", "representation", " ", 
        RowBox[{"\[Beta]", "."}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"UserAlgebra", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"-", "noU1s"}], "-", "1"}]}], "}"}]}], "]"}], "//", 
       "Sort"}]}], ";", " ", 
     RowBox[{"(*", 
      StyleBox["Algebra",
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], " ", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Flatten", "/@", 
        RowBox[{"Take", "[", 
         RowBox[{"UserHW", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"-", "noU1s"}], "-", "1"}]}], "}"}]}], "]"}]}], "//", 
       "Sort"}]}], ";", " ", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"hw", " ", "of", " ", "representation"}], ",", " ", 
        RowBox[{"without", " ", "u", 
         RowBox[{"(", "1", ")"}], " ", "charges"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$WS", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Join", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flocci$WeightSystemSorted", "[", 
            RowBox[{
             RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", "#"}], 
            "]"}], "&"}], ",", 
          RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}]}], "]"}]}], "//", 
       "Sort"}]}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "The", " ", "sorted", " ", "weight", " ", "system", " ", "of", " ", 
        "the", " ", "representation"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$UniIrrepDomin", "[", "1", "]"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flocci$ExtractDominantWeights", "[", 
          RowBox[{"Flocci$WeightSystemSorted", "[", 
           RowBox[{
            RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", "#"}], 
           "]"}], "]"}], "&"}], ",", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "The", " ", "dominant", " ", "weights", " ", "of", " ", "unique", " ", 
        "irreps", " ", "appearing", " ", "in", " ", "\[Beta]"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flocci$SSNode$UniIrrepDominFlat", "[", "1", "]"}], ",", 
        RowBox[{"Flocci$SSNode$UniIrrepDominRange", "[", "1", "]"}]}], "}"}], 
      "=", 
      RowBox[{"Flocci$RaggedToFlat", "[", 
       RowBox[{"Flocci$SSNode$UniIrrepDomin", "[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "\[Beta]uniWSFlat", " ", "contains", " ", "a", " ", "list", " ", "of",
          " ", "weights", " ", "and", " ", "\[Beta]uniWSFlatRange"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", " ", "nx2", " ", "matrix"}], ")"}], " ", "contains", 
         " ", "how", " ", "they", " ", "should", " ", "be", " ", 
         "partitioned"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"Flocci$SSNode$UniHWs", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Tally", "[", 
        RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"child", " ", "hws", " ", 
       RowBox[{"(", "flattened", ")"}], " ", 
       RowBox[{"eg", ".", " ", "list"}], " ", "of", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$HWsMult", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Tally", "[", 
        RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"list", " ", "of", " ", "their", " ", "multiplicities"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Creating", " ", 
        RowBox[{"\[Delta]", "'"}], "s"}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$Delta", "[", "1", "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flocci$MetricTensor", "[", "a", "]"}], ".", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Flocci$Rank", "[", "a", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}]}], "}"}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$DeltaCoprime", "[", "1", "]"}], "=", 
      RowBox[{
       RowBox[{"Flocci$SSNode$Delta", "[", "Flocci$SSNode$MaxId", "]"}], "/", 
       
       RowBox[{"GCD", "@@", 
        RowBox[{"Flocci$SSNode$Delta", "[", "1", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"A1", " ", 
        RowBox[{"dim", ":", " ", 
         RowBox[{
         "We", " ", "count", " ", "the", " ", "number", " ", "of", " ", 
          "dimensions", " ", "in", " ", 
          RowBox[{"A1", "'"}], "s", " ", 
          RowBox[{"only", "."}]}]}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$User$A1Dim", "=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "A1only", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"A1only", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{"Pick", "[", 
                 RowBox[{
                  RowBox[{"TakeList", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"Flocci$Rank", "[", 
                    RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], "]"}]}],
                    "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"#", "===", "SU2"}], ")"}]}], "&"}], "/@", 
                   RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}]}]}], 
                 "]"}], ",", "2"}], "]"}], "\[Equal]", "0"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Flocci$Dim", "[", 
          RowBox[{
           RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", "A1only"}], 
          "]"}]}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "The", " ", "dimension", " ", "of", " ", "all", " ", "reps", " ", 
         "that", " ", "are", " ", "trivial", " ", "under", " ", "all", " ", 
         "non"}], "-", 
        RowBox[{"su", 
         RowBox[{"(", "2", ")"}], " ", "factors"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"The", " ", "embedding", " ", 
         RowBox[{"\[Alpha]", ":", " ", 
          RowBox[{
          "We", " ", "want", " ", "to", " ", "save", " ", "data", " ", 
           "regarding", " ", "the", " ", "projection", " ", "matrix", " ", 
           "\[CapitalLambda]\[Alpha]"}]}]}], ",", " ", 
        RowBox[{
        "which", " ", "in", " ", "this", " ", "case", " ", "is", " ", "the", 
         " ", 
         RowBox[{"identity", "."}]}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"rank", "=", 
      RowBox[{
       RowBox[{"Flocci$Rank", "[", 
        RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], "]"}], "//", 
       "Total"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flocci$SSNode$\[CapitalLambda]\[Alpha]", "[", "1", "]"}], "=", 
      
      RowBox[{"IdentityMatrix", "[", "rank", "]"}]}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "\[CapitalLambda]\[Alpha]", " ", "is", " ", "the", " ", "identity", 
        " ", "matrix"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Flocci$SSNode$AutPres\[CapitalLambda]\[Alpha]", "[", "1", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"IdentityMatrix", "[", "rank", "]"}], "}"}]}], ";", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "The", " ", "only", " ", "automorphism", " ", "which", " ", 
         "preserves", " ", "the", " ", "identity"}], ",", " ", 
        RowBox[{"is", " ", "the", " ", "identity"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"U", 
        RowBox[{"(", "1", ")"}], " ", 
        RowBox[{"charges", ":", " ", 
         RowBox[{
         "We", " ", "construct", " ", "global", " ", "varibles", " ", 
          "relating", " ", "to", " ", "the", " ", "U", 
          RowBox[{"(", "1", ")"}], " ", 
          RowBox[{"charges", "."}]}]}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"U1ws", "=", 
      RowBox[{"Flocci$SSNode$WS", "[", "1", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"Flocci$User$U1sPresentBool", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"U1ws", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Flocci$WeightSystemSorted", "[", 
            RowBox[{
             RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Take", "[", 
               RowBox[{"hw", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"-", "1"}], "-", "noU1s"}]}], "}"}]}], "]"}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"hw", ",", "UserHW"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"U1ws", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{
                   RowBox[{
                   "UserHW", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "noU1s"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{
             "U1ws", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "U1ws", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"U1ws", "=", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"U1ws", ",", "1"}], "]"}], "//", "Sort"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"The", " ", "weight", " ", "system", " ", "with", " ", "U", 
          RowBox[{"(", "1", ")"}], " ", "factors"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"chargesUser", "=", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "U1ws", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "noU1s"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", "Transpose"}]}], 
        ";", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"A", " ", "2"}], "-", 
           RowBox[{"tensor", " ", "of", " ", 
            RowBox[{"charges", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flocci$SSNode$AnomFreeCharges", "[", "1", "]"}], "=", 
         RowBox[{"{", "chargesUser", "}"}]}], ";", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"A", " ", "3"}], "-", 
           RowBox[{"tensor", " ", "of", " ", 
            RowBox[{"charges", "."}]}]}],
          FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Flocci$User$RootList", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"#", ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "noU1s"}], "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"Flocci$Roots", "[", 
            RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], "]"}]}], 
          "]"}]}], ";", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
          "A", " ", "list", " ", "of", " ", "roots", " ", "for", " ", "our", 
           " ", 
           RowBox[{"algebra", ".", " ", "This"}], " ", "is", " ", "used", " ",
            "in", " ", "the", " ", "elementary", " ", "check", " ", "of", " ",
            "U", 
           RowBox[{
            RowBox[{"(", "1", ")"}], "'"}], 
           RowBox[{"s", "."}]}],
          FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["(*",
          FontColor->RGBColor[0.5, 0, 0.5]], 
         StyleBox[
          RowBox[{
           RowBox[{
           "We", " ", "create", " ", "a", " ", "weight", " ", "list"}], ",", 
           " ", 
           RowBox[{
           "with", " ", "the", " ", "highest", " ", "weight", " ", "at", " ", 
            "the", " ", "front"}], ",", " ", 
           RowBox[{
           "and", " ", "sorted", " ", "by", " ", "their", " ", "lengths"}]}],
          FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"weightList", "=", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"Flocci$WeightSystemSorted", "[", 
                   RowBox[{
                    RowBox[{"Flocci$SSNode$Algebra", "[", "1", "]"}], ",", 
                    "#"}], "]"}], ",", "#"}], "]"}], ",", "#"}], "]"}], "&"}],
              ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flocci$SSNode$HWs", "[", "1", "]"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Length", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"weightList", "=", 
         RowBox[{"Riffle", "[", 
          RowBox[{"weightList", ",", "\"\<new\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"weightListFlat", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"weightList", ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Flocci$User$IrrepWeightLocation", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "\"\<new\>\""}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"Flocci$SSNode$WS", "[", "1", "]"}], ",", "#"}], 
                "]"}], "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", "1"}], 
               "\[RightDoubleBracket]"}]}], "]"}], "&"}], ",", 
           "weightListFlat"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "generate", " ", "the", " ", "maximal", " ", "list", " ", 
        "of", " ", 
        RowBox[{"algebras", "."}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$User$MaxAlgList", " ", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"Flocci$ProjectionMatrixList", "===", "False"}], ")"}]}], 
        ",", "Flocci$ProjectionMatrixList", ",", 
        RowBox[{"Flocci$GenerateMaxEmbeddingList", "[", "U1ws", "]"}]}], 
       "]"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "Generate", " ", "list", " ", "of", " ", "maximal", " ", "embeddings",
          " ", "up", " ", "to", " ", "lowest", " ", "dimensional", " ", 
         "irrep", " ", "of", " ", "parent", " ", "algebra"}], " ", "<=", " ", 
        
        RowBox[{"Length", "[", 
         RowBox[{"Flocci$SSNode$WS", "[", "Flocci$SSNode$MaxId", "]"}], 
         "]"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"...", "..."}], "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "configure", " ", "the", " ", "Timing", " ", "functions"}],
         ",", " ", 
        RowBox[{"and", " ", "reset", " ", "Flocci$SSNode$currentSSid"}]}],
       FontColor->RGBColor[1, 0, 1]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$SSNode$currentSSid", "=", "1"}], ";", 
     "\[IndentingNewLine]", "Flocci$TimingReset", ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.873866902427088*^9, 3.873866922398793*^9}, {
   3.873867944706669*^9, 3.873868097332913*^9}, {3.873868157083167*^9, 
   3.873868352213913*^9}, {3.8738683881436377`*^9, 3.873868435152444*^9}, {
   3.8738684787415752`*^9, 3.873868479054739*^9}, {3.873868510673938*^9, 
   3.873868644847118*^9}, {3.873868691510466*^9, 3.873868720326603*^9}, {
   3.873868780736869*^9, 3.873868856180814*^9}, {3.87386891817318*^9, 
   3.8738689847861557`*^9}, {3.873869026794836*^9, 3.873869092864184*^9}, {
   3.873869189878521*^9, 3.873869365992244*^9}, {3.873869420533825*^9, 
   3.873869798193239*^9}, {3.8738698398218603`*^9, 3.873869898438923*^9}, {
   3.8738699383249083`*^9, 3.873869976024186*^9}, {3.873870072683743*^9, 
   3.873870243237122*^9}, 3.87387029197828*^9, {3.873870371903349*^9, 
   3.8738703750447617`*^9}, {3.873870426592348*^9, 3.873870474325406*^9}, {
   3.873870757781581*^9, 3.8738707610820847`*^9}, {3.873871123040721*^9, 
   3.873871127900366*^9}, {3.873957202789814*^9, 3.8739572068136787`*^9}, 
   3.873958816103229*^9, {3.873972769518795*^9, 3.873972782855846*^9}, {
   3.874661791507114*^9, 3.874661797679446*^9}, {3.874994191445516*^9, 
   3.87499423044571*^9}, {3.8749943268182497`*^9, 3.874994340553434*^9}, 
   3.874994377389048*^9, {3.8750180552641993`*^9, 3.87501810166928*^9}, {
   3.875249717296033*^9, 3.875249720436968*^9}, 3.875597273379484*^9, {
   3.8756105098102713`*^9, 3.875610583690948*^9}, 3.875682003337865*^9, 
   3.875770415467505*^9, {3.875770786987762*^9, 3.87577078733729*^9}, {
   3.875770851411549*^9, 3.8757708779899693`*^9}, {3.8757709151965103`*^9, 
   3.875770959082226*^9}, {3.8757710285932293`*^9, 3.875771063598753*^9}, {
   3.875771175636735*^9, 3.875771204689836*^9}, 3.876230639248271*^9, {
   3.876582431569035*^9, 3.87658243657631*^9}, {3.876582468951659*^9, 
   3.876582475583209*^9}, {3.876828850832679*^9, 3.876828869755309*^9}, {
   3.8768289145889807`*^9, 3.87682892622985*^9}, 3.8769141430809813`*^9, {
   3.876922833093163*^9, 3.876922836745616*^9}, {3.87707347714876*^9, 
   3.877073552044715*^9}, {3.87707398792447*^9, 3.877074053266713*^9}, {
   3.877074448328915*^9, 3.877074448389456*^9}, {3.877074513207204*^9, 
   3.8770745132410307`*^9}, {3.877074603834556*^9, 3.8770746232332277`*^9}, {
   3.8770748752859783`*^9, 3.877074888786168*^9}, {3.8770751791246443`*^9, 
   3.8770751937650347`*^9}, {3.877075269798581*^9, 3.877075272195189*^9}, {
   3.877075452981532*^9, 3.877075455003051*^9}, {3.877075540925511*^9, 
   3.877075543051597*^9}, {3.877075663931333*^9, 3.877075704319715*^9}, {
   3.8770757685211363`*^9, 3.877075770438346*^9}, {3.8770758956069117`*^9, 
   3.877075897544787*^9}, {3.8770759968689938`*^9, 3.877076001827833*^9}, {
   3.877076103588801*^9, 3.8770761053702393`*^9}, {3.877077536896731*^9, 
   3.877077555136211*^9}, {3.877077623041803*^9, 3.877077623047559*^9}, 
   3.877077711007559*^9, {3.8770777487299*^9, 3.877077766170683*^9}, 
   3.87707780403384*^9, 3.877077879917109*^9, 3.8770780496004744`*^9, {
   3.8770781568309317`*^9, 3.877078175965104*^9}, {3.8771556257873173`*^9, 
   3.877155626247908*^9}, 3.8774152571361227`*^9, {3.877768767288597*^9, 
   3.8777687821373873`*^9}, {3.8780570999662237`*^9, 3.878057117643684*^9}, {
   3.879325276392713*^9, 3.879325366154148*^9}, {3.879837850362515*^9, 
   3.879837883820271*^9}, {3.8798384247817507`*^9, 3.879838448691525*^9}, {
   3.8798385531840343`*^9, 3.879838582183113*^9}, {3.879838624284824*^9, 
   3.879838647871318*^9}, {3.87983872025917*^9, 3.879838724903968*^9}, {
   3.8798446783810043`*^9, 3.879844696879051*^9}, {3.890804540306376*^9, 
   3.89080454187615*^9}, {3.890804586043219*^9, 3.890804693743945*^9}, {
   3.890804794852735*^9, 3.890804795182467*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"e742354a-465c-48c0-8344-1e35907ea730"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$ClearSavedData\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Meta\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
      "\"\<Clears data stored during the running of the code. This uses \
function::clear to determine what to do with a specific function.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$ClearSavedData", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "clearTypes", ",", "unDefine", ",", "downEmpty", ",", "downBut1", ",", 
      "downBut2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "extract", " ", "the", " ", "clear", " ", "types", " ", "of",
        " ", "the", " ", 
       RowBox[{"functions", "."}]}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"clearTypes", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"#", ",", "InputForm", ",", 
           RowBox[{"Function", "[", 
            RowBox[{"x", ",", 
             RowBox[{"MessageName", "[", 
              RowBox[{"x", ",", "\"\<clear\>\""}], "]"}], ",", "HoldFirst"}], 
            "]"}]}], "]"}], "&"}], ",", "Flocci$FunctionList"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "get", " ", "those", " ", "functions", " ", "which", " ", 
         "we", " ", "simply", " ", "want", " ", "to", " ", 
         RowBox[{"undefine", ".", " ", "Clear"}]}], "=", "1"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"unDefine", "=", 
      RowBox[{"Flocci$FunctionList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"clearTypes", ",", "\"\<1\>\""}], "]"}], "//", "Flatten"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Clear", "[", "#", "]"}], " ", "&"}], "/@", " ", "unDefine"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "get", " ", "those", " ", "functions", " ", "we", " ", 
         "want", " ", "to", " ", "set", " ", "the", " ", "DownValues", " ", 
         "equal", " ", "to", " ", 
         RowBox[{
          RowBox[{"{", "}"}], ".", " ", "Clear"}]}], "=", "2"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"downEmpty", "=", 
      RowBox[{"Flocci$FunctionList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"clearTypes", ",", "\"\<2\>\""}], "]"}], "//", "Flatten"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", ",", "InputForm", ",", 
          RowBox[{"Function", "[", 
           RowBox[{"x", ",", 
            RowBox[{
             RowBox[{"DownValues", "[", "x", "]"}], "=", 
             RowBox[{"{", "}"}]}], ",", "HoldFirst"}], "]"}]}], "]"}], "&"}], 
       ",", "downEmpty"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "get", " ", "those", " ", "functions", " ", "we", " ", 
         "want", " ", "to", " ", "set", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"DownValues", "[", "#", "]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DownValues", "[", "#", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "}"}]}], ")"}], 
          ".", " ", "Clear"}]}], "=", "3"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"downBut1", "=", 
      RowBox[{"Flocci$FunctionList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"clearTypes", ",", "\"\<3\>\""}], "]"}], "//", "Flatten"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", ",", "InputForm", ",", 
          RowBox[{"Function", "[", 
           RowBox[{"x", ",", 
            RowBox[{
             RowBox[{"DownValues", "[", "x", "]"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DownValues", "[", "x", "]"}], "\[LeftDoubleBracket]", 
               
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "}"}]}], ",", 
            "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", "downBut1"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "get", " ", "those", " ", "functions", " ", "we", " ", 
        "want", " ", "to", " ", "set", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DownValues", "[", "#", "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"DownValues", "[", "#", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ".", " ", "Clear"}], 
           "=", "4"}]}]}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"downBut2", "=", 
      RowBox[{"Flocci$FunctionList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"clearTypes", ",", "\"\<4\>\""}], "]"}], "//", "Flatten"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", ",", "InputForm", ",", 
          RowBox[{"Function", "[", 
           RowBox[{"x", ",", 
            RowBox[{
             RowBox[{"DownValues", "[", "x", "]"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"DownValues", "[", "x", "]"}], "\[LeftDoubleBracket]", 
                RowBox[{"-", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"DownValues", "[", "x", "]"}], "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",",
             "HoldFirst"}], "]"}]}], "]"}], "&"}], ",", "downBut2"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "clear", " ", "association", " ", "data"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flocci$VertexAssoc", "=", 
      RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flocci$EdgeAssoc", "=", 
      RowBox[{"Association", "[", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868356867445529*^9, 3.8683568850315*^9}, {
   3.868942468242366*^9, 3.868942468495618*^9}, {3.868942535172435*^9, 
   3.8689425674920597`*^9}, {3.868942661700767*^9, 3.868942676911018*^9}, {
   3.868942770800349*^9, 3.86894282755667*^9}, {3.868942858170918*^9, 
   3.8689428583483467`*^9}, {3.868942921445095*^9, 3.868943005771483*^9}, {
   3.868943061515168*^9, 3.868943062716291*^9}, {3.8689431059866953`*^9, 
   3.8689432553438063`*^9}, {3.8691494189355173`*^9, 3.869149424989064*^9}, {
   3.869149528014616*^9, 3.869149554418828*^9}, {3.869149713581492*^9, 
   3.8691497215708313`*^9}, {3.869201380482795*^9, 3.8692013808004847`*^9}, {
   3.869201414606737*^9, 3.8692014153656807`*^9}, {3.869201738436652*^9, 
   3.869201742007429*^9}, {3.869835309109943*^9, 3.869835310420229*^9}, {
   3.869900468190531*^9, 3.869900473432304*^9}, {3.87035683693953*^9, 
   3.870356837269307*^9}, {3.870357245814453*^9, 3.870357293724203*^9}, {
   3.870428489983243*^9, 3.870428490996416*^9}, {3.874583223580741*^9, 
   3.874583258067835*^9}, {3.8752497259605427`*^9, 3.875249728452632*^9}, {
   3.87560240077558*^9, 3.8756024197940607`*^9}, 3.875602514667012*^9, {
   3.875603153608803*^9, 3.8756031583851013`*^9}, 3.875608418568581*^9, {
   3.8756104953586473`*^9, 3.875610517686779*^9}, {3.875610588669382*^9, 
   3.875610590767248*^9}, 3.875687604614726*^9, 3.876922837713039*^9, 
   3.876925109924616*^9, 3.876925345213788*^9, {3.877015078833557*^9, 
   3.877015079942781*^9}, 3.877070005066698*^9, 3.877077555139883*^9, 
   3.877077623048808*^9, 3.877078167138486*^9, 3.877078260711*^9, {
   3.877418370739629*^9, 3.877418520745305*^9}, {3.8774185634390306`*^9, 
   3.87741856589438*^9}, 3.877418620110594*^9, {3.877418792162838*^9, 
   3.877418796662154*^9}, {3.8774188971278257`*^9, 3.877418966651155*^9}, {
   3.877419031406681*^9, 3.877419166713272*^9}, {3.877419388162854*^9, 
   3.877419423530813*^9}, {3.877420097509239*^9, 3.8774201095183764`*^9}, {
   3.877420143401863*^9, 3.877420164731975*^9}, {3.8774204428201036`*^9, 
   3.877420484554891*^9}, {3.877420592636647*^9, 3.877420601598722*^9}, {
   3.8774206545753117`*^9, 3.877420732724441*^9}, {3.877420770624332*^9, 
   3.877420809525629*^9}},
 CellLabel->
  "In[732]:=",ExpressionUUID->"a5e02793-8b78-4f31-ae04-ef940f7f2582"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.890730646300562*^9, 
  3.890804227047717*^9},ExpressionUUID->"bda747a0-5226-4d3f-afc7-\
3189d8ab7c68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$GenerateGraph\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Meta\>\"", ",", 
      "\"\<UserAlgebra) The User algebra.\\n fermionicReps) The inputed \
highest weights.\>\"", ",", "\"\<None\>\"", ",", 
      "\"\<Runs the code to generate the graph upwards and downwards.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$GenerateGraph", "[", 
    RowBox[{"UserAlgebra_", ",", "fermionicReps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "PrintTemporary", "[", "\"\<Making the semi-simple tree:\>\"", "]"}], 
      ";", "\[IndentingNewLine]", "Flocci$GenerateGraphUpwards", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "Flocci$IntermediateGraph", "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"Flocci$User$U1sPresentBool", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "PrintTemporary", "[", "\"\<Dealing with the u(1)'s:\>\"", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Flocci$GenerateGraphDownwards", "[", 
          RowBox[{"UserAlgebra", ",", "fermionicReps"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684400464442883`*^9, 3.8684401232941513`*^9}, {
   3.8684401713456593`*^9, 3.868440191054097*^9}, {3.8684405181065607`*^9, 
   3.868440553560729*^9}, {3.868440605862932*^9, 3.868440608434937*^9}, {
   3.868513088992777*^9, 3.868513110264604*^9}, {3.86851329348007*^9, 
   3.868513296032934*^9}, {3.868613438765121*^9, 3.868613443421987*^9}, {
   3.868613487230466*^9, 3.868613489522593*^9}, {3.869141567069702*^9, 
   3.869141569995013*^9}, {3.86914571389848*^9, 3.869145735075007*^9}, {
   3.869146516834087*^9, 3.869146521480442*^9}, {3.8692032171816883`*^9, 
   3.869203227564052*^9}, {3.869203261148553*^9, 3.8692032651164494`*^9}, {
   3.869299086490012*^9, 3.869299105635941*^9}, {3.870239334877256*^9, 
   3.870239337831328*^9}, {3.870239751139262*^9, 3.870239756057951*^9}, {
   3.870942196673256*^9, 3.870942215046685*^9}, {3.870942492451467*^9, 
   3.8709424956788197`*^9}, {3.873797516790923*^9, 3.873797519021493*^9}, {
   3.874591065068894*^9, 3.8745911082393913`*^9}, {3.874681306217717*^9, 
   3.874681314298457*^9}, {3.874994986812121*^9, 3.874994997553371*^9}, {
   3.875087559263237*^9, 3.875087566827771*^9}, {3.875249752141274*^9, 
   3.875249755198415*^9}, 3.875604212771051*^9, 3.8756043105641327`*^9, 
   3.875608986335965*^9, 3.875609037827002*^9, {3.87561037297666*^9, 
   3.875610387962657*^9}, {3.8756104281137*^9, 3.875610459119772*^9}, 
   3.876923862946938*^9, {3.876999649177988*^9, 3.876999652447969*^9}, 
   3.877077748738546*^9, {3.8771555674876957`*^9, 3.877155574974215*^9}, {
   3.877418033917431*^9, 3.877418039787347*^9}, {3.879325387433799*^9, 
   3.879325450656917*^9}},
 CellLabel->
  "In[734]:=",ExpressionUUID->"47c01928-da56-417f-b4e6-7d5483b12a7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display functions", "Section",
 CellChangeTimes->{{3.8771549701874037`*^9, 
  3.877154973607829*^9}},ExpressionUUID->"2e8058eb-2cb3-4356-85d6-\
d4e9bfb2e92f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$MaxMinOutputReorder\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Display\>\"", ",", "\"\<ouput) The output of SuperFlocci\>\"", ",", 
      "\"\<A list of: \\n algListRe)The algebra list reordered.\\n \
edgeListRe) The edge list adjusted for the reordring\\n The number of max \
algebras. \\n The number of min Algebras.\>\"", ",", 
      "\"\<Reorders the output of SuperFlocci, so that the max and min \
algebras come first.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MaxMinOutputReorder", "[", "output_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "algList", ",", "edgeList", ",", "vertices", ",", "edgesV", ",", 
      "graphRaw", ",", "maxList", ",", "minList", ",", "nonMaxMin", ",", 
      "reorder", ",", "ordInv", ",", "algListRe", ",", "edgeListRe"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "extract", " ", "the", " ", "data", " ", "from", " ", 
       "output"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"algList", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"edgeList", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "make", " ", "the", " ", "graph"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vertices", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "algList", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgesV", "=", 
      RowBox[{"edgeList", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graphRaw", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"vertices", ",", "edgesV"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxList", "=", 
      RowBox[{"GraphComputation`SourceVertexList", "[", "graphRaw", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"minList", "=", 
      RowBox[{"GraphComputation`SinkVertexList", "[", "graphRaw", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"minList", "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"minList", ",", "m"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "maxList"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "want", " ", "to", " ", "create", " ", "a", " ", 
         "reordering"}], ",", " ", 
        RowBox[{
        "where", " ", "the", " ", "maxList", " ", "and", " ", "the", " ", 
         "minList", " ", "come", " ", "first"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nonMaxMin", "=", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "algList", "]"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"maxList", ",", "minList"}], "]"}]}], "]"}], "//", 
       "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"reorder", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"maxList", ",", "minList", ",", "nonMaxMin"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ordInv", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "reorder", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ordInv", "\[LeftDoubleBracket]", 
         RowBox[{
         "reorder", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "\[RightDoubleBracket]"}], "=", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "reorder", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "reorder", " ", "the", " ", "algList"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"algListRe", "=", 
      RowBox[{
      "algList", "\[LeftDoubleBracket]", "reorder", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "modify", " ", "the", " ", "edge", " ", "list"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edgeListRe", "=", 
      RowBox[{"edgeList", " ", "/.", " ", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"Rule", "[", 
         RowBox[{
          RowBox[{
          "ordInv", "\[LeftDoubleBracket]", "x", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "ordInv", "\[LeftDoubleBracket]", "y", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "output", " ", "the", " ", "modified", " ", "algList"}], 
        ",", " ", 
        RowBox[{"and", " ", "edgeList"}], ",", " ", 
        RowBox[{
        "and", " ", "length", " ", "of", " ", "maximal", " ", "and", " ", 
         "minimal", " ", "lists"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"algListRe", ",", "edgeListRe", ",", 
       RowBox[{"Length", "[", "maxList", "]"}], ",", 
       RowBox[{"Length", "[", "minList", "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877071981620468*^9, 3.87707211677712*^9}, {
  3.877072217648159*^9, 3.877072244671363*^9}, {3.877072287054003*^9, 
  3.8770726061134663`*^9}, {3.87707263628905*^9, 3.877072690616356*^9}, {
  3.877073038449563*^9, 3.877073044679881*^9}, {3.877073215980444*^9, 
  3.877073240527658*^9}, {3.8771552354238358`*^9, 3.8771552364330883`*^9}, {
  3.879325469779895*^9, 3.87932557979207*^9}},
 CellLabel->
  "In[736]:=",ExpressionUUID->"4f69b097-caa6-42e2-bf19-8d666605b03f"],

Cell[CellGroupData[{

Cell["Mathematica -  Lie algebras & Weights", "Subsection",
 CellChangeTimes->{{3.874996270778059*^9, 3.874996284802044*^9}, {
  3.877155112394541*^9, 
  3.877155126825482*^9}},ExpressionUUID->"9e0f5799-b464-4ea5-934a-\
754512c5d86e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$PrintLie\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Display\>\"", ",", "\"\<g) A semi-simple lie algebra.\>\"", ",", 
      "\"\<A string\>\"", ",", 
      "\"\<Outputs g in a nice form for display in mathematica.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$PrintLie", "[", "s_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<su(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"Flocci$Rank", "[", "s", "]"}], "+", "1"}], "]"}], "<>", 
      "\"\<)\>\""}], ",", 
     RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<so(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "+", "1"}], "]"}], "<>", 
      "\"\<)\>\""}], ",", 
     RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<sp(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"2", "*", 
        RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}], "<>", "\"\<)\>\""}], 
     ",", 
     RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<so(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"2", "*", 
        RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}], "<>", "\"\<)\>\""}], 
     ",", 
     RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\"\<G2\>\"", ",", 
     RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\"\<F4\>\"", ",", 
     RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\"\<E6\>\"", ",", 
     RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\"\<E7\>\"", ",", 
     RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\"\<E8\>\"", ",", 
     RowBox[{"Flocci$TypeU1Q", "[", "s", "]"}], ",", "\"\<u(1)\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PrintLie", "[", "g_List", "]"}], ":=", 
  RowBox[{"StringRiffle", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Flocci$PrintLie", ",", "g"}], "]"}], ",", 
    "\"\<\[CirclePlus]\>\""}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8749962769438667`*^9, 3.874996472245327*^9}, {
   3.8749965409920673`*^9, 3.8749965979845877`*^9}, {3.874996638462553*^9, 
   3.874996690149671*^9}, {3.874996803122727*^9, 3.874996811178137*^9}, {
   3.875178560800185*^9, 3.875178570532062*^9}, {3.87533982058113*^9, 
   3.875339830407392*^9}, 3.87715524084403*^9, {3.879325605467331*^9, 
   3.879325663760741*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"dd36343b-2310-456c-aa8e-a3dfef982b4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$SetDescription", "[", 
    RowBox[{"\"\<Flocci$PrintWeights\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Display\>\"", ",", 
       "\"\<g) A semi-simple lie algebra.\\n hw) A list of weights\>\"", ",", 
       "\"\<A list of strings and quantities to display\>\"", ",", 
       "\"\<Gives the backbone of the structure needed to display hw in a \
nice form.\>\""}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$PrintWeights", "[", 
   RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "partitioned", ",", "dimArray", ",", "listWeights", ",", "dimArrayT", 
      ",", "irrepList", ",", "repList"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
       RowBox[{
       "We", " ", "partition", " ", "the", " ", "irreps", " ", "based", " ", 
        "on", " ", "the", " ", "rank", " ", "of", " ", "g"}], ",", " ", 
       RowBox[{"and", " ", "find", " ", "the", " ", "transpose"}]}],
      FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"partitioned", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TakeList", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], "&"}], ",", 
         "hw"}], "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "create", " ", "an", " ", "array", " ", "of", " ", 
         "dimensions", " ", "of", " ", "irreps"}], ",", " ", 
        RowBox[{
        "and", " ", "place", " ", "bars", " ", "on", " ", "them", " ", "if", 
         " ", "certain", " ", "conditions", " ", "are", " ", 
         RowBox[{"met", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dimArrayT", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flocci$TypeAQ", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Reverse", "[", "p", "]"}], ",", "p"}], "}"}], 
               "]"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flocci$TypeDQ", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"Take", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
            ")"}]}], ",", 
          RowBox[{"OverBar", "[", 
           RowBox[{"Flocci$Dim", "[", 
            RowBox[{
             RowBox[{
             "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
              "p"}], "]"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"Flocci$TypeU1Q", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}]}], ",", 
            RowBox[{"Flocci$Dim", "[", 
             RowBox[{
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", "p"}], "]"}], ",", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{
          "partitioned", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dimArray", "=", 
      RowBox[{"dimArrayT", "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Irreps", " ", "are", " ", "written", " ", "as", " ", 
        RowBox[{"(", 
         RowBox[{"...", ",", "...", ",", ".."}], ")"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"irrepList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"#", ",", "\"\<,\>\""}], "]"}], ",", "\"\<(\>\""}], 
            "]"}], ",", "\"\<)\>\""}], "]"}], "&"}], ",", "dimArray"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"Reps", " ", "are", " ", "written", " ", "as", " ", 
         RowBox[{"(", 
          RowBox[{"...", ",", "...", ",", ".."}], ")"}]}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"...", ",", "...", ",", ".."}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"...", ",", "...", ",", ".."}], ")"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"repList", "=", 
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{"irrepList", ",", "\"\<\[CirclePlus]\>\""}], "]"}], "//", 
       "Flatten"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "repList"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Flocci$PrintWeights", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A1", ",", "A2", ",", "U1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "1", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87648869518015*^9, 3.876488716180232*^9}, {
   3.876488777965633*^9, 3.876488841419311*^9}, {3.876488900400756*^9, 
   3.876488922513515*^9}, {3.8764889970215597`*^9, 3.8764894662155447`*^9}, 
   3.876913097430687*^9, 3.8769882838650618`*^9, 3.876988356307829*^9, {
   3.876988395923237*^9, 3.8769883992795067`*^9}, 3.877155241779999*^9, {
   3.87932566066142*^9, 3.87932573216777*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"996f1ae8-4e9f-4131-a4df-70d04224baa9"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"(\"\>", ",", "2", ",", "\<\",\"\>", ",", "3", 
    ",", "\<\",\"\>", ",", 
    RowBox[{"-", "3"}], ",", "\<\")\"\>", ",", "\<\"\[CirclePlus]\"\>", 
    ",", "\<\"(\"\>", ",", "3", ",", "\<\",\"\>", ",", 
    OverscriptBox["3", "_"], ",", "\<\",\"\>", ",", 
    RowBox[{"-", "2"}], ",", "\<\")\"\>"}], "}"}], TraditionalForm]], "Output",\

 CellChangeTimes->CompressedData["
1:eJwV0FtMkgEYBuC/plyYthAlU5bJSlpj01RCTRw/tmV0wzg0JTbXT5ShkZKb
zg6zw2wLZ62hYrlY3VQmWVIUEjatbGqamDWbGZENTH7Ruohgnb7v4ttz9b7b
+2VQx+S6VQRBlMGlCpt7X3yhSUGF9Qmaei3sRhk7mYkj4Jh0UIYWBQQ16KcG
RxdKlE/1oRrWtGgUvOE6rkT92dEsD9jlazlMg4WZc0Y0SPGIJfB9vEqNrpg4
1SFwMpXfuQLWh9nc7+D0JoMtAs6JbQlRUOxNmEmep0njVdssG+wpZVnMYPRR
q7gNdHMMWtQ88cGEhhh7jraDF2fHW9GY2+6+DtDHG59Hf7x0xltAane6ANVb
RynyK03u2Nxdg4oz1p1HiTWPzahUftaKShiuu6jW1H1QAnpih/wD4JVzMs4z
MCVNmDcIVvbbDWh7RVpkDGStnRC+Bq/HMcvb/DT59n59UX6AJrmTnphCsMm2
6EBvdoiebl+Av5QkOHPAqUu3pAWgJLegCiXyfF7026lQAOXv+7eMnu5vJApB
loKRiIobm9+JQBmT2lUMnri3rQ4V+u7YxWDlSN0GHeY6lRf0oDpA1leBf4fc
jmrQ8Yo35wXTRs9Ig6BCb1WicQ8C3rIgTWbW7o3VgPlbLOvRlCStCv286NSh
2fxDb9DLyapc+RJNshuWS/aDBvsBhQaMuFYrf4JUuOUj+rC0tkcTgr323uHI
b5ocXpDPoE3MI883/oHe4gEP6jupXkSTfmWx0kFia46RC/4H9t+PHg==
  "],
 CellLabel->
  "Out[743]=",ExpressionUUID->"ee230918-c499-4ee9-bda0-d9a762f2e2c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica -  full output", "Subsection",
 CellChangeTimes->{{3.87715499949547*^9, 
  3.8771550093956137`*^9}},ExpressionUUID->"b9c5fdbf-7b3a-431f-b6a7-\
50796f706403"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$MathematicaDisplay\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Display\>\"", ",", "\"\<output) The output of SuperFlocci.\>\"", 
      ",", "\"\<-\>\"", ",", "\"\<Prints the output in mathematica.\>\""}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$MathematicaDisplay", "[", "output_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inputg", ",", "delim", ",", "input\[CapitalPhi]", ",", "dateTime", ",", 
      "algList", ",", "edgeList", ",", "vertices", ",", "edgesV", ",", 
      "graph", ",", "graphRaw", ",", "reorder", ",", "ordInv", ",", 
      "printAlg", ",", "algListRe", ",", "edgeListRe", ",", "noMax", ",", 
      "noMin"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
      "We", " ", "extract", " ", "the", " ", "data", " ", "from", " ", 
       "output"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"inputg", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"input\[CapitalPhi]", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"algList", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"edgeList", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"dateTime", "=", 
      RowBox[{
      "output", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "make", " ", "the", " ", "graph"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vertices", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "algList", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"algListRe", ",", "edgeListRe", ",", "noMax", ",", "noMin"}], 
       "}"}], "=", 
      RowBox[{"Flocci$MaxMinOutputReorder", "[", "output", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "create", " ", "a", " ", "delimiter"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "delim", "=", 
      "\"\<_______________________________________________________________\>\"\
"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"We", " ", "start", " ", "printing", " ", "outputs"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<SuperFlocci Output\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Program by: Andrew Gomes, Maximillian Ruhdorfer, and Joseph \
Tooby-Smith. 2022\>\"", ",", "Italic"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Input algebra: \>\"", ",", 
       RowBox[{"Flocci$PrintLie", "[", "inputg", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "@@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Input representation: \>\"", "}"}], ",", 
        RowBox[{"Flocci$PrintWeights", "[", 
         RowBox[{"inputg", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", "input\[CapitalPhi]"}], "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Date of generation: \>\"", "<>", "dateTime"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Total number of extensions: \>\"", ",", 
       RowBox[{"Length", "[", "algList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Of which are maximal: \>\"", ",", "noMax"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Of which are minimal: \>\"", ",", "noMin"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Visual display of data: \>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "edgeListRe", "]"}], "\[LessEqual]", " ", 
        "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"graph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"vertices", ",", 
           RowBox[{"edgeListRe", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
           RowBox[{"VertexShapeFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"DisplayForm", "[", "#2", "]"}], ",", "Black", 
                    ",", "8"}], "]"}], ",", 
                  RowBox[{"Background", "\[Rule]", 
                   RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "1", "\[LessEqual]", " ", "#2", "\[LessEqual]", " ", 
                    "noMax"}], ",", "LightRed", ",", 
                    RowBox[{
                    RowBox[{"noMax", "+", "1"}], "\[LessEqual]", " ", "#2", 
                    "\[LessEqual]", " ", 
                    RowBox[{"noMax", "+", "noMin"}]}], ",", "LightGreen", ",",
                     "True", ",", "LightGray"}], "]"}]}], ",", 
                  RowBox[{"FrameStyle", "\[Rule]", "Gray"}], ",", 
                  RowBox[{"FrameMargins", "\[Rule]", "3"}]}], "]"}], ",", 
                "#1"}], "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
           RowBox[{
           "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "graph", "]"}]}], ",", 
       "\"\<Graph too big for printing\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Maximal algebras: \>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"printAlg", "[", "i_", "]"}], ":=", 
      RowBox[{"Print", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<) \>\""}], ",", 
           RowBox[{"Flocci$PrintLie", "[", 
            RowBox[{"algListRe", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           "\"\< \>\""}], "}"}], ",", 
         RowBox[{"Flocci$PrintWeights", "[", 
          RowBox[{
           RowBox[{"algListRe", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"algListRe", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"printAlg", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "noMax"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Minimal algebras: \>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"printAlg", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"noMax", "+", "1"}], ",", 
         RowBox[{"noMax", "+", "noMin"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "delim", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877072722626891*^9, 3.877072930758144*^9}, {
   3.8770731435816793`*^9, 3.877073143988497*^9}, 3.877155246084077*^9, {
   3.879326615182514*^9, 3.87932670257008*^9}, {3.879948097680019*^9, 
   3.8799481006749077`*^9}, {3.879948200908247*^9, 3.879948201997504*^9}, {
   3.879948282588847*^9, 3.879948287807022*^9}, {3.879948346595003*^9, 
   3.87994834687228*^9}},
 CellLabel->
  "In[744]:=",ExpressionUUID->"eef19612-a127-4c68-bf8e-79f222d9d5cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"L", 
     StyleBox[
      AdjustmentBox["A",
       BoxBaselineShift->-0.4,
       BoxMargins->{{-0.5, -0.3}, {0, 0}}],
      FontSize->Smaller], "T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]],ExpressionUUID->
  "4b6ebe17-c530-4450-aca2-ce91acfb9dd1"],
 " - Lie algebras & Weights"
}], "Subsection",
 CellChangeTimes->{{3.8770196252312317`*^9, 3.8770196527720547`*^9}, {
  3.8771551651730003`*^9, 
  3.8771551777528048`*^9}},ExpressionUUID->"5c3cb178-33bf-4818-9e5c-\
3bae257e9326"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$LieAlgebraLatex\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LieAlgebraLatex", "::", "tag"}], "=", "\"\<Display\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LieAlgebraLatex", "::", "input"}], "=", 
   "\"\<simple Lie algebra s or semi-simple Lie algebra {s1,s2,...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LieAlgebraLatex", "::", "output"}], "=", 
   "\"\<Lie algebra formatted in Latex.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LieAlgebraLatex", "::", "description"}], "=", 
   "\"\<Formats Lie algebra in Latex\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$LieAlgebraLatex", "[", "s_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"Flocci$TypeAQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<\\\\mathfrak{su}(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"Flocci$Rank", "[", "s", "]"}], "+", "1"}], "]"}], "<>", 
      "\"\<)\>\""}], ",", 
     RowBox[{"Flocci$TypeBQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<\\\\mathfrak{so}(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "+", "1"}], "]"}], "<>", 
      "\"\<)\>\""}], ",", 
     RowBox[{"Flocci$TypeCQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<\\\\mathfrak{sp}(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"2", "*", 
        RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}], "<>", "\"\<)\>\""}], 
     ",", 
     RowBox[{"Flocci$TypeDQ", "[", "s", "]"}], ",", 
     RowBox[{"\"\<\\\\mathfrak{so}(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"2", "*", 
        RowBox[{"Flocci$Rank", "[", "s", "]"}]}], "]"}], "<>", "\"\<)\>\""}], 
     ",", 
     RowBox[{"Flocci$TypeG2Q", "[", "s", "]"}], ",", "\"\<G_2\>\"", ",", 
     RowBox[{"Flocci$TypeF4Q", "[", "s", "]"}], ",", "\"\<F_4\>\"", ",", 
     RowBox[{"Flocci$TypeE6Q", "[", "s", "]"}], ",", "\"\<E_6\>\"", ",", 
     RowBox[{"Flocci$TypeE7Q", "[", "s", "]"}], ",", "\"\<E_7\>\"", ",", 
     RowBox[{"Flocci$TypeE8Q", "[", "s", "]"}], ",", "\"\<E_8\>\"", ",", 
     RowBox[{"Flocci$TypeU1Q", "[", "s", "]"}], ",", 
     "\"\<\\\\mathfrak{u}(1)\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$LieAlgebraLatex", "[", "g_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", 
    RowBox[{"StringRiffle", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", 
          RowBox[{"Flocci$LieAlgebraLatex", "[", 
           RowBox[{"s", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Flocci$LieAlgebraLatex", "[", 
            RowBox[{"s", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
           "\"\<^{\\\\oplus \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"s", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<}\>\""}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", 
          RowBox[{"Tally", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
      "\"\< \\\\oplus \>\""}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8770196673090267`*^9, 3.877019865357257*^9}, {
   3.877020062627071*^9, 3.8770201148280973`*^9}, {3.877020194443018*^9, 
   3.8770202166104813`*^9}, {3.877020261639298*^9, 3.877020422481862*^9}, {
   3.877020550377043*^9, 3.877020561677679*^9}, {3.877022752591503*^9, 
   3.877022772336882*^9}, {3.877097538479641*^9, 3.877097541530417*^9}, 
   3.877155262898698*^9},
 CellLabel->
  "In[746]:=",ExpressionUUID->"1b871996-a5c2-4736-bb62-ead3db791754"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$IrrepLatex\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepLatex", "::", "tag"}], "=", "\"\<Display\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepLatex", "::", "input"}], "=", 
   "\"\<g: Lie algebra in the form {s1,s2,...} \\nhw: highest weights in the \
format {hw1,hw2,...}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepLatex", "::", "output"}], "=", 
   "\"\<Irreps formatted in Latex in the form (dim1,dim2,...)\[ImplicitPlus].\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$IrrepLatex", "::", "description"}], "=", 
   "\"\<Formats irreps in Latex in terms of their dimension.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flocci$IrrepLatex", "[", 
   RowBox[{"g_", ",", "hw_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "partitioned", ",", "dimArray", ",", "listWeights", ",", "dimArrayT", 
      ",", "irrepList", ",", "repList", ",", "irrepListMult", ",", "irrep"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{
       RowBox[{
       "We", " ", "partition", " ", "the", " ", "irreps", " ", "based", " ", 
        "on", " ", "the", " ", "rank", " ", "of", " ", "g"}], ",", " ", 
       RowBox[{"and", " ", "find", " ", "the", " ", "transpose"}]}],
      FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"partitioned", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TakeList", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Flocci$Rank", "[", "g", "]"}]}], "]"}], "&"}], ",", 
         "hw"}], "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "We", " ", "create", " ", "an", " ", "array", " ", "of", " ", 
         "dimensions", " ", "of", " ", "irreps"}], ",", " ", 
        RowBox[{
        "and", " ", "place", " ", "bars", " ", "on", " ", "them", " ", "if", 
         " ", "certain", " ", "conditions", " ", "are", " ", 
         RowBox[{"met", "."}]}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dimArrayT", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flocci$TypeAQ", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Reverse", "[", "p", "]"}], ",", "p"}], "}"}], 
               "]"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flocci$TypeDQ", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"Take", "[", 
                  RowBox[{"p", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
            ")"}]}], ",", 
          RowBox[{"\"\<\\\\mathbf{\\\\overline{\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Flocci$Dim", "[", 
             RowBox[{
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", "p"}], "]"}], "]"}], "<>", "\"\<}}\>\""}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"Flocci$TypeU1Q", "[", 
              RowBox[{
              "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<\\\\mathbf{\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Flocci$Dim", "[", 
               RowBox[{
                RowBox[{
                "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                ",", "p"}], "]"}], "]"}], "<>", "\"\<}\>\""}], ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{
          "partitioned", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dimArray", "=", 
      RowBox[{"dimArrayT", "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"Irreps", " ", "are", " ", "written", " ", "as", " ", 
         RowBox[{"(", 
          RowBox[{"...", ",", "...", ",", ".."}], ")"}], " ", "if", " ", 
         RowBox[{"Length", "[", "g", "]"}]}], ">", "1"}],
       FontColor->RGBColor[1, 0.5, 0.5]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "g", "]"}], ">", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"irrepList", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<(\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{"#", ",", "\"\< , \>\""}], "]"}], "<>", "\"\<)\>\""}], 
            "&"}], ",", "dimArray"}], "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"irrepList", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringRiffle", "[", 
             RowBox[{"#", ",", "\"\< , \>\""}], "]"}], "&"}], ",", 
           "dimArray"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"irrepListMult", "=", 
      RowBox[{"Tally", "[", "irrepList", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"Reps", " ", "are", " ", "written", " ", "as", " ", 
         RowBox[{"(", 
          RowBox[{"...", ",", "...", ",", ".."}], ")"}]}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"...", ",", "...", ",", ".."}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"...", ",", "...", ",", ".."}], ")"}]}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"repList", "=", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"irrep", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", 
            RowBox[{"irrep", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"irrep", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<^{\\\\oplus \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"irrep", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<}\>\""}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"irrep", ",", "irrepListMult"}], "}"}]}], "]"}], ",", 
        "\"\<\\\\oplus \>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "repList", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.877020638595853*^9, 3.8770206550474052`*^9}, {
   3.877020687816635*^9, 3.877020877077791*^9}, {3.877021013190268*^9, 
   3.8770211836155357`*^9}, {3.8770212711894703`*^9, 3.877021275934567*^9}, {
   3.877021327113611*^9, 3.877021327942039*^9}, {3.877021375207574*^9, 
   3.8770213990441847`*^9}, {3.8770214504221582`*^9, 
   3.8770214748465767`*^9}, {3.87702151351567*^9, 3.877021527009807*^9}, {
   3.877021834207387*^9, 3.877021876709818*^9}, {3.877021988253824*^9, 
   3.877022070188982*^9}, {3.877022167426627*^9, 3.877022170303763*^9}, {
   3.8770222019951153`*^9, 3.877022220074128*^9}, {3.877022775421322*^9, 
   3.877022795323264*^9}, {3.877022857072362*^9, 3.877022902556511*^9}, {
   3.8770831855361443`*^9, 3.877083206234592*^9}, 3.877083875648176*^9, 
   3.877155264315627*^9},
 CellLabel->
  "In[753]:=",ExpressionUUID->"b4539733-2789-48c3-9e9d-688669a3d873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"L", 
     StyleBox[
      AdjustmentBox["A",
       BoxBaselineShift->-0.4,
       BoxMargins->{{-0.5, -0.3}, {0, 0}}],
      FontSize->Smaller], "T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]],ExpressionUUID->
  "5944dc29-8b1f-47d5-9130-83e470ecf1e5"],
 " - Table"
}], "Subsection",
 CellChangeTimes->{{3.877155188794383*^9, 
  3.877155201760193*^9}},ExpressionUUID->"e610f12c-0432-4f4c-bc78-\
eca767d39aa8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<Flocci$TableLatex\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TableLatex", "::", "tag"}], "=", "\"\<Display\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TableLatex", "::", "input"}], "=", 
   "\"\<heading: heading for the table as string. If it is a list it assumes \
it is a composite table. \\ntableData: Lie algebras and representations in \
output format {{{s1,s2,...},{hw1,hw2,...},projection matrix},...}. \
\\ncaption: String of Latex code for table caption. \\nlabel: String label \
for hyperlinks in the pdf file. \\noffset: Integer, offset for numbering of \
algebras. \\nlink: Boolean, if True it generates hyperlinks to details of \
embeddings.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TableLatex", "::", "output"}], "=", 
   "\"\<String of Latex code to generate Table.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TableLatex", "::", "description"}], "=", 
   "\"\<Generates Latex code for table of Lie Algebras and Irreps.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flocci$TableLatex", "[", 
     RowBox[{
     "heading_", ",", "tableData_", ",", "caption_", ",", "label_", ",", 
      "offset_", ",", 
      RowBox[{"link_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tableString", ",", "i", ",", "separator", ",", "counter"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"Initialize", " ", "Latex", " ", "Table"}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "separator", "=", 
        "\"\<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\>\""}\
], ";", "\[IndentingNewLine]", 
       RowBox[{"tableString", "=", 
        RowBox[{
        "\"\<\n\\\\renewcommand{\\\\arraystretch}{1.5} \n\\\\fontsize{8}{9.2}\
\\\\selectfont\n\\\\begin{xltabular}{\\\\linewidth}{| c | B{6cm} | V{12cm} |} \
\\\\hline\n\\\\multicolumn{3}{|c|}{\\\\small \>\"", "<>", "heading", "<>", 
         " ", "\"\< } \\\\\\\\ \\\\hline\n& {\\\\small Algebra}&\\\\small \
Fermion representations corresponding to $\\\\beta$ \\\\\\\\ \\\\hline \n\n \
\\\\endfirsthead\n  \n \\\\hline\n\\\\multicolumn{3}{|c|}{\\\\small \>\"", "<>",
          "heading", "<>", " ", 
         "\"\< continued} \\\\\\\\ \\\\hline\n& {\\\\small Algebra}&\\\\small \
Fermion representations corresponding to $\\\\beta$ \\\\\\\\ \\\\hline \n\n \
\\\\endhead\n  \n \\\\endfoot \\n\>\""}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"counter", "=", 
        RowBox[{"1", "+", "offset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{
         "Loop", " ", "through", " ", "algebras", " ", "and", " ", 
          "construct", " ", "table"}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tableString", "=", 
           RowBox[{"tableString", "<>", "separator", "<>", 
            RowBox[{"If", "[", 
             RowBox[{"link", ",", 
              RowBox[{"\"\<\\\\hyperlink{alg\>\"", "<>", 
               RowBox[{"ToString", "[", "counter", "]"}], "<>", "\"\<}{\>\"", 
               "<>", 
               RowBox[{"ToString", "[", "counter", "]"}], "<>", "\"\<}\>\""}],
               ",", 
              RowBox[{"ToString", "[", "counter", "]"}]}], "]"}], "<>", 
            "\"\< & $\>\"", "<>", 
            RowBox[{"Flocci$LieAlgebraLatex", "[", 
             RowBox[{"tableData", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<$ & $\>\"", "<>", 
            RowBox[{"Flocci$IrrepLatex", "[", 
             RowBox[{
              RowBox[{"tableData", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"tableData", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "<>", 
            "\"\<$ \\\\\\\\ \\\\hline \\n\>\""}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"counter", "=", 
           RowBox[{"counter", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "tableData", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        StyleBox[
         RowBox[{"Write", " ", "Latex", " ", "Table", " ", "Footer"}],
         FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tableString", "=", 
        RowBox[{
        "tableString", "<>", "separator", "<>", 
         "\"\<\n\\\\caption{\\\\label{\>\"", "<>", "label", "<>", 
         "\"\<} \>\"", "<>", "caption", "<>", 
         "\"\<}\n\\\\end{xltabular}\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "tableString", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$TableLatex", "[", 
    RowBox[{
    "heading_List", ",", "tableData_", ",", "caption_", ",", "label_", ",", 
     "offset_", ",", 
     RowBox[{"link_", ":", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tableString", ",", "i", ",", "separator", ",", "j", ",", "counter"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Initialize", " ", "Latex", " ", "Table"}],
       FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "separator", "=", 
       "\"\<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\>\""}]\
, ";", "\[IndentingNewLine]", 
      RowBox[{"tableString", "=", 
       RowBox[{
       "\"\<\n\\\\renewcommand{\\\\arraystretch}{1.5} \n\
\\\\fontsize{8}{9.2}\\\\selectfont\n\\\\begin{xltabular}{\\\\linewidth}{| c | \
B{6cm} | V{12cm} |} \\\\hline\n\\\\multicolumn{3}{|c|}{\\\\small \>\"", "<>", 
        
        RowBox[{"heading", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<>", " ", 
        "\"\< } \\\\\\\\ \\\\hline\n& {\\\\small Algebra}&\\\\small Fermion \
representations corresponding to $\\\\beta$ \\\\\\\\ \\\\hline \n\n \
\\\\endfirsthead\n  \n \\\\hline\n& {\\\\small Algebra}&\\\\small Fermion \
representations corresponding to $\\\\beta$ \\\\\\\\ \\\\hline \n\n \
\\\\endhead\n  \n \\\\endfoot \\n\>\""}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{
        "Loop", " ", "through", " ", "algebras", " ", "and", " ", "construct",
          " ", "table"}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"counter", "=", 
       RowBox[{"1", "+", "offset"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", ">", "1"}], ",", 
           RowBox[{"tableString", "=", 
            RowBox[{
            "tableString", "<>", "separator", "<>", "separator", "<>", 
             "\"\<\\\\multicolumn{3}{|c|}{\\\\small \>\"", "<>", 
             RowBox[{"heading", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "<>", " ", 
             "\"\< } \\\\\\\\ \\\\hline\>\"", "<>", "separator", "<>", 
             "separator"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tableString", "=", 
             RowBox[{"tableString", "<>", "separator", "<>", 
              RowBox[{"If", "[", 
               RowBox[{"link", ",", 
                RowBox[{"\"\<\\\\hyperlink{alg\>\"", "<>", 
                 RowBox[{"ToString", "[", "counter", "]"}], "<>", 
                 "\"\<}{\>\"", "<>", 
                 RowBox[{"ToString", "[", "counter", "]"}], "<>", 
                 "\"\<}\>\""}], ",", 
                RowBox[{"ToString", "[", "counter", "]"}]}], "]"}], "<>", 
              "\"\< & $\>\"", "<>", 
              RowBox[{"Flocci$LieAlgebraLatex", "[", 
               RowBox[{"tableData", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], "]"}], 
              "<>", "\"\<$ & $\>\"", "<>", 
              RowBox[{"Flocci$IrrepLatex", "[", 
               RowBox[{
                RowBox[{"tableData", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"tableData", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i", ",", "2"}], "]"}], "]"}]}], "]"}], 
              "<>", "\"\<$ \\\\\\\\ \\\\hline \\n\>\""}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"counter", "++"}], ";"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"tableData", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "tableData", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"Write", " ", "Latex", " ", "Table", " ", "Footer"}],
        FontColor->RGBColor[1, 0.5, 0.5]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tableString", "=", 
       RowBox[{
       "tableString", "<>", "separator", "<>", 
        "\"\<\n\\\\caption{\\\\label{\>\"", "<>", "label", "<>", "\"\<} \>\"",
         "<>", "caption", "<>", "\"\<}\n\\\\end{xltabular}\n\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tableString", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8770229418198757`*^9, 3.877022942538031*^9}, {
   3.877023115027273*^9, 3.877023287262033*^9}, {3.877023391056068*^9, 
   3.877023396039385*^9}, {3.8770234431086082`*^9, 3.877023526167178*^9}, {
   3.877023619606454*^9, 3.8770237451256247`*^9}, 3.8770816380962687`*^9, {
   3.877081689523604*^9, 3.877081730833425*^9}, {3.8770817837410097`*^9, 
   3.877081862862949*^9}, {3.877081898796138*^9, 3.877081940894781*^9}, {
   3.8770820838365517`*^9, 3.877082122840575*^9}, 3.877082201312046*^9, {
   3.8770822642992477`*^9, 3.877082464134321*^9}, {3.8770825426640778`*^9, 
   3.877082545227013*^9}, {3.877082739740312*^9, 3.877082748906467*^9}, {
   3.877083261033737*^9, 3.8770832614042263`*^9}, 3.877083717571917*^9, {
   3.877084057554001*^9, 3.8770840722798443`*^9}, {3.87708431168624*^9, 
   3.877084316307645*^9}, {3.877084591318935*^9, 3.8770846140444117`*^9}, {
   3.877084664241832*^9, 3.8770848251652927`*^9}, {3.87708486916597*^9, 
   3.8770848699189873`*^9}, {3.877084931673457*^9, 3.8770849325386353`*^9}, {
   3.877084998486669*^9, 3.877085007193474*^9}, {3.877095219403802*^9, 
   3.877095234713904*^9}, {3.877095352200335*^9, 3.877095365376338*^9}, {
   3.877095397898861*^9, 3.8770955978398*^9}, {3.877095748553707*^9, 
   3.87709580412834*^9}, 3.877155258212976*^9, {3.8793511047836227`*^9, 
   3.879351226615073*^9}, {3.879351260133897*^9, 3.879351285322201*^9}, {
   3.879351354364521*^9, 3.879351447108523*^9}, {3.879352164827281*^9, 
   3.879352237275846*^9}},
 CellLabel->
  "In[759]:=",ExpressionUUID->"c61a39c1-a57e-474e-8c51-b22b2e04310c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"L", 
     StyleBox[
      AdjustmentBox["A",
       BoxBaselineShift->-0.4,
       BoxMargins->{{-0.5, -0.3}, {0, 0}}],
      FontSize->Smaller], "T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]],ExpressionUUID->
  "3a3201f1-86e7-4909-b07c-a0d8c801e525"],
 " - Projections"
}], "Subsection",
 CellChangeTimes->{{3.877155188794383*^9, 3.877155201760193*^9}, {
  3.8774415392245693`*^9, 
  3.877441542513226*^9}},ExpressionUUID->"851bd514-9eb6-46db-80b1-\
fd7b15d8becb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Flocci$FunctionListAdd", "[", 
     RowBox[{"{", "\"\<Flocci$TableLatex\>\"", "}"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$TableLatex", "::", "tag"}], "=", "\"\<Display\>\""}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$TableLatex", "::", "input"}], "=", 
     "\"\<heading: heading for the table as string. If it is a list it \
assumes it is a composite table. \\ntableData: Lie algebras and \
representations in output format {{{s1,s2,...},{hw1,hw2,...},projection \
matrix},...}. \\ncaption: String of Latex code for table caption. \\nlabel: \
String label for hyperlinks in the pdf file.\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$TableLatex", "::", "output"}], "=", 
     "\"\<String of Latex code to generate Table.\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flocci$TableLatex", "::", "description"}], "=", 
     "\"\<Generates Latex code for table of Lie Algebras and Irreps.\>\""}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ListLatex22", "[", "out_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "outt", ",", "string", ",", "separator", ",", "inpAlg", ",", 
         "tensorproduct", ",", "nonmaxminembeddings"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "separator", "=", 
         "\"\<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\n\>\
\""}], ";", 
        RowBox[{"(*", 
         RowBox[{"tensorproduct", ",", " ", "nonmaxminembeddings"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"tensorproduct", "=", "\"\<Both\>\""}], ";", 
        RowBox[{"(*", 
         RowBox[{"Both", ",", " ", "Dim", ",", " ", "HW", ",", " ", "None"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"nonmaxminembeddings", "=", "True"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"outt", "=", 
         RowBox[{"Flocci$MaxMinOutputReorder", "[", "out", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"inpAlg", "=", 
         RowBox[{"out", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"string", "=", 
         RowBox[{"\"\<Input algebra: $\>\"", "<>", 
          RowBox[{"Flocci$LieAlgebraLatex", "[", "inpAlg", "]"}], "<>", 
          "\"\<$\\n\\n\>\"", "<>", "separator"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"string", "=", 
         RowBox[{"string", "\[IndentingNewLine]", "<>", 
          RowBox[{"Flocci$ListLatex", "[", 
           RowBox[{
           "outt", ",", "inpAlg", ",", "\"\<Maximal Algebras\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"outt", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "True", ",", 
            "tensorproduct"}], "]"}], "\[IndentingNewLine]", "<>", 
          RowBox[{"Flocci$ListLatex", "[", 
           RowBox[{
           "outt", ",", "inpAlg", ",", "\"\<Minimal Algebras\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"outt", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ",", 
              RowBox[{
               RowBox[{"outt", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"outt", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", "False", ",", 
            "tensorproduct"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"nonmaxminembeddings", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"string", "=", 
            RowBox[{"string", "<>", 
             RowBox[{"Flocci$ListLatex", "[", 
              RowBox[{
              "outt", ",", "inpAlg", ",", 
               "\"\<Neither Maximal nor Minimal Algebras\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"outt", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "+", 
                  RowBox[{"outt", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "+", "1"}], ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"outt", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
               "True", ",", "tensorproduct"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "string", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ListLatex", "[", 
      RowBox[{
      "outt_", ",", "inpAlg_", ",", "title_", ",", "range_", ",", "inclRhos_",
        ",", "tensorproduct_", ",", "label_", ",", "QRCode_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"string", ",", "separator", ",", "tens"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "separator", "=", 
         "\"\<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n%\\n\
\>\""}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"string", "=", 
         RowBox[{
         "\"\<\\\\subsection*{\>\"", "<>", "title", "<>", 
          "\"\<}\\n~\\\\\\\\\\n\>\""}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"string", "=", 
            RowBox[{
            "string", "<>", "separator", "<>", 
             "\"\<\\\\noindent\\\\rule{0.5\\\\textwidth}{0.5pt}~\\\\\\\\ \
\\n\\\\textbf{\\\\underline{Algebra \\\\hypertarget{alg\>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}], "<>", "\"\<}{\>\"", "<>", 
             RowBox[{"ToString", "[", "id", "]"}], "<>", "\"\<}:}} $\>\"", "<>", 
             RowBox[{"Flocci$LieAlgebraLatex", "[", 
              RowBox[{"outt", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "id", ",", "1"}], "]"}], "]"}], "]"}], 
             "<>", "\"\<$\\\\\\\\\\n~\\\\\\\\\\n\>\""}]}], 
           RowBox[{"(*", 
            RowBox[{"<>", "\"\<\\n\\n\\\\vspace{2mm}\\n\\n\>\""}], "*)"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"string", "=", 
               RowBox[{"string", "<>", "\"\<$\>\"", "<>", 
                RowBox[{"Flocci$IrrepLatex", "[", 
                 RowBox[{
                  RowBox[{"outt", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"{", "irrep", "}"}]}], "]"}], "<>", "\"\< = \>\"", "<>", 
                RowBox[{"Flocci$ParenthRep", "[", 
                 RowBox[{"irrep", "//", "ToString"}], "]"}], " ", "<>", 
                "\"\< \\\\rightarrow (\>\"", "<>", 
                RowBox[{"StringRiffle", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flocci$ExtractHighestWeights", "[", 
                    RowBox[{"inpAlg", ",", 
                    RowBox[{
                    RowBox[{"Flocci$WeightSystemFromFlat", "[", 
                    RowBox[{
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "1"}], "]"}], "]"}], ",", 
                    "irrep"}], "]"}], ".", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "3"}], "]"}], "]"}], 
                    "]"}]}]}], "]"}], "/.", "label"}], ",", "\"\<,\>\""}], 
                 "]"}], "<>", "\"\<)$\\\\\\\\\\n%\\n\>\""}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"irrep", ",", 
               RowBox[{"outt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "id", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"string", "=", 
            RowBox[{"string", "<>", "\"\<~\\\\\\\\\\n\>\""}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "All", " ", "tensor", " ", "products", " ", "of", " ", "irrep", 
             " ", "pairs"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tensorproduct", "!=", "\"\<None\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tens", "=", 
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Flocci$TensorProduct", "[", 
                    RowBox[{
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
                   RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "2"}], "]"}], "]"}], ",", 
                    "2"}], "]"}]}], ",", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"string", "=", 
               RowBox[{"string", 
                RowBox[{"(*", 
                 RowBox[{"<>", "\"\<\\\\vspace{2mm}\\n\\n\>\""}], "*)"}], 
                "<>", "\"\<Tensor products of irrep \
pairs:\\\\\\\\\\n\>\""}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"string", "=", 
                  RowBox[{"string", "<>", "\"\<$\>\"", "<>", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tensorproduct", "==", "\"\<Both\>\""}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{"tensorproduct", "==", "\"\<Dim\>\""}], ")"}]}], 
                    ",", 
                    RowBox[{"Flocci$IrrepLatex", "[", 
                    RowBox[{
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"{", "irrep", "}"}]}], "]"}], ",", "\"\<\>\""}], 
                    "]"}], "<>", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"tensorproduct", "==", "\"\<Both\>\""}], ",", 
                    "\"\< = \>\"", ",", "\"\<\>\""}], "]"}], "<>", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tensorproduct", "==", "\"\<Both\>\""}], ")"}], "||",
                     " ", 
                    RowBox[{"(", 
                    RowBox[{"tensorproduct", "==", "\"\<HW\>\""}], ")"}]}], 
                    ",", 
                    RowBox[{"Flocci$ParenthRep", "[", 
                    RowBox[{"irrep", "//", "ToString"}], "]"}], " ", ",", 
                    "\"\<\>\""}], "]"}], "<>", "\"\<$,\\\\\\\\ \\n\>\""}]}], 
                 ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"irrep", ",", "tens"}], "}"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"string", " ", "=", " ", 
            RowBox[{
            "string", "<>", 
             "\"\<~\\\\\\\\\\n%\\n\\\\emph{Projection matrix down to input \
algebra:}:\\n\\\\begin{flalign*}\\n\>\"", "<>", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"outt", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "id", ",", "3"}], "]"}], "]"}], "//", 
                "TeXForm"}], "//", "ToString"}], ")"}], "<>", 
             "\"\<\\n\>\""}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"QRCode", "===", "True"}], ",", 
             RowBox[{
              RowBox[{"string", "=", 
               RowBox[{
               "string", "<>", "\"\<&&\\\\qrcode[height=0.5in]{\>\"", "<>", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "id", ",", "3"}], "]"}], "]"}], "//", 
                    "InputForm"}], "//", "ToString"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<{\>\"", "\[Rule]", " ", "\"\<\\{\>\""}], ",", 
                    RowBox[{"\"\<}\>\"", "\[Rule]", " ", "\"\<\\}\>\""}]}], 
                   "}"}]}], "]"}], "<>", "\"\<}\>\""}]}], ";"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"string", "=", 
            RowBox[{
            "string", "<>", "\"\<\\\\end{flalign*}\\n~\\\\\\\\\\n\>\""}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"inclRhos", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"string", " ", "=", " ", 
               RowBox[{
               "string", "<>", 
                "\"\<\\\\emph{Projection matrices down to direct child \
algebras:}:\>\""}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "!=", "id"}], ",", 
                   RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"string", "=", 
                  RowBox[{
                  "string", "<>", 
                   "\"\<\\n\\\\begin{flalign*}{\\\\text{-~Algebra \
\\\\hyperlink{alg\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<}{\>\"",
                    "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
                   "\"\<} }(\>\"", "<>", 
                   RowBox[{"Flocci$LieAlgebraLatex", "[", 
                    RowBox[{"outt", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
                    "]"}], "<>", "\"\<) : }\>\"", "<>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "//", "TeXForm"}], "//", 
                    "ToString"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"QRCode", "===", "True"}], ",", 
                   RowBox[{
                    RowBox[{"string", "=", 
                    RowBox[{
                    "string", "<>", "\"\<&&\\\\qrcode[height=0.5in]{\>\"", "<>", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"pcrel", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "//", "InputForm"}], "//",
                     "ToString"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<{\>\"", "\[Rule]", " ", "\"\<\\{\>\""}], ",", 
                    RowBox[{"\"\<}\>\"", "\[Rule]", " ", "\"\<\\}\>\""}]}], 
                    "}"}]}], "]"}], "<>", "\"\<}\>\""}]}], ";"}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"string", "=", 
                  RowBox[{"string", "<>", "\"\<\\\\end{flalign*} \\n\>\""}]}],
                  ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"pcrel", ",", 
                  RowBox[{"outt", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"string", " ", "=", " ", 
               RowBox[{"string", "<>", "\"\<\\n%\\n\>\""}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"string", "=", 
            RowBox[{"string", "<>", "separator"}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"id", ",", 
            RowBox[{"Range", "@@", "range"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "string", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flocci$ParenthRep", "[", "text_", "]"}], ":=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"text", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<{\>\"", "->", "\"\<(\>\""}], ",", 
         RowBox[{"\"\<}\>\"", "->", "\"\<)\>\""}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"to", " ", "remove"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flocci$TensorProduct", "[", 
     RowBox[{"g_", ",", "\[Lambda]1_", ",", "\[Lambda]2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ws1", ",", "ws2", ",", "plus"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ws1", "=", 
        RowBox[{"Flocci$WeightSystemFromFlat", "[", 
         RowBox[{"g", ",", "\[Lambda]1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ws2", "=", 
        RowBox[{"Flocci$WeightSystemFromFlat", "[", 
         RowBox[{"g", ",", "\[Lambda]2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plus", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"Plus", ",", "ws1", ",", "ws2", ",", "1"}], "]"}], ",", 
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Flocci$ExtractHighestWeights", "[", 
        RowBox[{"g", ",", "plus"}], "]"}]}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8770229418198757`*^9, 3.877022942538031*^9}, {
   3.877023115027273*^9, 3.877023287262033*^9}, {3.877023391056068*^9, 
   3.877023396039385*^9}, {3.8770234431086082`*^9, 3.877023526167178*^9}, {
   3.877023619606454*^9, 3.8770237451256247`*^9}, 3.8770816380962687`*^9, {
   3.877081689523604*^9, 3.877081730833425*^9}, {3.8770817837410097`*^9, 
   3.877081862862949*^9}, {3.877081898796138*^9, 3.877081940894781*^9}, {
   3.8770820838365517`*^9, 3.877082122840575*^9}, 3.877082201312046*^9, {
   3.8770822642992477`*^9, 3.877082464134321*^9}, {3.8770825426640778`*^9, 
   3.877082545227013*^9}, {3.877082739740312*^9, 3.877082748906467*^9}, {
   3.877083261033737*^9, 3.8770832614042263`*^9}, 3.877083717571917*^9, {
   3.877084057554001*^9, 3.8770840722798443`*^9}, {3.87708431168624*^9, 
   3.877084316307645*^9}, {3.877084591318935*^9, 3.8770846140444117`*^9}, {
   3.877084664241832*^9, 3.8770848251652927`*^9}, {3.87708486916597*^9, 
   3.8770848699189873`*^9}, {3.877084931673457*^9, 3.8770849325386353`*^9}, {
   3.877084998486669*^9, 3.877085007193474*^9}, {3.877095219403802*^9, 
   3.877095234713904*^9}, {3.877095352200335*^9, 3.877095365376338*^9}, {
   3.877095397898861*^9, 3.8770955978398*^9}, {3.877095748553707*^9, 
   3.87709580412834*^9}, 3.877155258212976*^9, {3.877441637644905*^9, 
   3.877441696732122*^9}, {3.8774417301004868`*^9, 3.8774417516880503`*^9}, {
   3.877441833649622*^9, 3.877441909383028*^9}, {3.877442010009397*^9, 
   3.8774420166279984`*^9}, {3.877442169114531*^9, 3.87744218450344*^9}, {
   3.877442225235362*^9, 3.87744223250672*^9}, {3.8774422885749903`*^9, 
   3.877442321676034*^9}, {3.877442762307263*^9, 3.877442831744191*^9}, {
   3.877442879118558*^9, 3.877442927720544*^9}, {3.877442958461898*^9, 
   3.877442959777701*^9}, {3.877443091163897*^9, 3.877443109255703*^9}, {
   3.877443148277285*^9, 3.8774431798337917`*^9}, {3.877443889881991*^9, 
   3.877443936288384*^9}, {3.877444019067423*^9, 3.8774442086463833`*^9}, {
   3.877444251504566*^9, 3.87744425158703*^9}, {3.87744436914778*^9, 
   3.877444477092176*^9}, {3.8774445359162197`*^9, 3.877444559227219*^9}, {
   3.8774463568166018`*^9, 3.877446424896338*^9}, {3.877446544967122*^9, 
   3.8774465587115192`*^9}, {3.877600889470661*^9, 3.877600935507555*^9}, {
   3.877601114046276*^9, 3.877601250135392*^9}, {3.8776013014494753`*^9, 
   3.877601341115715*^9}, {3.8776013819498987`*^9, 3.8776015061597443`*^9}, {
   3.877601764474229*^9, 3.87760177189679*^9}, 3.877601864087117*^9, {
   3.8776019008108597`*^9, 3.877601902255459*^9}, {3.877601981690372*^9, 
   3.877602001171954*^9}, {3.877602612786562*^9, 3.877602615040724*^9}, {
   3.877602737621943*^9, 3.8776027719608*^9}, {3.877603257475519*^9, 
   3.877603292000906*^9}, {3.877603758494667*^9, 3.877603768287204*^9}, {
   3.877603820910293*^9, 3.877603845442771*^9}, {3.877603975941607*^9, 
   3.877604045538216*^9}, {3.877604075583284*^9, 3.8776040816913233`*^9}, {
   3.877604630633613*^9, 3.877604632411459*^9}, {3.8776046939811153`*^9, 
   3.877604711829468*^9}, {3.8776047745594177`*^9, 3.877604776882812*^9}, {
   3.877604815867321*^9, 3.877604836275784*^9}, {3.877605240097261*^9, 
   3.877605245042081*^9}, {3.8776054260244293`*^9, 3.8776057231089478`*^9}, {
   3.877605855709029*^9, 3.877606027073859*^9}, {3.8776061031116867`*^9, 
   3.8776062026898518`*^9}, {3.8776062455644083`*^9, 
   3.8776063119637403`*^9}, {3.8776065877120647`*^9, 3.877606587746578*^9}, {
   3.877606761229587*^9, 3.8776067922984533`*^9}, {3.877607503719001*^9, 
   3.877607628208508*^9}, {3.877607674537867*^9, 3.877607674754046*^9}, {
   3.877616363711733*^9, 3.877616365424505*^9}, {3.8776163961993713`*^9, 
   3.877616402316635*^9}, {3.87761647801379*^9, 3.8776164885606728`*^9}, 
   3.87761652541821*^9, {3.877616555482759*^9, 3.877616681563231*^9}, 
   3.877616775279908*^9, {3.877616827029295*^9, 3.8776168560257998`*^9}, 
   3.87769131799437*^9, {3.877692511304811*^9, 3.877692524718342*^9}, {
   3.877696174292362*^9, 3.877696186693205*^9}, {3.877696233874424*^9, 
   3.877696242667797*^9}, {3.8776962875644293`*^9, 3.87769630322663*^9}, {
   3.87769644216614*^9, 3.8776964547904177`*^9}, {3.877696492608086*^9, 
   3.877696507780652*^9}, {3.8776966089848127`*^9, 3.877696700871407*^9}, {
   3.877696793699109*^9, 3.8776967962527657`*^9}, 3.877696866254834*^9, {
   3.877697081716449*^9, 3.877697087215206*^9}, {3.877697626913417*^9, 
   3.877697635952758*^9}, {3.877697675022522*^9, 3.8776976858638897`*^9}, {
   3.87769773356314*^9, 3.877697783053286*^9}, {3.877697841361342*^9, 
   3.877697907081685*^9}, {3.877698063384796*^9, 3.877698075723679*^9}, {
   3.877698343732807*^9, 3.87769841474937*^9}, {3.877698480658636*^9, 
   3.877698530995582*^9}, {3.877698614677259*^9, 3.877698658662945*^9}, {
   3.877698706902733*^9, 3.877698726373271*^9}, {3.877698807062914*^9, 
   3.877698856315448*^9}, {3.877698902303001*^9, 3.877698997491345*^9}, {
   3.877699044982904*^9, 3.8776990614798717`*^9}, {3.8776991025260983`*^9, 
   3.877699376946044*^9}, {3.877699439728016*^9, 3.877699452190516*^9}, 
   3.877699492681629*^9, {3.877699598910198*^9, 3.877699601511155*^9}, {
   3.877699721079794*^9, 3.8776997292209797`*^9}, {3.8790046684872637`*^9, 
   3.879004686336429*^9}, {3.879004790329726*^9, 3.879004830815032*^9}, {
   3.8790049590432987`*^9, 3.879004962607255*^9}, {3.879005003817768*^9, 
   3.879005098315061*^9}, {3.8790051445641336`*^9, 3.879005153460156*^9}, {
   3.879005203455826*^9, 3.8790052238247547`*^9}, {3.87900526889639*^9, 
   3.8790055465284443`*^9}, {3.879005588135256*^9, 3.879005591809016*^9}, {
   3.879005981362962*^9, 3.879005989235991*^9}, {3.8790060442108307`*^9, 
   3.879006097621649*^9}, {3.8790061466640577`*^9, 3.879006148771633*^9}, {
   3.879006212773946*^9, 3.8790062428588257`*^9}, {3.879006448591299*^9, 
   3.879006472661281*^9}, {3.8790066609508944`*^9, 3.879006662498229*^9}, {
   3.879006694716997*^9, 3.879006775507517*^9}, {3.8790069494564753`*^9, 
   3.879007029174819*^9}, {3.879007075524373*^9, 3.879007075665925*^9}, {
   3.879007664773333*^9, 3.879007802403285*^9}, {3.879008255465602*^9, 
   3.879008265536128*^9}, {3.879008297075039*^9, 3.8790083489926443`*^9}, {
   3.879008380074932*^9, 3.87900858049704*^9}, {3.879008638294976*^9, 
   3.8790087475640707`*^9}, {3.879008811921324*^9, 3.879008830288961*^9}, {
   3.87900896979732*^9, 3.879008975948332*^9}, {3.879009315869965*^9, 
   3.879009321534247*^9}, 3.879009485665777*^9, {3.8790096237351313`*^9, 
   3.8790096240466623`*^9}, {3.879096082166964*^9, 3.8790960853419647`*^9}, {
   3.879099104572795*^9, 3.879099105414459*^9}, {3.879099266056613*^9, 
   3.879099316061473*^9}, {3.87909940432556*^9, 3.879099417998095*^9}, {
   3.8791836849522953`*^9, 3.879183688736075*^9}, {3.879184174123396*^9, 
   3.87918419145471*^9}, {3.879184241860668*^9, 3.879184243431841*^9}, {
   3.879184298491353*^9, 3.879184395375243*^9}, {3.879184429407816*^9, 
   3.879184447295982*^9}, 3.8791845186317787`*^9, {3.879184595488996*^9, 
   3.87918462545798*^9}, {3.879184680160739*^9, 3.879184689500331*^9}, {
   3.879185191153151*^9, 3.8791851920319138`*^9}, {3.879247626653892*^9, 
   3.879247632210853*^9}, {3.8792481393419247`*^9, 3.8792481411934443`*^9}, {
   3.879253025009303*^9, 3.8792530452133293`*^9}, {3.879330072168985*^9, 
   3.879330075535099*^9}, {3.879330124730442*^9, 3.879330164567955*^9}, {
   3.879330323858243*^9, 3.8793303328863363`*^9}, {3.879330382357839*^9, 
   3.879330428940062*^9}, {3.879330486538542*^9, 3.879330559730727*^9}, {
   3.8793307221797333`*^9, 3.8793307230130997`*^9}, {3.8793309956440783`*^9, 
   3.879331014789431*^9}, {3.879331067089572*^9, 3.879331169966793*^9}, {
   3.879331208730135*^9, 3.879331269795823*^9}, {3.879333347512095*^9, 
   3.879333367059082*^9}, {3.8793335980795*^9, 3.879333608155231*^9}, {
   3.879333878333153*^9, 3.8793338831629047`*^9}, 3.879333938326931*^9, {
   3.8913787565237494`*^9, 3.89137876117815*^9}, {3.891378857015521*^9, 
   3.891378867335884*^9}, {3.8913789017893867`*^9, 3.891378924093631*^9}, {
   3.8913791513245173`*^9, 3.8913792288249474`*^9}},
 CellLabel->
  "In[908]:=",ExpressionUUID->"0a9d3b39-c606-48d3-97c6-1f73c2d7f756"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["User Interface Code", "Section",
 CellChangeTimes->{{3.868439960838974*^9, 
  3.868439969795339*^9}},ExpressionUUID->"01eefdf4-ac30-453f-81eb-\
edaa3a76ccc1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<FlocciOutput\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FlocciOutput", "::", "tag"}], "=", "\"\<User\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FlocciOutput", "::", "input"}], "=", 
   "\"\<output: output of SuperFlocci\\nOptional Arguments: \\n-display \
(False): True or False, visualization of SuperFlocci output. \\n-save \
(False): True or False, save mathematica output. \\n-filename (\\\"auto\\\"): \
string, filename for mathematica and/or Latex output relative to notebook \
directory.\\n-labelrep (\\\"auto\\\"): replacement rules, string labels for \
user representations in the format {{1,0,0,...}->\\\"label1\\\",...}. \
\\n-latex (False): if not false produces Latex summary with inputs specified \
as String as e.g. latex->{\\\"maxtable\\\"}\\n----\\\"maxtable\\\": table \
with all maximal algebras\\n----\\\"mintable\\\": table with all minimal \
algebras\\n----\\\"alltables\\\": tables with all \
algebras\\n----\\\"embeddingsdetail\\\": detailed overview of all embeddings.\
\\n----\\\"tensorproduct\\\": gives all bilinear tensorproducts of \
representations (only in combination with \
\\\"embeddingsdetail\\\")\\n----\\\"onlymaxminembeddings\\\": restricts \
embeddingsdetail to maximal and minimal embeddings (only in combination with \
\\\"embeddingsdetail\\\")\\n----\\\"projectiontree\\\": outputs projection \
matrices between algebras on same branch of tree (only in combination with \\\
\"embeddingsdetail\\\" and is neglected for \
\\\"onlymaxminembeddings\\\")\\n----\\\"QR\\\": outputs QR Code which encodes \
the projection matrices (only in combination with \\\"embeddingsdetail\\\")\>\
\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FlocciOutput", "::", "output"}], "=", 
   "\"\<Visualisation of output and option Latex or data file.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FlocciOutput", "::", "description"}], "=", 
   "\"\<Outputs and saves data generated by SuperFlocci\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FlocciOutput", "[", 
   RowBox[{"output_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"display", "->", "True"}], ",", 
       RowBox[{"filename", "->", "\"\<auto\>\""}], ",", 
       RowBox[{"save", "->", "False"}], ",", 
       RowBox[{"labelrep", "->", "\"\<auto\>\""}], ",", 
       RowBox[{"latex", "->", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LatexHead", ",", "LatexBottom", ",", "filenameFinal", ",", 
      "latexOptions", ",", "latexCode", ",", "file", ",", "outputReord", ",", 
      "separator", ",", "inpAlg", ",", "tensProd", ",", "outputData", ",", 
      "rhoMatrices", ",", "labelList", ",", "wsFlattened", ",", "repMult", 
      ",", "i", ",", "currLabel", ",", "userLabel", ",", "currPos", ",", 
      "userLabelCount", ",", "j", ",", "QRCode"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"inpAlg", "=", 
      RowBox[{"output", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wsFlattened", "=", 
      RowBox[{"Flatten", "/@", 
       RowBox[{"output", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
     "separator", "=", 
      "\"\<%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\n\>\"\
"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Define", " ", "Head", " ", "and", " ", "Bottom", " ", "of", " ", 
       "Latex", " ", "document"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "LatexHead", "=", 
      "\"\<\\\\documentclass{article}\n\\\\usepackage{amscd}\n\
\\\\usepackage{amsmath, bbm} \n\\\\usepackage{amsfonts}\n\
\\\\usepackage{amssymb}\n\\\\usepackage{hyperref}\n\\\\usepackage{xltabular}\n\
\\\\usepackage{varwidth}\n\\\\usepackage[margin=0.6in]{geometry}\n\
\\\\hypersetup{\n    colorlinks=true,\n    linkcolor=black,\n    \
filecolor=black,      \n    urlcolor=black,\n    citecolor = black,\n}\n\
\\\\usepackage{qrcode}\n\\\\makeatletter\n\\\\newcolumntype{B}[1]{%\n  \
>{\\\\begin{varwidth}[t]{#1}\\\\narrowragged\\\\let\\\\\\\\\\\\tabularnewline}\
%\n  r%\n  <{\\\\@finalstrut\\\\@arstrutbox\\\\end{varwidth}}}\n\
\\\\makeatother\n \n\\\\begin{document}\n\
\\\\title{Superfloccinaucinihilipilification - output}\n\
\\\\author{\\\\emph{Program by: }Andrew Gomes, Maximillian Ruhdorfer, and \
Joseph Tooby-Smith}\n\\\\maketitle\n\>\""}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Generate", " ", "filename", " ", "is", " ", "none", " ", "is", " ", 
       "given"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OptionValue", "[", "filename", "]"}], "==", "\"\<auto\>\""}],
        ",", 
       RowBox[{"filenameFinal", "=", 
        RowBox[{"\"\<Flocci_\>\"", "<>", 
         RowBox[{"DateString", "[", "\"\<ISODateTime\>\"", "]"}]}]}], ",", 
       RowBox[{"filenameFinal", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"OptionValue", "[", "filename", "]"}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"LatexBottom", "=", "\"\<\\\\end{document}\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", " ", "save"}], " ", "=", " ", 
       RowBox[{
       "True", " ", "save", " ", "Mathematica", " ", "output", " ", "to", " ",
         "filename"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OptionValue", "[", "save", "]"}], "===", "True"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Saving the Mathematica output to \>\"", "<>", 
          RowBox[{"NotebookDirectory", "[", "]"}], "<>", "filenameFinal", 
          "<>", "\"\<.m\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"FlocciOutputData", "=", "output"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Save", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], "<>", "filenameFinal", 
           "<>", "\"\<.m\>\""}], ",", "FlocciOutputData"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Display", " ", "output", " ", "if", " ", "display"}], "==", 
       "True"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OptionValue", "[", "display", "]"}], "===", "True"}], ",", 
       RowBox[{"Flocci$MathematicaDisplay", "[", "output", "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"reorder", " ", "output"}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"outputReord", "=", 
      RowBox[{"Flocci$MaxMinOutputReorder", "[", "output", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "If", " ", "latex", " ", "is", " ", "not", " ", "False", " ", 
       "generate", " ", "Latex", " ", "file", " ", "with", " ", "options"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"OptionValue", "[", "latex", "]"}], "===", "False"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Creating Latex Output\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", 
           RowBox[{"OptionValue", "[", "latex", "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "check", " ", "if", " ", "user", " ", "specified", " ", "labels", 
            " ", "for", " ", "the", " ", "fermions", " ", "and", " ", "if", 
            " ", "not", " ", "generate", " ", "them", " ", "automatically"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"repMult", "=", 
            RowBox[{"Tally", "[", "wsFlattened", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"labelList", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OptionValue", "[", "labelrep", "]"}], "===", 
              "\"\<auto\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"generate", " ", "labels", " ", "automatically"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"currLabel", "=", 
                 RowBox[{"\"\<\\\\psi_{\>\"", "<>", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"i", "+", "j"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", "\"\<,\>\""}], "]"}], "<>", "\"\<}\>\""}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"i", "=", 
                 RowBox[{"i", "+", 
                  RowBox[{"rep", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"labelList", ",", 
                  RowBox[{
                   RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", "currLabel"}]}], 
                 "]"}]}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"rep", ",", "repMult"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"use", " ", "user", " ", "specified", " ", "labels"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"userLabel", "=", 
               RowBox[{"OptionValue", "[", "labelrep", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"userLabelCount", "=", 
               RowBox[{"Tally", "[", 
                RowBox[{"First", "/@", 
                 RowBox[{"DeleteDuplicates", "[", "userLabel", "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", "userLabelCount", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "check", " ", "if", " ", "userLabel", " ", "contains", " ", 
                 "all", " ", "representations", " ", "in", " ", "the", " ", 
                 "input"}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"userLabelCount", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "if", " ", "representation", " ", "is", " ", "contained", 
                    " ", "check", " ", "how", " ", "many", " ", "labels", " ",
                     "are", " ", "specified", " ", "for", " ", "this", " ", 
                    "representation"}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currPos", "=", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"userLabelCount", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"userLabelCount", "[", 
                    RowBox[{"[", 
                    RowBox[{"currPos", ",", "2"}], "]"}], "]"}], ">", "1"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"userLabelCount", "[", 
                    RowBox[{"[", 
                    RowBox[{"currPos", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"j", "<", 
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"userLabel", ",", 
                    RowBox[{
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", 
                    RowBox[{"\"\<\\\\psi_{\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    "\"\<}\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"i", "=", 
                    RowBox[{"i", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]",
                     "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "<=", 
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"userLabelCount", "[", 
                    RowBox[{"[", 
                    RowBox[{"currPos", ",", "2"}], "]"}], "]"}], "<", "j"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"userLabel", ",", 
                    RowBox[{
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", 
                    RowBox[{"\"\<\\\\psi_{\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    "\"\<}\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"i", "=", 
                    RowBox[{"i", "+", "1"}]}]}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "if", " ", "representation", " ", "is", " ", "not", " ", 
                    "contained", " ", "add", " ", "automatic", " ", 
                    "labels"}], " ", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currLabel", "=", 
                    RowBox[{"\"\<\\\\psi_{\>\"", "<>", 
                    RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"i", "+", "j"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "}"}]}], 
                    "]"}], ",", "\"\<,\>\""}], "]"}], "<>", "\"\<}\>\""}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"i", "=", 
                    RowBox[{"i", "+", 
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"userLabel", ",", 
                    RowBox[{
                    RowBox[{"rep", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", "currLabel"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"rep", ",", "repMult"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", "userLabel", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"labelList", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "->", 
                   RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "}"}]}], "]"}], 
                    "]"}], ",", "\"\</\>\""}], "]"}]}], "&"}], ",", 
                 RowBox[{"SplitBy", "[", 
                  RowBox[{
                   RowBox[{"Sort", "[", "userLabel", "]"}], ",", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"latexOptions", "=", 
            RowBox[{"OptionValue", "[", "latex", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"latexCode", "=", 
            RowBox[{"LatexHead", "<>", "separator", "<>", "\"\<\\n\>\""}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"latexCode", "=", 
            RowBox[{
            "latexCode", "<>", 
             "\"\<\\\\begin{abstract}\\nThis document was automatically \
generated by the code \\\\texttt{Superfloccinaucinihilipilification} on \>\"",
              "<>", 
             RowBox[{"output", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "<>", 
             "\"\<. If you use the data generated by this code in a \
publication please cite\\\\\\\\~\\\\\\\\\\n%\\n\\\\textit{Citation \
information.}\\\\\\\\~\\\\\\\\\\n%\\nThe current document contains tables of \
and details on semi-simple extensions of the gauge algebra and fermion \
representations specified in Section~\\\\ref{sec:user}.\\n\\\\end{abstract}\\\
\\tableofcontents\\n\\\\section{User \
Input}\\\\label{sec:user}\\n~\\\\\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"latexCode", "=", 
            RowBox[{"latexCode", "<>", "\"\<Input algebra: $\>\"", "<>", 
             RowBox[{"Flocci$LieAlgebraLatex", "[", "inpAlg", "]"}], "<>", 
             "\"\<$\\\\\\\\\\nInput representations:\\\\\\\\\\n\>\""}]}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"latexCode", "=", 
               RowBox[{"latexCode", "<>", "\"\<$\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"irrep", "/.", "labelList"}], "]"}], "<>", 
                "\"\<\\\\rightarrow \>\"", "<>", 
                RowBox[{"Flocci$IrrepLatex", "[", 
                 RowBox[{
                  RowBox[{"output", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"{", "irrep", "}"}]}], "]"}], "<>", "\"\< = \>\"", "<>", 
                RowBox[{"Flocci$ParenthRep", "[", 
                 RowBox[{"irrep", "//", "ToString"}], "]"}], "<>", 
                "\"\<$\\\\\\\\\\n%\\n\>\""}]}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"irrep", ",", 
               RowBox[{"DeleteDuplicates", "[", "wsFlattened", "]"}]}], 
              "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Add", " ", "summary", " ", "tables", " ", "if", " ", 
             "requested"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"latexOptions", ",", "\"\<alltables\>\""}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"add", " ", "all", " ", "tables"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"latexCode", "=", 
               RowBox[{
               "latexCode", "<>", "\"\<\\\\section{Tables}\\n\>\""}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"latexCode", "=", 
               RowBox[{"latexCode", "<>", 
                RowBox[{"(*", 
                 RowBox[{"\"\<\\\\setcounter{table}{-1}\\n\>\"", "<>"}], 
                 "*)"}], 
                RowBox[{"Flocci$TableLatex", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<Maximal\>\"", ",", "\"\<Minimal\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}]}], "]"}], "]"}]}], 
                   "}"}], ",", "\"\<All maximal and minimal algebras.\>\"", 
                  ",", "\"\<tab:MinMax\>\"", ",", "0", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}],
                     "]"}], ",", "True", ",", "False"}], "]"}]}], "]"}], "<>",
                 "separator", "<>", 
                RowBox[{"(*", 
                 RowBox[{"\"\<\\\\setcounter{table}{0}\\n\>\"", "<>"}], 
                 "*)"}], 
                RowBox[{"Flocci$TableLatex", "[", 
                 RowBox[{
                 "\"\<Non-Maximal and Non-Minimal Algebras\>\"", ",", 
                  RowBox[{"outputReord", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1"}], ";;"}]}], 
                    "]"}], "]"}], ",", 
                  "\"\<All algebras which are neither maximal nor \
minimal.\>\"", ",", "\"\<tab:nonMinMax\>\"", ",", 
                  RowBox[{
                   RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                   RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}],
                     "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "latexOptions", ",", "\"\<onlymaxminembeddings\>\""}], 
                    "]"}]}]}], ",", "True", ",", "False"}], "]"}]}], 
                 "]"}]}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"latexOptions", ",", "\"\<maxtable\>\""}], "]"}], "&&", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"latexOptions", ",", "\"\<mintable\>\""}], "]"}]}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "add", " ", "max", " ", "and", " ", "min", " ", "tables"}], 
                " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"latexCode", "=", 
                 RowBox[{
                 "latexCode", "<>", "\"\<\\\\section{Tables}\\n\>\""}]}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"latexCode", "=", 
                 RowBox[{"latexCode", "<>", 
                  RowBox[{"(*", 
                   RowBox[{"\"\<\\\\setcounter{table}{-1}\\n\>\"", "<>"}], 
                   "*)"}], 
                  RowBox[{"Flocci$TableLatex", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Maximal\>\"", ",", "\"\<Minimal\>\""}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}]}], "]"}], "]"}]}], 
                    "}"}], ",", "\"\<All maximal and minimal algebras.\>\"", 
                    ",", "\"\<tab:MinMax\>\"", ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}],
                     "]"}], ",", "True", ",", "False"}], "]"}]}], "]"}]}]}]}],
                ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"latexOptions", ",", "\"\<maxtable\>\""}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"latexCode", "=", 
                    RowBox[{
                    "latexCode", "<>", "\"\<\\\\section{Tables}\\n\>\""}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"latexCode", "=", 
                    RowBox[{"latexCode", "<>", 
                    RowBox[{"(*", 
                    RowBox[{"\"\<\\\\setcounter{table}{-1}\\n\>\"", "<>"}], 
                    "*)"}], 
                    RowBox[{"Flocci$TableLatex", "[", 
                    RowBox[{"\"\<Maximal Algebras\>\"", ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
                    "\"\<All maximal algebras.\>\"", ",", "\"\<tab:Max\>\"", 
                    ",", "0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}],
                     "]"}], ",", "True", ",", "False"}], "]"}]}], 
                    "]"}]}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"latexOptions", ",", "\"\<mintable\>\""}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"latexCode", "=", 
                    RowBox[{
                    "latexCode", "<>", "\"\<\\\\section{Tables}\\n\>\""}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"latexCode", "=", 
                    RowBox[{"latexCode", "<>", 
                    RowBox[{"(*", 
                    RowBox[{"\"\<\\\\setcounter{table}{-1}\\n\>\"", "<>"}], 
                    "*)"}], 
                    RowBox[{"Flocci$TableLatex", "[", 
                    RowBox[{"\"\<Minimal\>\"", ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}]}], "]"}], "]"}], ",", 
                    "\"\<All minimal algebras.\>\"", ",", "\"\<tab:Min\>\"", 
                    ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}],
                     "]"}], ",", "True", ",", "False"}], "]"}]}], 
                    "]"}]}]}]}]}], "]"}]}]}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"latexCode", "=", 
            RowBox[{"latexCode", "<>", "separator"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "check", " ", "if", " ", "detailed", " ", "information", " ", 
             "about", " ", "embeddings", " ", "is", " ", "requested", " ", 
             "and", " ", "add", " ", "it", " ", "if", " ", "required"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"latexOptions", ",", "\"\<embeddingsdetail\>\""}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"latexOptions", ",", "\"\<tensorproduct\>\""}], 
                 "]"}], ",", 
                RowBox[{"tensProd", "=", "\"\<Both\>\""}], 
                RowBox[{"(*", 
                 RowBox[{
                 "Both", ",", " ", "Dim", ",", " ", "HW", ",", " ", "None"}], 
                 "*)"}], ",", 
                RowBox[{"tensProd", "=", "None"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"latexOptions", ",", "\"\<projectiontree\>\""}], 
                 "]"}], ",", 
                RowBox[{"rhoMatrices", "=", "True"}], ",", 
                RowBox[{"rhoMatrices", "=", "False"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"latexOptions", ",", "\"\<QR\>\""}], "]"}], ",", 
                RowBox[{"QRCode", "=", "True"}], ",", 
                RowBox[{"QRCode", "=", "False"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"latexCode", "=", 
               RowBox[{
               "latexCode", "<>", 
                "\"\<\\\\section{Details on Embeddings}\\n%\\n \\\\setlength{\
\\\\arraycolsep}{2pt} % General space between cols (6pt standard)\n\
\\\\renewcommand{\\\\arraystretch}{1} % General space between rows (1 \
standard)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"latexCode", "=", 
               RowBox[{"latexCode", "<>", 
                RowBox[{"Flocci$ListLatex", "[", 
                 RowBox[{
                 "outputReord", ",", "inpAlg", ",", 
                  "\"\<Maximal Algebras\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                  "rhoMatrices", ",", "tensProd", ",", "labelList", ",", 
                  "QRCode"}], "]"}], "\[IndentingNewLine]", "<>", 
                RowBox[{"Flocci$ListLatex", "[", 
                 RowBox[{
                 "outputReord", ",", "inpAlg", ",", 
                  "\"\<Minimal Algebras\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", "False", 
                  ",", "tensProd", ",", "labelList", ",", "QRCode"}], 
                 "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                  "latexOptions", ",", "\"\<onlymaxminembeddings\>\""}], 
                  "]"}]}], ",", 
                RowBox[{"latexCode", "=", 
                 RowBox[{"latexCode", "<>", 
                  RowBox[{"Flocci$ListLatex", "[", 
                   RowBox[{
                   "outputReord", ",", "inpAlg", ",", 
                    "\"\<Neither Maximal nor Minimal Algebras\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"outputReord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
                    "False", ",", "tensProd", ",", "labelList", ",", 
                    "QRCode"}], "]"}]}]}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "add", " ", "bottom", " ", "and", " ", "save", " ", "file"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"latexCode", "=", 
            RowBox[{"latexCode", "<>", "LatexBottom"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Generating Latex file at \>\"", "<>", 
             RowBox[{"NotebookDirectory", "[", "]"}], "<>", "filenameFinal", 
             "<>", "\"\<.tex\>\""}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "[", 
              RowBox[{
               RowBox[{"NotebookDirectory", "[", "]"}], "<>", "filenameFinal",
                "<>", "\"\<.tex\>\""}], "]"}], ",", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<File \>\"", "<>", 
                RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
                "filenameFinal", "<>", 
                "\"\<.tex already exists. Overwriting it.\>\""}], "]"}], ";", 
              
              RowBox[{"DeleteFile", "[", 
               RowBox[{
                RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
                "filenameFinal", "<>", "\"\<.tex\>\""}], "]"}]}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"file", "=", 
            RowBox[{"CreateFile", "[", 
             RowBox[{
              RowBox[{"NotebookDirectory", "[", "]"}], "<>", "filenameFinal", 
              "<>", "\"\<.tex\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"WriteString", "[", 
            RowBox[{"file", ",", "latexCode"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Close", "[", "file", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.878989039602634*^9, 3.878989117755571*^9}, {
   3.8789891561184893`*^9, 3.878989322292987*^9}, {3.878989354335434*^9, 
   3.878989420900599*^9}, {3.878989455348674*^9, 3.8789895024750547`*^9}, {
   3.8789895860520277`*^9, 3.878989666411664*^9}, {3.8789897009038267`*^9, 
   3.8789897029059153`*^9}, {3.878989784785524*^9, 3.8789898119694433`*^9}, {
   3.8789898907263603`*^9, 3.878989926198332*^9}, {3.878989980296631*^9, 
   3.878990012817233*^9}, {3.878990149445272*^9, 3.878990161865291*^9}, {
   3.878990296023205*^9, 3.878990327354151*^9}, {3.8790022393583803`*^9, 
   3.879002441917441*^9}, {3.879002497154018*^9, 3.879002502734326*^9}, {
   3.879005880624333*^9, 3.87900634851326*^9}, {3.8790076515399017`*^9, 
   3.87900785369989*^9}, {3.879007893963464*^9, 3.879007908577466*^9}, {
   3.879008195129388*^9, 3.879008195626371*^9}, {3.879008232703412*^9, 
   3.87900831896944*^9}, {3.87900844459991*^9, 3.8790084875438337`*^9}, {
   3.879008572176157*^9, 3.879008589399634*^9}, {3.879008623363244*^9, 
   3.8790088138631067`*^9}, {3.8790088552046757`*^9, 3.879009165125432*^9}, {
   3.879009292757029*^9, 3.8790093308055553`*^9}, {3.879009363700603*^9, 
   3.87900939328974*^9}, {3.879009667915463*^9, 3.879009733608123*^9}, {
   3.8790098140884733`*^9, 3.8790098915366287`*^9}, {3.879093343446348*^9, 
   3.879093344207362*^9}, {3.879093380764286*^9, 3.879093452047503*^9}, {
   3.879094402551526*^9, 3.879094412979724*^9}, {3.879094481053636*^9, 
   3.879094591251678*^9}, {3.879094668065791*^9, 3.8790947028833847`*^9}, {
   3.879094740422387*^9, 3.8790948065981503`*^9}, {3.879094966983344*^9, 
   3.87909496800644*^9}, {3.879095092458292*^9, 3.8790952174133463`*^9}, {
   3.879095258450704*^9, 3.8790952710884323`*^9}, {3.8790953014094276`*^9, 
   3.879095408015828*^9}, {3.879095470849711*^9, 3.8790955439908133`*^9}, {
   3.8790957020411673`*^9, 3.879096050769919*^9}, {3.879096454404503*^9, 
   3.8790964554111032`*^9}, 3.8790968032264643`*^9, 3.879096861793887*^9, {
   3.87909702556564*^9, 3.8790970427550097`*^9}, {3.8790971237902117`*^9, 
   3.879097155493113*^9}, {3.879097195384741*^9, 3.8790971975924664`*^9}, {
   3.879097437736266*^9, 3.8790974382297583`*^9}, {3.879097635144319*^9, 
   3.879097640934554*^9}, {3.879097734125779*^9, 3.879097770756819*^9}, {
   3.879097801372203*^9, 3.879097826733172*^9}, {3.879097873561249*^9, 
   3.879097923889728*^9}, {3.879097974874277*^9, 3.879098017260664*^9}, {
   3.8790981606508007`*^9, 3.879098295231125*^9}, {3.879098545103994*^9, 
   3.879098588579756*^9}, {3.8791847394936934`*^9, 3.879184833151616*^9}, {
   3.879184863292301*^9, 3.879184928089488*^9}, {3.8791849584426394`*^9, 
   3.879185017796507*^9}, {3.879185374782256*^9, 3.879185395836322*^9}, {
   3.8791854319511747`*^9, 3.879185526897283*^9}, {3.8791856134939947`*^9, 
   3.879185638768875*^9}, {3.879185747986164*^9, 3.8791858945401993`*^9}, {
   3.8791859667837*^9, 3.8791859911891727`*^9}, {3.879186021258308*^9, 
   3.8791860505638533`*^9}, {3.879186107491593*^9, 3.879186124920458*^9}, {
   3.8791862074294863`*^9, 3.879186210077642*^9}, {3.879186240308812*^9, 
   3.879186243416296*^9}, {3.879186385190859*^9, 3.879186504006413*^9}, {
   3.879186663433736*^9, 3.8791866643789797`*^9}, {3.879186782913588*^9, 
   3.879186796209469*^9}, {3.8791868469937487`*^9, 3.879186942911878*^9}, {
   3.879187051173059*^9, 3.879187236457757*^9}, {3.879240137679838*^9, 
   3.879240146084353*^9}, {3.879240179382339*^9, 3.87924022280692*^9}, {
   3.879240270991132*^9, 3.8792403411895638`*^9}, {3.879240371452684*^9, 
   3.8792404608112392`*^9}, {3.879240607564286*^9, 3.879240689783246*^9}, {
   3.87924090352159*^9, 3.879241000765313*^9}, {3.879241045057044*^9, 
   3.879241114886763*^9}, {3.879241158153256*^9, 3.8792412459718113`*^9}, {
   3.8792413577954473`*^9, 3.8792414337450857`*^9}, {3.879241482787766*^9, 
   3.8792415254340973`*^9}, {3.879241579847506*^9, 3.8792416492038*^9}, {
   3.879245356248228*^9, 3.879245373303657*^9}, {3.879245430264256*^9, 
   3.879245454351055*^9}, 3.879245490126915*^9, 3.879245552859233*^9, {
   3.879245598399612*^9, 3.879245618413699*^9}, {3.879245723835705*^9, 
   3.879245930439322*^9}, {3.879245991143497*^9, 3.8792461458480043`*^9}, {
   3.8792461784291897`*^9, 3.879246269363637*^9}, 3.879246310247308*^9, {
   3.8792469996282883`*^9, 3.87924701445618*^9}, 3.8792471334165154`*^9, {
   3.879247467625352*^9, 3.879247472256998*^9}, {3.8792475654032907`*^9, 
   3.879247567652495*^9}, {3.8792479199438543`*^9, 3.879247945313043*^9}, {
   3.879248226738003*^9, 3.8792482439500628`*^9}, {3.879248321668048*^9, 
   3.879248326381063*^9}, {3.879253143411722*^9, 3.87925315884601*^9}, {
   3.87925335322749*^9, 3.879253370090884*^9}, {3.8792534790597267`*^9, 
   3.8792534852688637`*^9}, {3.879253550420291*^9, 3.879253550711628*^9}, {
   3.879253584393528*^9, 3.879253691123452*^9}, {3.8792537745904217`*^9, 
   3.879253775173563*^9}, {3.879253807201983*^9, 3.879253815381236*^9}, {
   3.879253872633876*^9, 3.879253880072607*^9}, {3.87925400734416*^9, 
   3.8792540137884073`*^9}, {3.8792540507165947`*^9, 3.879254057974606*^9}, {
   3.879254240986116*^9, 3.879254279066272*^9}, {3.8792543324621277`*^9, 
   3.879254332617045*^9}, {3.87925438574175*^9, 3.8792543888677073`*^9}, {
   3.879254462827868*^9, 3.879254484849106*^9}, {3.879254549864011*^9, 
   3.879254579652615*^9}, {3.879254614541566*^9, 3.8792546228993893`*^9}, {
   3.879254671680642*^9, 3.8792546776858683`*^9}, {3.879254731000988*^9, 
   3.879254740168812*^9}, {3.8792547752595577`*^9, 3.879254776485341*^9}, {
   3.8792550652094584`*^9, 3.87925506543294*^9}, {3.87925521622018*^9, 
   3.879255220481995*^9}, {3.879255796407205*^9, 3.879255799218916*^9}, 
   3.879326641623404*^9, {3.879326752530229*^9, 3.879326753089061*^9}, {
   3.879329635735602*^9, 3.879329713095415*^9}, {3.87932987542021*^9, 
   3.879329876880746*^9}, {3.879330008868846*^9, 3.879330010962545*^9}, {
   3.879333449619955*^9, 3.879333451793347*^9}, {3.8793515793872538`*^9, 
   3.879351598006301*^9}, {3.879351636032797*^9, 3.879351636246579*^9}, {
   3.8793517019336147`*^9, 3.879351744380081*^9}, {3.879351782619483*^9, 
   3.8793518519154387`*^9}, {3.879351905288933*^9, 3.879351914205248*^9}, {
   3.879351967731863*^9, 3.879351975771513*^9}, {3.879352411915894*^9, 
   3.87935245433639*^9}, {3.87935262468853*^9, 3.8793526544854918`*^9}, {
   3.87935293563843*^9, 3.8793529558906717`*^9}, 3.879353018682358*^9, {
   3.879353050965144*^9, 3.879353060100161*^9}, {3.879353153180203*^9, 
   3.87935319840705*^9}, {3.879852223149955*^9, 3.879852226741742*^9}, {
   3.8799474090429993`*^9, 3.879947415352478*^9}, {3.8799493300572023`*^9, 
   3.879949335188096*^9}, {3.891362583856196*^9, 3.8913625899548893`*^9}, {
   3.8913626894083223`*^9, 3.8913627064875393`*^9}, {3.891362761751073*^9, 
   3.891362772656221*^9}, {3.891362936419279*^9, 3.891362958895012*^9}, {
   3.89136338550217*^9, 3.8913634822285643`*^9}, {3.891363919588882*^9, 
   3.891363967012065*^9}, {3.891364224764225*^9, 3.89136422971133*^9}, {
   3.891364373924802*^9, 3.8913644006685762`*^9}, {3.891364545255789*^9, 
   3.891364574171266*^9}, {3.891364672543082*^9, 3.8913647462078648`*^9}, {
   3.891364818733326*^9, 3.891364818839033*^9}, {3.891364901149892*^9, 
   3.8913649198908443`*^9}, {3.8913651420582047`*^9, 3.891365169423882*^9}, {
   3.891365199501606*^9, 3.891365266325252*^9}, {3.891365527533792*^9, 
   3.891365528115568*^9}, {3.89136557858321*^9, 3.891365583624155*^9}, {
   3.891365638817341*^9, 3.891365657290194*^9}, {3.8913658590294943`*^9, 
   3.8913658676951103`*^9}, {3.8913659400775557`*^9, 3.891365953124761*^9}, {
   3.891366151825718*^9, 3.891366152115862*^9}, {3.891378985020937*^9, 
   3.8913790508808537`*^9}, {3.891379275800577*^9, 3.891379333590807*^9}, {
   3.891379378484446*^9, 3.891379379022623*^9}, {3.8913806629511013`*^9, 
   3.8913806878130836`*^9}, {3.89138088815667*^9, 3.8913809352303257`*^9}},
 CellLabel->
  "In[936]:=",ExpressionUUID->"973fa97a-8cb0-44f1-ac91-8ca87b344251"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<SuperFlocci\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SuperFlocci", "::", "tag"}], "=", "\"\<User\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SuperFlocci", "::", "input"}], "=", 
   "\"\<userg) A reductive Lie algebra e.g. {A2,A1,U1}.\\nuser\[CapitalPhi]) \
The weight system of the fermionic representations.\\nOptional \
Arguments:\\n-Checkpoint (False): The file name where checkpointed data \
should be saved to.\\n-CheckpointUpFreq (1000): How frequently checkpoints \
should be carried out on the up-part of the program.\\n-StartFromCheckpoint \
(True): If checkpoint file given, and already exists, start from saved \
checkpoint.\\n-ClearDataFreq (1000): How often Cache should be \
cleared.\\n-SimpleIdealConstraint (\[Infinity]): An upper limit on the number \
of simple ideals of nodes generated.\\n-DetailedProgressData (False): Put to \
true if want more detailed progress data when running code.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SuperFlocci", "::", "output"}], "=", 
   "\"\<A list containing:\\n The inputed Lie algebra\\n The inputed fermonic \
reps \\n The list of semi-simple extensions \\n The list of edges between \
these extensions \\n A collection of timing data \\n The date and time that \
the function was generated.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SuperFlocci", "::", "description"}], "=", 
    "\"\<The main function of our program. This takes the user input, and \
generates the output data.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SuperFlocci", "[", 
   RowBox[{"userg_", ",", "user\[CapitalPhi]_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Checkpoint", "\[Rule]", "False"}], ",", 
       RowBox[{"CheckpointUpFreq", "\[Rule]", "1000"}], ",", 
       RowBox[{"StartFromCheckpoint", "\[Rule]", "True"}], ",", 
       RowBox[{"ClearDataFreq", "\[Rule]", "1000"}], ",", 
       RowBox[{"ProjectionMatrixList", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"SimpleIdealConstraint", "\[Rule]", " ", "\[Infinity]"}], ",", 
       
       RowBox[{"DetailedProgressData", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"ExtendedKappaCheck", "\[Rule]", " ", "True"}]}], "}"}], 
     "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "user\[CapitalPhi]NF", ",", "n", ",", "ord", ",", "g", ",", 
      "\[CapitalPhi]t", ",", "FlocciOutput", ",", "U1sOnlyBool", ",", 
      "algList", ",", "edList", ",", "testCond", ",", "pos", ",", "adjust", 
      ",", "TotalTimeOfFunction"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TotalTimeOfFunction", "=", 
      RowBox[{
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          StyleBox[
           RowBox[{
           "We", " ", "read", " ", "in", " ", "optional", " ", "data", " ", 
            "to", " ", "global", " ", "varibles"}],
           FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Flocci$Checkpoint$FileName", "=", 
           RowBox[{"OptionValue", "[", "Checkpoint", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$Checkpoint$CheckpointUpFreq", "=", 
           RowBox[{"OptionValue", "[", "CheckpointUpFreq", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$Checkpoint$StartFromCheckpoint", "=", 
           RowBox[{"OptionValue", "[", "StartFromCheckpoint", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$ProjectionMatrixList", "=", 
           RowBox[{"OptionValue", "[", "ProjectionMatrixList", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$DeleteStoredDataCounter", "=", 
           RowBox[{"OptionValue", "[", "ClearDataFreq", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$SimpleIdealConstraint", "=", 
           RowBox[{"OptionValue", "[", "SimpleIdealConstraint", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$DetailedProgressData", "=", 
           RowBox[{"OptionValue", "[", "DetailedProgressData", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Flocci$PerformExtendingChecks", "=", 
           RowBox[{"OptionValue", "[", "ExtendedKappaCheck", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "find", " ", "the", " ", "rank", " ", "of", " ", "the",
              " ", "algebra"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Total", "[", 
            RowBox[{"Flocci$Rank", "[", "userg", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "First", " ", "we", " ", "partition", " ", "user\[CapitalPhi]", 
             " ", "if", " ", "entered", " ", "in", " ", "the", " ", "flat", 
             " ", "version"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"user\[CapitalPhi]NF", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"user\[CapitalPhi]", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], "===",
               "List"}], ",", "user\[CapitalPhi]", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"TakeList", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flocci$Rank", "[", "userg", "]"}]}], "]"}], "&"}], 
               ",", "user\[CapitalPhi]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "sort", " ", "the", " ", "user", " ", "algebra"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ord", "=", 
           RowBox[{"userg", "//", "Ordering"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"g", "=", 
           RowBox[{
           "userg", "\[LeftDoubleBracket]", "ord", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalPhi]t", "=", 
           RowBox[{"user\[CapitalPhi]NF", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "ord"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{
              RowBox[{"If", " ", "we", " ", "just", " ", "have", " ", "U", 
               RowBox[{
                RowBox[{"(", "1", ")"}], "'"}], "s", " ", "then", " ", "we", 
               " ", "change", " ", "the", " ", "input", " ", "algebra", " ", 
               "to", " ", "su", 
               RowBox[{"(", "2", ")"}], " ", "x", " ", "u", 
               RowBox[{"(", "1", ")"}]}], "..."}], ",", " ", 
             RowBox[{
              RowBox[{"and", " ", "add", " ", 
               RowBox[{"(", 
                RowBox[{"1", ",", "0", ",", "..."}], ")"}], " ", "to", " ", 
               "the", " ", 
               RowBox[{"hws", ".", "\[IndentingNewLine]", "This"}], " ", 
               "allows", " ", "us", " ", "to", " ", "run", " ", "our", " ", 
               "program", " ", "without", " ", "major", " ", 
               RowBox[{"modification", ".", " ", "In"}], " ", "the", " ", 
               "end", " ", "we", " ", "just", " ", "extract", " ", "those", 
               " ", "algebras", " ", "which", " ", "have", " ", "the", " ", 
               "trivial", " ", "su", 
               RowBox[{"(", "2", ")"}]}], "\[Rule]", 
              RowBox[{"su", 
               RowBox[{"(", "2", ")"}], " ", 
               RowBox[{"embedding", "."}]}]}]}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"U1sOnlyBool", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{"g", ",", "U1"}], "]"}], "\[Equal]", 
             RowBox[{"Length", "[", "g", "]"}]}], ",", "\[IndentingNewLine]", 
            
            RowBox[{
             RowBox[{
             "Print", "[", 
              "\"\<The inserted algebra only contains u(1)'s. A trick is made \
by replacing the algebra with su(2) x u(1)x....\>\"", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"U1sOnlyBool", "=", "True"}], ";", "\[IndentingNewLine]", 
             RowBox[{"g", "=", 
              RowBox[{"Prepend", "[", 
               RowBox[{"g", ",", "A1"}], "]"}]}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"\[CapitalPhi]t", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Prepend", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}], "&"}], ",", 
                  "\[CapitalPhi]t"}], "]"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}], ",", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "g", "]"}], "-", "1"}]}], "]"}]}], 
                 "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{"We", " ", "set", " ", "up", " ", "the", " ", "state"}], 
             ",", " ", 
             RowBox[{
             "also", " ", "the", " ", "old", " ", "state", " ", "is", " ", 
              "clared"}]}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Flocci$InitializeInputData", "[", 
           RowBox[{"g", ",", "\[CapitalPhi]t"}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{"We", " ", "upload", " ", "checkpointed", " ", "data"}], 
             ",", " ", 
             RowBox[{"if", " ", "need", " ", "be"}]}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"Flocci$Checkpoint$FileName", "===", "False"}], 
               ")"}]}], " ", "&&", "Flocci$Checkpoint$StartFromCheckpoint", 
             " ", "&&", 
             RowBox[{"FileExistsQ", "[", 
              RowBox[{"Flocci$Checkpoint$FileName", "<>", "\"\<.mx\>\""}], 
              "]"}]}], ",", " ", "Flocci$Checkpoint$Restart"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{"We", " ", "then", " ", "run", " ", "the", " ", "code"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Flocci$GenerateGraph", "[", 
           RowBox[{"g", ",", "\[CapitalPhi]t"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
            "We", " ", "extract", " ", "the", " ", "right", " ", "algebra", 
             " ", "and", " ", "edge", " ", "list"}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"algList", "=", 
           RowBox[{"If", "[", 
            RowBox[{
            "Flocci$User$U1sPresentBool", ",", "Flocci$RRNode$AlgebraList", 
             ",", "Flocci$SSNode$AlgebraList"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"edList", "=", 
           RowBox[{"If", "[", 
            RowBox[{
            "Flocci$User$U1sPresentBool", ",", "Flocci$RREdge$EdgeList", ",", 
             "Flocci$SSEdge$EdgeList"}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"(*", 
           StyleBox[
            RowBox[{
             RowBox[{"If", " ", "U1sOnlyBool", " ", "is", " ", "true"}], ",", 
             " ", 
             RowBox[{
             "then", " ", "we", " ", "need", " ", "to", " ", "modify", " ", 
              "these"}], ",", " ", 
             RowBox[{"to", " ", "remove", " ", "the", " ", "su", 
              RowBox[{"(", "2", ")"}], " ", "part", " ", "we", " ", 
              RowBox[{"added", "."}]}]}],
            FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"U1sOnlyBool", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             StyleBox[
              RowBox[{
              "We", " ", "extract", " ", "the", " ", "positions", " ", "with",
                " ", "a", " ", "trivial", " ", "su", 
               RowBox[{"(", "2", ")"}], " ", "embedding"}],
              FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"testCond", "[", 
               RowBox[{"{", 
                RowBox[{
                "g1_", ",", "\[Beta]t_", ",", "\[CapitalLambda]\[Alpha]t_"}], 
                "}"}], "]"}], ":=", 
              RowBox[{
               RowBox[{
                RowBox[{
                "g", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", "A1"}], "&&", 
               RowBox[{
                RowBox[{"\[CapitalLambda]\[Alpha]t", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "1"}], " ", "&&", " ", 
               RowBox[{"AllTrue", "[", 
                RowBox[{
                 RowBox[{"Delete", "[", 
                  RowBox[{
                   RowBox[{
                   "\[CapitalLambda]\[Alpha]t", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "1"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "&&", 
               RowBox[{"AllTrue", "[", 
                RowBox[{
                 RowBox[{"Delete", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Transpose", "[", "\[CapitalLambda]\[Alpha]t", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "1"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "&&", 
               RowBox[{
                RowBox[{"\[Beta]t", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "1"}], " ", "&&", " ", 
               RowBox[{"AllTrue", "[", 
                RowBox[{
                 RowBox[{"Delete", "[", 
                  RowBox[{
                   RowBox[{"\[Beta]t", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "1"}],
                   "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "&&", 
               RowBox[{"AllTrue", "[", 
                RowBox[{
                 RowBox[{"Delete", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", "\[Beta]t", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"-", "1"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pos", "=", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"algList", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", "testCond", ")"}]}], ",", 
                 RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"algList", "=", 
              RowBox[{
              "algList", "\[LeftDoubleBracket]", "pos", 
               "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
               "We", " ", "get", " ", "the", " ", "relevent", " ", "infor", 
                " ", "from", " ", "algList"}],
               FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"adjust", "[", 
               RowBox[{"{", 
                RowBox[{
                "g1_", ",", "\[Beta]t_", ",", "\[CapitalLambda]\[Alpha]t_"}], 
                "}"}], "]"}], ":=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"g1", ",", "1"}], "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Delete", "[", 
                    RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"\[Beta]t", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Delete", "[", 
                    RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"\[CapitalLambda]\[Alpha]t", ",", "1"}], "]"}]}], 
                 "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"algList", "=", 
              RowBox[{"Map", "[", 
               RowBox[{"adjust", ",", "algList"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              StyleBox[
               RowBox[{
               "We", " ", "adjust", " ", "the", " ", "edge", " ", "list"}],
               FontColor->RGBColor[0.6, 0.4, 0.2]], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"edList", "=", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{"edList", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "&&", 
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}], "&"}]}], "]"}], "/.", 
               RowBox[{"Thread", "[", 
                RowBox[{"pos", "\[Rule]", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "[", "pos", "]"}], "]"}]}], "]"}]}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], ")"}], 
        "\[IndentingNewLine]", "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "print", " ", "the", " ", "relevent", " ", "information"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"FlocciOutput", "=", 
      RowBox[{"{", 
       RowBox[{
       "userg", ",", "user\[CapitalPhi]", ",", "algList", ",", "edList", ",", 
        "TotalTimeOfFunction", ",", "Flocci$TimingPrint", ",", 
        RowBox[{"DateString", "[", 
         RowBox[{"CurrentDate", "[", "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Evaluation took a time of: \>\"", ",", "TotalTimeOfFunction", ",", 
       "\"\< seconds\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     "FlocciOutput"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8746808027729692`*^9, 3.874680828593582*^9}, {
   3.874680870895767*^9, 3.8746809229742393`*^9}, {3.8746809745484953`*^9, 
   3.8746813227777452`*^9}, {3.87468135523941*^9, 3.87468136319977*^9}, {
   3.8746814519135113`*^9, 3.874681551314128*^9}, {3.874731597071271*^9, 
   3.8747316090436296`*^9}, {3.874731838457361*^9, 3.8747318388105803`*^9}, {
   3.874731888864944*^9, 3.874731936202607*^9}, {3.87473206539935*^9, 
   3.8747320933062468`*^9}, {3.874732141865203*^9, 3.874732149624187*^9}, {
   3.874732245885281*^9, 3.874732246766514*^9}, {3.874732872831147*^9, 
   3.874732873023429*^9}, {3.8749951708952923`*^9, 3.874995188192712*^9}, 
   3.875021609765448*^9, {3.875249759063842*^9, 3.875249761664205*^9}, 
   3.8756103796248913`*^9, 3.875610420516444*^9, 3.875610561327115*^9, {
   3.8756107459857817`*^9, 3.8756107480185623`*^9}, {3.87658237583543*^9, 
   3.8765824229515963`*^9}, {3.87707774874397*^9, 3.8770777487472763`*^9}, 
   3.87715525079775*^9, {3.87715558670889*^9, 3.877155615989068*^9}, {
   3.877155668856186*^9, 3.8771556859500427`*^9}, 3.877415285362015*^9, {
   3.8774163747220383`*^9, 3.877416375713182*^9}, 3.8774165179565153`*^9, 
   3.8774166487581053`*^9, 3.877417743307993*^9, {3.877418012390115*^9, 
   3.8774180156303377`*^9}, {3.877767659054254*^9, 3.877767692874763*^9}, {
   3.877767850579564*^9, 3.877767885385263*^9}, {3.8777679559760427`*^9, 
   3.8777680029526243`*^9}, {3.877768287758293*^9, 3.8777682945877037`*^9}, {
   3.8777684188936787`*^9, 3.877768419115137*^9}, {3.877768673584981*^9, 
   3.877768701689981*^9}, {3.8777687415080013`*^9, 3.877768759986561*^9}, {
   3.8777689304805393`*^9, 3.877768965923737*^9}, {3.878054554236246*^9, 
   3.8780546598619223`*^9}, {3.8780546983987513`*^9, 3.878054725281617*^9}, {
   3.878055169796631*^9, 3.87805518681588*^9}, {3.87932674778469*^9, 
   3.879326977876657*^9}, {3.879833363675617*^9, 3.879833398636504*^9}, {
   3.8798334328293867`*^9, 3.8798335782827682`*^9}, {3.879833628300755*^9, 
   3.879833692800187*^9}, {3.8798338980323772`*^9, 3.879834023399168*^9}, {
   3.879835354475081*^9, 3.879835465486766*^9}, {3.879844611117876*^9, 
   3.8798446562998962`*^9}, {3.879844720668342*^9, 3.8798447457751923`*^9}, {
   3.879863383665161*^9, 3.87986342991269*^9}, {3.879948481326974*^9, 
   3.8799485258599653`*^9}, {3.879948584377761*^9, 3.8799486220720367`*^9}, {
   3.879948827325314*^9, 3.879948849953823*^9}, {3.8799550482651987`*^9, 
   3.8799550875320177`*^9}, {3.879955168046941*^9, 3.87995517841689*^9}, {
   3.8907306637567253`*^9, 3.890730673556958*^9}, {3.890804317849098*^9, 
   3.890804338035946*^9}, {3.890804428889255*^9, 3.8908044292007437`*^9}, {
   3.890804483818351*^9, 3.8908044841722183`*^9}, {3.896175640054763*^9, 
   3.896175659936372*^9}, {3.896453510354409*^9, 3.8964535212267437`*^9}, {
   3.896880162724106*^9, 
   3.896880179237516*^9}},ExpressionUUID->"6db989f0-8377-4ae5-b9da-\
748f85effb7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$SetDescription", "[", 
   RowBox[{"\"\<Flocci$CombinatoricsFactor\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Meta\>\"", ",", 
      "\"\<g) A reductive Lie algebra\nnhws) A list of highest weights\>\"", 
      ",", "\"\<An Integer\>\"", ",", 
      "\"\<Gives a rough measure of how difficult the U(1) part of the code \
will be.\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flocci$CombinatoricsFactor", "[", 
    RowBox[{"g_", ",", "hws_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "hwFlat", ",", "WS", ",", "rank", ",", "U1pos", ",", "SSpos", ",", 
       "gathered", ",", "equa", ",", "sizes"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hwFlat", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"Flatten", ",", "hws"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"WS", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flocci$WeightSystemFromFlatU1", "[", 
             RowBox[{"g", ",", "#"}], "]"}], "&"}], ",", "hwFlat"}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rank", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Flocci$Rank", "[", 
             RowBox[{
             "g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}]}], "}"}]}], "]"}], "//", "Flatten"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U1pos", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"rank", ",", "U1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SSpos", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "rank", "]"}], "]"}], ",", "U1pos"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gathered", "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{"WS", ",", 
         RowBox[{
          RowBox[{
          "#", "\[LeftDoubleBracket]", "SSpos", "\[RightDoubleBracket]"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"equa", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Split", "[", 
           RowBox[{"Sort", "[", "#", "]"}], "]"}], "&"}], ",", "gathered"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sizes", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", "equa", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Times", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"Factorial", "[", 
           RowBox[{"Total", "[", "s", "]"}], "]"}], 
          RowBox[{"Times", "@@", 
           RowBox[{"Factorial", "[", "s", "]"}]}]], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "sizes"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.880212990597665*^9, 3.880213048337903*^9}, {
  3.880213084133813*^9, 3.8802131021639757`*^9}, {3.8802131523860903`*^9, 
  3.880213262269149*^9}, {3.880213293855448*^9, 3.880213314215501*^9}, {
  3.8802133517623043`*^9, 3.880213533474092*^9}, {3.880213566694561*^9, 
  3.880213702181735*^9}, {3.880214007214795*^9, 3.880214067882514*^9}},
 CellLabel->
  "In[781]:=",ExpressionUUID->"0e7cae26-54d7-4d70-adf1-1444f55646eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Flocci$FunctionListAdd", "[", 
   RowBox[{"{", "\"\<ScanExtensions\>\"", "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanExtensions", "::", "tag"}], "=", "\"\<User\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanExtensions", "::", "input"}], "=", 
   "\"\<g: A reductive Lie algebra e.g. {A2,A1,U1}.\\nmaxIrrepDim: An integer \
corresponding to the maximal dimension of a single irrep. If it is given as a \
list it is interpreted as the maximal dimension of irreps restricted to the \
corresponding part of the semi-simple algebra.\\nmaxIrrepNumber: An integer \
specifying the maximal number of additional irreps.\\nU1Charges: A list of \
U(1) charges that should be considered of the form {-1,0,1}. For more than \
one U(1) this should be of the form {{-1,0,1},{0,2,4},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanExtensions", "::", "output"}], "=", 
   "\"\<A list containing possible anomaly free extensions for the given \
algebra in the format {{{algebra},{irrep1,irrep2,...}},...}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScanExtensions", "::", "description"}], "=", 
    "\"\<Generates possible anomaly free extensions to a given model. This \
can be used as an input for a scan.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScanExtensions", "[", 
   RowBox[{
   "g_", ",", "maxIrrepDim_", ",", "maxIrrepNumber_", ",", "U1Charges_List"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "BaseIrreps", ",", "SSalgebra", ",", "u1positions", ",", "extensionList",
       ",", "currIrrep", ",", "rankList", ",", "dimList", ",", "SSirrep", ",",
       "anomFreeSSirrep", ",", "u1Values", ",", "u1ChargesProcessed", ",", 
      "algebra", ",", "u1Assignments", ",", "dimSorted"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     StyleBox[
      RowBox[{"Check", " ", "if", " ", "input", " ", "is", " ", "sensible"}],
      FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"maxIrrepNumber", "<", "1"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "Initialize", " ", "list", " ", "in", " ", "which", " ", "we", " ", 
        "collect", " ", "all", " ", "anomaly", " ", "free", " ", 
        "extensions"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"extensionList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"algebra", "=", 
      RowBox[{"Sort", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
       "We", " ", "first", " ", "find", " ", "the", " ", "u1", " ", 
        "positions"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"u1positions", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"algebra", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Flocci$TypeU1Q", "[", "#", "]"}], "&"}], ")"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u1ChargesProcessed", "=", "U1Charges"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "u1positions", "]"}], ">", "1"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", 
          RowBox[{"U1Charges", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "U1Charges", "]"}], "==", 
              RowBox[{"Length", "[", "u1positions", "]"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Please specify U(1) charges for all U(1) factors.\>\"", 
             "]"}], ";", 
            RowBox[{"Return", "[", 
             RowBox[{"{", "}"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"u1ChargesProcessed", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"U1Charges", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "u1positions", "]"}]}], "}"}]}], 
           "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "u1positions", "]"}], "==", "1"}], "&&", 
        RowBox[{"!", 
         RowBox[{"ListQ", "[", 
          RowBox[{"U1Charges", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"u1ChargesProcessed", "=", 
        RowBox[{"{", "U1Charges", "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u1Values", "=", 
      RowBox[{"Tuples", "[", "u1ChargesProcessed", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{"We", " ", "get", " ", "the", " ", "semi"}], "-", 
        RowBox[{"simple", " ", "part"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"SSalgebra", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"algebra", ",", "u1positions"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "Find", " ", "list", " ", "of", " ", "irreps", " ", "for", " ", 
         "semi"}], "-", 
        RowBox[{"simple", " ", "part"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", "maxIrrepDim", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "maxIrrepDim", "]"}], "!=", 
          RowBox[{"Length", "[", "SSalgebra", "]"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Length of maximal dimensions list has to agree with the \
number simple factors in the algebra.\>\"", "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dimSorted", "=", 
           RowBox[{"maxIrrepDim", "[", 
            RowBox[{"[", 
             RowBox[{"Ordering", "[", 
              RowBox[{"Delete", "[", 
               RowBox[{"g", ",", 
                RowBox[{"Position", "[", 
                 RowBox[{"g", ",", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flocci$TypeU1Q", "[", "#", "]"}], "&"}], 
                    ")"}]}]}], "]"}]}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"BaseIrreps", "=", 
           RowBox[{"Flatten", "/@", 
            RowBox[{"Tuples", "[", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "[", 
                 RowBox[{
                  RowBox[{"{", "#1", "}"}], ",", "#2", ",", "#2"}], "]"}], 
                "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"SSalgebra", ",", "dimSorted"}], "}"}]}], "]"}], 
             "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"BaseIrreps", "=", 
        RowBox[{"Flocci$IrrepsLessThenOrEqualDim", "[", 
         RowBox[{"SSalgebra", ",", "maxIrrepDim", ",", "maxIrrepDim"}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      StyleBox[
       RowBox[{
        RowBox[{
        "One", " ", "irrep", " ", "can", " ", "only", " ", "be", " ", "non"}],
         "-", 
        RowBox[{"anomalous", " ", "if", " ", "all", " ", "U", 
         RowBox[{"(", "1", ")"}]}], "-", 
        RowBox[{"charges", " ", "are", " ", "0"}]}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"currIrrep", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"irrep", ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", "u1positions", "]"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Flocci$AnomalyFreeCheck", "[", 
           RowBox[{"algebra", ",", 
            RowBox[{"{", "currIrrep", "}"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"extensionList", ",", 
            RowBox[{"{", 
             RowBox[{"algebra", ",", 
              RowBox[{"{", "currIrrep", "}"}]}], "}"}]}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"irrep", ",", "BaseIrreps"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      StyleBox[
       RowBox[{"Add", " ", "more", " ", "irreps"}],
       FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[
        RowBox[{"Do", " ", "SS", " ", "part", " ", "first"}],
        FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"SSirrep", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Map", "[", 
             RowBox[{"Sort", ",", 
              RowBox[{"Tuples", "[", 
               RowBox[{"BaseIrreps", ",", "numIrrep"}], "]"}]}], "]"}], "]"}],
            ",", 
           RowBox[{
            RowBox[{"Flocci$AnomalyFreeCheck", "[", 
             RowBox[{"SSalgebra", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         StyleBox[
          RowBox[{
           RowBox[{"Add", " ", "U", 
            RowBox[{"(", "1", ")"}], " ", "charges", " ", "for", " ", "all", 
            " ", "non"}], "-", 
           RowBox[{"anomalous", " ", "SS", " ", "representations"}]}],
          FontColor->RGBColor[1, 0.5, 0]], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "u1positions", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"u1Assignments", "=", 
            RowBox[{"Tuples", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"u1Values", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "numIrrep"}], "}"}]}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"currIrrep", "=", 
                 RowBox[{"MapThread", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"irr", ",", "u1ch"}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"Flocci$AnomalyFreeCheck", "[", 
                   RowBox[{"algebra", ",", "currIrrep"}], "]"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"extensionList", ",", 
                    RowBox[{"{", 
                    RowBox[{"algebra", ",", "currIrrep"}], "}"}]}], "]"}]}], 
                 "]"}]}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"u1ch", ",", "u1Assignments"}], "}"}]}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"irr", ",", "SSirrep"}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"extensionList", ",", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "SSalgebra", "}"}], ",", "#"}], "}"}], "&"}], 
              ",", "SSirrep"}], "]"}]}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"numIrrep", ",", "2", ",", "maxIrrepNumber"}], "}"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Sort", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
         "extensionList"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzltIkwEYxvHhhOWhsE1Xxkgji13JapYl6habB1guWoKlOGJs7MKZS+eI
bdVsYR7GqrWVTikqZubFNJVki2h0EF0lH8LCLSStsJDhYQ3J2aTv+S5efjd/
eN4DiiaZKolGo/HIg9tWz5TzV+SUfTQRgEp1PgHZ9LVZ+D3n3SLsvTOyBHWf
P6xCg7AkCglpfPk+Otv4CuS93MV8QOpj1HBhpsRXAOWt5iLYTKSVwWtj7RJ4
Nqyoo7q5J1r4LfuVHkqLxFfgxtAFE9Swy29AZbDNAbkhlQvaZi67YTHb7oUG
+f6vMO3cKOXk/JkFyOHwf1O9V/8HPv34KEbtdCzF4TFZ/jb03DYxekjDnJNM
2H/PUQhXxDEB1ITEZfBtY6AKHg1IqmFnynnKkL/2EtQZZpvgp/WSVtioSr4K
T9y82w7Tyw1OOF779yF8nNz7DO75+Ubgwv+JLcrJI4YK6B9m6GC9aKcR7jW2
XYeH3X23YGWetQPamqddMMey5obifcERGNZujsEFvXcCZs8dD8JN5otFaCo8
vQwzG0rXqV7piEL+v4w4VCWmKYmLNHof6aAskg5bilN2Q5YtQKkZ8LNh0pCY
Dw9VWUQwryVXCu2VWXWQ21OqgOzuHWo4UMGi1BqzOqHQE7XCbq5sCtIb1AR8
35X6BQqqI/Nw5vnqD+izODZgZJCf0U8ac9azoHyiiwfV5oMFcOt1qhCarbki
+B82IL/m
  "],
 CellLabel->
  "In[783]:=",ExpressionUUID->"00e24f89-858b-4cd6-8fd6-9dec9f23b9ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SM Particles", "Section",
 CellChangeTimes->{{3.868440005127541*^9, 3.868440029671872*^9}, {
  3.877080133258497*^9, 3.8770801513789873`*^9}, {3.8919487333001537`*^9, 
  3.891948738616078*^9}},ExpressionUUID->"8eccf5b0-c0e6-4865-afa2-\
d1ab8a80725f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<Q\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<U\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "4"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<D\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", "2", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<L\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "3"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<E\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "6", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sm", "[", "\"\<N\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868514259511359*^9, 3.868514337576577*^9}, {
  3.869203548418005*^9, 3.86920354908403*^9}},
 CellLabel->
  "In[789]:=",ExpressionUUID->"51493daf-1df9-454d-935f-c1eb6397a7d8"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
CommonDefaultFormatTypes->{"Output"->TraditionalForm},
Magnification:>1. Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 222, 3, 97, "Title",ExpressionUUID->"34c9f9d6-9bb6-4bb7-9a72-86a97261ffd3"],
Cell[805, 27, 254, 4, 33, "Subtitle",ExpressionUUID->"812d105f-96bb-4733-8c7b-87bdf50ae786"],
Cell[1062, 33, 438, 7, 41, "Input",ExpressionUUID->"5295c5ae-18e4-4ab7-a1e5-22316e4759ed",
 InitializationCell->True],
Cell[1503, 42, 415, 10, 41, "Input",ExpressionUUID->"b0780866-b7b4-4a47-903a-818b7cc6339c"],
Cell[CellGroupData[{
Cell[1943, 56, 394, 9, 41, "Input",ExpressionUUID->"6addd6f7-ea3a-4053-a02a-d80c3a2a03bb",
 InitializationCell->True],
Cell[2340, 67, 2084, 32, 56, "Print",ExpressionUUID->"b84124fa-9bfe-47b6-9ab1-7dd8306b04ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4461, 104, 167, 3, 69, "Section",ExpressionUUID->"bed908e3-49fc-4c2e-863a-c5eb73a70441"],
Cell[4631, 109, 5686, 142, 420, "Input",ExpressionUUID->"6519a534-132e-4e14-9fb0-78cc543eb868",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10342, 255, 10685, 252, 588, "Input",ExpressionUUID->"0d066eef-d921-4a38-bf7d-228472d8fdfe"],
Cell[21030, 509, 15824, 402, 478, "Output",ExpressionUUID->"e6e43196-ccbc-4daa-bfd5-18363d275943"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36891, 916, 11717, 266, 588, "Input",ExpressionUUID->"70f398e1-4fd0-4cb5-9e00-9e0c972a580a"],
Cell[48611, 1184, 167929, 3531, 25186, "Output",ExpressionUUID->"2f4b12bc-be45-487d-a3e2-8d40c19eff65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216589, 4721, 253, 4, 69, "Section",ExpressionUUID->"ae452f62-6dda-408b-a4b2-d2b33eadb694"],
Cell[216845, 4727, 178, 3, 34, "Text",ExpressionUUID->"b661bc1a-adaf-4baf-9fd0-5b16687c04bb"],
Cell[217026, 4732, 4062, 96, 273, "Input",ExpressionUUID->"4e89d3ac-5d6c-4b17-b410-06921b262692",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[221125, 4833, 172, 3, 55, "Section",ExpressionUUID->"e308b953-cb93-4f8a-8b10-3a2e625676b6"],
Cell[CellGroupData[{
Cell[221322, 4840, 167, 3, 34, "Subsection",ExpressionUUID->"fc6ff6fe-d668-4c91-96f8-b903ba7a69b7"],
Cell[221492, 4845, 2870, 70, 126, "Input",ExpressionUUID->"f8720a67-44d7-4fca-993b-f14561d6d1dc",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[224399, 4920, 176, 3, 34, "Subsection",ExpressionUUID->"bdf71aa4-700b-4622-9c0f-15adc9e4010b"],
Cell[224578, 4925, 2215, 54, 189, "Input",ExpressionUUID->"50b2943a-9dbf-402b-b8ba-7bcd17e9d78a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[226830, 4984, 165, 3, 34, "Subsection",ExpressionUUID->"10658c12-1018-488c-b6cd-1b645dd8deec"],
Cell[226998, 4989, 9886, 260, 1008, "Input",ExpressionUUID->"43fad517-0ae1-43b1-8241-f6dff2d34571",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[236921, 5254, 174, 3, 34, "Subsection",ExpressionUUID->"0b3cf066-6b9a-4807-a160-e2d6b9103bc9"],
Cell[CellGroupData[{
Cell[237120, 5261, 164, 3, 33, "Subsubsection",ExpressionUUID->"b3039c9e-0992-481c-8b83-97d2ca305a1d"],
Cell[237287, 5266, 16328, 399, 714, "Input",ExpressionUUID->"735e3892-48a2-4c54-a337-86cb57f08f2a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[253652, 5670, 167, 3, 33, "Subsubsection",ExpressionUUID->"adc19ba7-a800-4824-8bd7-c1d5bf612e6c"],
Cell[253822, 5675, 14583, 367, 748, "Input",ExpressionUUID->"dbc40e1c-d026-4583-b3dd-37283d441f80",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[268454, 6048, 220, 4, 34, "Subsection",ExpressionUUID->"9ed6d3e1-6e17-4db3-b288-85d77712d764"],
Cell[268677, 6054, 271, 6, 34, "Text",ExpressionUUID->"e9c212e2-3003-4f14-95d3-652f0ee8b256"],
Cell[268951, 6062, 58369, 1449, 2399, "Input",ExpressionUUID->"8d1ff178-008c-4cb4-9fbb-894fd25af18c",
 InitializationCell->True],
Cell[327323, 7513, 3219, 83, 336, "Input",ExpressionUUID->"0d913874-6d0e-40f5-917a-3b397b73b633",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[330579, 7601, 162, 3, 34, "Subsection",ExpressionUUID->"816f5786-a86f-4b77-97a0-6a167966c706"],
Cell[330744, 7606, 1536, 38, 147, "Input",ExpressionUUID->"ef2c6c45-f262-43af-9085-405b2cdb8e5b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[332317, 7649, 228, 3, 34, "Subsection",ExpressionUUID->"5fd41673-cd8f-467c-b315-ec7ed1f97361"],
Cell[CellGroupData[{
Cell[332570, 7656, 226, 4, 33, "Subsubsection",ExpressionUUID->"750325f1-cd9a-4ba5-a1bd-975c2e098c16"],
Cell[332799, 7662, 7326, 179, 861, "Input",ExpressionUUID->"58e6d47d-dce2-4339-870d-a6d2be059535",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[340162, 7846, 171, 3, 33, "Subsubsection",ExpressionUUID->"42b6e11d-266d-4b77-951d-ad83af23b59e"],
Cell[340336, 7851, 7900, 184, 672, "Input",ExpressionUUID->"1b266a41-5821-4a6c-b3e1-6abaa9fb642e",
 InitializationCell->True],
Cell[348239, 8037, 12056, 290, 913, "Input",ExpressionUUID->"aed0d7d6-b999-4bcf-b180-0f419afc3e52",
 InitializationCell->True],
Cell[360298, 8329, 11609, 282, 913, "Input",ExpressionUUID->"0a2d5fd7-b447-4f93-bbd9-326d93aa355b",
 InitializationCell->True],
Cell[371910, 8613, 10815, 267, 850, "Input",ExpressionUUID->"cf921a80-9570-4639-936a-85655512dcad",
 InitializationCell->True],
Cell[382728, 8882, 2824, 77, 189, "Input",ExpressionUUID->"3ed33b5e-1204-47e3-874b-db25a2914070",
 InitializationCell->True],
Cell[385555, 8961, 7120, 198, 273, "Input",ExpressionUUID->"56c80f2e-e4bd-4ebb-99ec-e8535049626b",
 InitializationCell->True],
Cell[392678, 9161, 15776, 456, 399, "Input",ExpressionUUID->"29957c1e-0566-46fa-a3b5-2dfbf49452ba",
 InitializationCell->True],
Cell[408457, 9619, 44809, 1326, 840, "Input",ExpressionUUID->"0195f5a5-e941-4c88-a92d-1e9d831383f4",
 InitializationCell->True],
Cell[453269, 10947, 8475, 258, 252, "Input",ExpressionUUID->"60974069-4b09-4e4d-ad5d-c32fc29a954d",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[461793, 11211, 155, 3, 34, "Subsection",ExpressionUUID->"51740b96-0f76-4148-8650-4ce674618d84"],
Cell[461951, 11216, 880, 22, 63, "Input",ExpressionUUID->"17331b5f-daba-4eae-a69c-dad9fe2d60c8",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[462868, 11243, 162, 3, 34, "Subsection",ExpressionUUID->"19b38509-f36d-4cd4-9517-51c32b953042"],
Cell[463033, 11248, 1777, 45, 200, "Input",ExpressionUUID->"4b69c260-beaf-4606-9bd3-24d6757c9d44",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[464847, 11298, 162, 3, 34, "Subsection",ExpressionUUID->"642d4566-4e2d-46c5-951e-831bc711e192"],
Cell[465012, 11303, 38936, 893, 2583, "Input",ExpressionUUID->"11ccc61c-45d5-4257-9dc3-47e0e73aefbc",
 InitializationCell->True],
Cell[503951, 12198, 3877, 97, 315, "Input",ExpressionUUID->"a2827852-2cfa-4900-b947-d7065169ba6e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[507865, 12300, 172, 3, 34, "Subsection",ExpressionUUID->"0a46cd34-8643-4ce4-84f9-f41814186f3f"],
Cell[508040, 12305, 1914, 49, 126, "Input",ExpressionUUID->"89b6241c-0273-4f46-95e4-f63321cc4697",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[509991, 12359, 220, 4, 34, "Subsection",ExpressionUUID->"a4d244f7-3d42-44b8-b5c4-d771388eec29"],
Cell[CellGroupData[{
Cell[510236, 12367, 7858, 196, 609, "Input",ExpressionUUID->"10ce7351-a611-4e60-8f6a-1518ea66ba7f",
 InitializationCell->True],
Cell[518097, 12565, 4036, 67, 70, "Output",ExpressionUUID->"bf28a8c9-baa2-4faf-a4e4-f51f405d74d6"],
Cell[522136, 12634, 3594, 53, 70, "Output",ExpressionUUID->"78c4f2be-4546-492e-b31a-d60c100d6999"]
}, Open  ]],
Cell[525745, 12690, 9063, 189, 672, "Input",ExpressionUUID->"9435006b-1977-45a6-9bf2-afd388029263",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[534845, 12884, 163, 3, 34, "Subsection",ExpressionUUID->"a488a26d-3142-4924-94fd-5b3bca2d6133"],
Cell[535011, 12889, 1741, 43, 210, "Input",ExpressionUUID->"9fd8f4d1-decd-4489-9052-cefa0bd16290",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[536789, 12937, 217, 4, 34, "Subsection",ExpressionUUID->"ba62bfae-2cf3-4560-8f1f-000c3ad7bf2a"],
Cell[CellGroupData[{
Cell[537031, 12945, 8418, 213, 508, "Input",ExpressionUUID->"289ebd06-f985-4715-aefc-0fceff9b05fc",
 InitializationCell->True],
Cell[545452, 13160, 1383, 22, 70, "Output",ExpressionUUID->"0441d07d-855a-4eed-8fed-a784b8f77d25"]
}, Open  ]],
Cell[546850, 13185, 3111, 78, 189, "Input",ExpressionUUID->"e459d4a7-6398-4525-ba02-bcc6312e6b64",
 InitializationCell->True],
Cell[549964, 13265, 5113, 128, 420, "Input",ExpressionUUID->"b85c5ba1-de86-41ab-bc8a-271917eae489",
 InitializationCell->True],
Cell[555080, 13395, 8047, 195, 399, "Input",ExpressionUUID->"d823f0d7-ead7-4f35-864a-d5964e4b67cc",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[563164, 13595, 291, 4, 34, "Subsection",ExpressionUUID->"b312adef-69ae-4b79-9497-2d8e7b1470ff"],
Cell[563458, 13601, 5083, 124, 441, "Input",ExpressionUUID->"afa216e2-9236-48ca-b520-38ad9d3bee29",
 InitializationCell->True],
Cell[568544, 13727, 6355, 148, 462, "Input",ExpressionUUID->"87426ad7-0ebc-476f-9f3e-36515349cd08",
 InitializationCell->True],
Cell[574902, 13877, 8521, 197, 420, "Input",ExpressionUUID->"cea29065-2fba-4a82-abf9-32911b40c898",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[583460, 14079, 286, 4, 34, "Subsection",ExpressionUUID->"e1fb745d-bc18-491e-93f3-c1fe9b0b1060"],
Cell[583749, 14085, 321, 6, 34, "Text",ExpressionUUID->"dd688d9f-13b2-440b-a2b5-253b3f94c460"],
Cell[584073, 14093, 6169, 148, 460, "Input",ExpressionUUID->"9a58fb81-9d32-41c0-bfa8-9e4a667bba59",
 InitializationCell->True],
Cell[590245, 14243, 18304, 419, 879, "Input",ExpressionUUID->"f57dc4b4-a0df-43b3-b218-5348457e1997",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[608574, 14666, 24722, 579, 1399, "Input",ExpressionUUID->"1235ce15-1111-499a-8661-95fada837681",
 InitializationCell->True],
Cell[633299, 15247, 12745, 282, 70, "Output",ExpressionUUID->"1d1b9cf6-4883-4616-a63d-77350699c4cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646081, 15534, 175, 3, 41, "Input",ExpressionUUID->"a4027ea3-9fb9-4ae0-a2ab-f37932a90c66"],
Cell[646259, 15539, 212, 4, 41, "Output",ExpressionUUID->"d845f260-0cbd-41e0-8c43-08ef88516b01"]
}, Open  ]],
Cell[646486, 15546, 180, 3, 34, "Text",ExpressionUUID->"ad6f9892-7993-4398-92f7-a6e70b412dc2"],
Cell[646669, 15551, 36169, 853, 2187, "Input",ExpressionUUID->"0c2c20cc-9cc5-4c16-a4e8-b636b0cf28e5",
 InitializationCell->True],
Cell[682841, 16406, 2869, 63, 189, "Input",ExpressionUUID->"5e04d280-302e-49d1-b5fa-1e16baad2dec",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[685759, 16475, 156, 3, 55, "Section",ExpressionUUID->"f442377a-b8e6-4302-8c29-cad2a20ffb06"],
Cell[CellGroupData[{
Cell[685940, 16482, 167, 3, 34, "Subsection",ExpressionUUID->"1f114867-8747-4873-9520-08b528c8b041"],
Cell[686110, 16487, 3686, 91, 399, "Input",ExpressionUUID->"6b3a6560-ff08-4049-9d71-2dbf78d5b4b3",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[689821, 16582, 28768, 625, 2128, "Input",ExpressionUUID->"2fde2a98-6eca-4066-8a88-8e7857ddc29a",
 InitializationCell->True],
Cell[718592, 17209, 43391, 792, 70, "Output",ExpressionUUID->"22c9ea3d-fc53-42b4-98cf-dea448b72c39"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[762032, 18007, 367, 7, 34, "Subsection",ExpressionUUID->"8b5091c1-4b4c-4b84-8ae8-74b57d5f107d"],
Cell[762402, 18016, 5538, 138, 504, "Input",ExpressionUUID->"9c664041-8798-4824-b3db-b52e15d50643",
 InitializationCell->True],
Cell[767943, 18156, 28015, 660, 1802, "Input",ExpressionUUID->"a249cee7-341c-4616-807e-f45e03d8f6a2",
 InitializationCell->True],
Cell[795961, 18818, 25127, 599, 1802, "Input",ExpressionUUID->"a0cf0661-9c19-45a1-9c5e-a5b016161d4f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[821125, 19422, 167, 3, 34, "Subsection",ExpressionUUID->"69862415-f0b4-4f3e-b299-c01e1402b886"],
Cell[821295, 19427, 5429, 127, 567, "Input",ExpressionUUID->"f6059fee-ec0b-4402-a380-05f7e4afdf7f",
 InitializationCell->True],
Cell[826727, 19556, 5677, 128, 504, "Input",ExpressionUUID->"bdd583f6-f642-4e7e-8990-431798172e5c",
 InitializationCell->True],
Cell[832407, 19686, 23655, 510, 1659, "Input",ExpressionUUID->"c93843d2-07da-428f-a9fc-7a3674dbd471"],
Cell[856065, 20198, 47285, 1027, 2373, "Input",ExpressionUUID->"d9d7177b-a1fb-4ca8-aeab-5b97d2cee98a",
 InitializationCell->True],
Cell[903353, 21227, 5480, 126, 693, "Input",ExpressionUUID->"8b3d23fd-ab2c-42b9-b15e-edb29db4e60d",
 InitializationCell->True],
Cell[908836, 21355, 3871, 95, 294, "Input",ExpressionUUID->"4335bf2a-1d9d-4a59-8209-668562a0b116",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[912744, 21455, 185, 3, 34, "Subsection",ExpressionUUID->"0f364bee-6da7-4f31-b487-f387376c6802"],
Cell[912932, 21460, 3654, 83, 294, "Input",ExpressionUUID->"f9332cbb-12d2-47c2-96bf-7d9b32f79ed6",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[916623, 21548, 363, 4, 34, "Subsection",ExpressionUUID->"9bf5cf03-9030-44c4-a71b-6521a6c8a527"],
Cell[916989, 21554, 288, 6, 34, "Text",ExpressionUUID->"3279a3e3-3217-4d7e-a0b0-fa6b11854268"],
Cell[917280, 21562, 19622, 412, 1155, "Input",ExpressionUUID->"8178e3bd-f3b0-452f-8b29-fe2a1de67c4a",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[936951, 21980, 234, 4, 55, "Section",ExpressionUUID->"a72c1cfe-49e9-4d60-85ba-ae3c37ccc696"],
Cell[CellGroupData[{
Cell[937210, 21988, 245, 5, 34, "Subsection",ExpressionUUID->"c238643f-73de-47db-be65-a8b72f2b36ba"],
Cell[937458, 21995, 280, 7, 33, "Text",ExpressionUUID->"78c8e961-74d1-47a1-ba6a-191ec9e66881"],
Cell[937741, 22004, 4755, 113, 294, "Input",ExpressionUUID->"67116743-ef25-4d65-b12d-f89904af2fc7",
 InitializationCell->True],
Cell[942499, 22119, 175, 4, 33, "Text",ExpressionUUID->"97e6c1b3-be4f-45d0-90f4-e625a0bd545c"],
Cell[942677, 22125, 3645, 89, 252, "Input",ExpressionUUID->"96399b9b-6082-4933-8129-74a743d64ce7",
 InitializationCell->True],
Cell[946325, 22216, 278, 7, 33, "Text",ExpressionUUID->"818d539d-b414-4c42-8e18-4b103ed516ea"],
Cell[946606, 22225, 400, 12, 34, "Text",ExpressionUUID->"5b3fb446-bb87-4122-a30c-d3f7ac473fc9"],
Cell[947009, 22239, 3037, 74, 231, "Input",ExpressionUUID->"a550237f-e4d5-4131-86d0-bcd92824eef9",
 InitializationCell->True],
Cell[950049, 22315, 277, 7, 33, "Text",ExpressionUUID->"491b3eea-5ce1-4604-a411-355204f39e7a"],
Cell[950329, 22324, 5624, 140, 273, "Input",ExpressionUUID->"03dbd778-2082-478b-9772-15886a7d775f",
 InitializationCell->True],
Cell[955956, 22466, 268, 6, 34, "Text",ExpressionUUID->"136c5de0-ebcf-449c-8290-e797fc365faf"],
Cell[956227, 22474, 2063, 58, 63, "Input",ExpressionUUID->"785a3806-cbce-440c-9add-570b97cb296b"],
Cell[958293, 22534, 218, 5, 34, "Text",ExpressionUUID->"6472490c-6d71-4451-ae20-90f5e5e9f9f2"],
Cell[958514, 22541, 7713, 204, 294, "Input",ExpressionUUID->"a7db0745-24c5-4436-9df6-42bcef38db8c",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[966264, 22750, 178, 3, 34, "Subsection",ExpressionUUID->"70156406-7879-4110-8daa-ead624b8d472"],
Cell[966445, 22755, 280, 7, 33, "Text",ExpressionUUID->"0b615199-9a60-480b-abf8-6783c9748055"],
Cell[966728, 22764, 19933, 490, 735, "Input",ExpressionUUID->"0da0b825-4da1-4cda-a812-280ff8e949f6",
 InitializationCell->True],
Cell[986664, 23256, 280, 7, 33, "Text",ExpressionUUID->"090de3d4-107c-4903-83cf-85ebea8217ce"],
Cell[986947, 23265, 6001, 141, 420, "Input",ExpressionUUID->"04017701-c929-4dfa-8df9-ce981878fdeb",
 InitializationCell->True],
Cell[992951, 23408, 277, 7, 33, "Text",ExpressionUUID->"ba1dd3f5-406a-4967-b686-ff34d24f34a9"],
Cell[993231, 23417, 13091, 317, 546, "Input",ExpressionUUID->"feeee8f4-7685-4c92-b0e5-2e98143949a5",
 InitializationCell->True],
Cell[1006325, 23736, 249, 4, 34, "Text",ExpressionUUID->"d8915862-f593-4707-a137-5a17e3a1972a"],
Cell[1006577, 23742, 17389, 497, 315, "Input",ExpressionUUID->"40829a63-a8d7-4ec6-9b93-68247f0faa7a"],
Cell[1023969, 24241, 199, 3, 34, "Text",ExpressionUUID->"04788746-15ee-4081-8d5e-ae5181f4f3a5"],
Cell[1024171, 24246, 73832, 2001, 1617, "Input",ExpressionUUID->"beea8365-741f-4440-b38f-7156c9bc58c5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1098040, 26252, 166, 3, 34, "Subsection",ExpressionUUID->"36ac5fa2-1c37-4892-be48-1390a4ec56e3"],
Cell[1098209, 26257, 6740, 156, 798, "Input",ExpressionUUID->"22a46675-ea49-4990-8a31-3fda4ab70edd",
 InitializationCell->True],
Cell[1104952, 26415, 650, 16, 80, "Text",ExpressionUUID->"ff214cae-c3ce-4384-ad54-052f5ec37e1f"],
Cell[1105605, 26433, 148211, 3149, 10899, "Input",ExpressionUUID->"57e7761c-604a-4daf-8621-5f932d30f210",
 InitializationCell->True],
Cell[1253819, 29584, 255, 6, 34, "Text",ExpressionUUID->"a67a84a1-eacb-44e4-8546-51955a89c9ae"],
Cell[1254077, 29592, 13295, 367, 462, "Input",ExpressionUUID->"bd6da155-3a8b-4c7f-883f-dd860b0e8720"],
Cell[1267375, 29961, 248, 6, 34, "Text",ExpressionUUID->"5085c1ff-e0bb-419a-a801-b05afd404a03"],
Cell[1267626, 29969, 30323, 862, 945, "Input",ExpressionUUID->"bc29c25b-6c26-410e-a3f3-f82806450ca1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1297986, 30836, 280, 6, 34, "Subsection",ExpressionUUID->"6d2c32ff-3105-40b9-b63e-dc10258910ec"],
Cell[1298269, 30844, 5528, 127, 336, "Input",ExpressionUUID->"52de837f-c69d-411c-95b1-ee2173e64d4d",
 InitializationCell->True],
Cell[1303800, 30973, 7352, 174, 462, "Input",ExpressionUUID->"c69e931a-1e58-4529-84ee-e2d86bcb2502",
 InitializationCell->True],
Cell[1311155, 31149, 427, 13, 34, "Text",ExpressionUUID->"68bb8258-4777-47fa-a76f-e0893b827844"],
Cell[1311585, 31164, 6926, 145, 714, "Input",ExpressionUUID->"c294b8a9-d825-46f1-8130-1933fc892592",
 InitializationCell->True],
Cell[1318514, 31311, 3441, 85, 357, "Input",ExpressionUUID->"2e34350c-97f5-4175-9e4d-58802573c1af",
 InitializationCell->True],
Cell[1321958, 31398, 3332, 87, 357, "Input",ExpressionUUID->"2a5e3747-d5cb-4bb0-b7d6-85e0c73f7f3f",
 InitializationCell->True],
Cell[1325293, 31487, 6592, 153, 504, "Input",ExpressionUUID->"8adbe5d3-da46-4a9e-82a3-e5391b7cf13a",
 InitializationCell->True],
Cell[1331888, 31642, 16289, 374, 1302, "Input",ExpressionUUID->"b6ae5317-f3b5-4bd2-bc33-9a8ab7153232",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1348202, 32020, 152, 3, 41, "Input",ExpressionUUID->"f99694d0-acdd-4960-b0ca-b34231d7e3b3"],
Cell[1348357, 32025, 460, 11, 24, "Message",ExpressionUUID->"258f832c-f21f-4670-85a5-aa27172e014e"],
Cell[1348820, 32038, 348, 10, 41, "Output",ExpressionUUID->"14347067-2a66-45cc-a3e9-d040b76e0b8c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349217, 32054, 216, 4, 34, "Subsection",ExpressionUUID->"91a0a829-e466-4891-be4d-54260812a415"],
Cell[1349436, 32060, 7773, 186, 945, "Input",ExpressionUUID->"db452633-1f40-454b-b382-44dba54584d2",
 InitializationCell->True],
Cell[1357212, 32248, 16544, 385, 966, "Input",ExpressionUUID->"7a934e3c-2a34-489c-b239-a2360f2c488c",
 InitializationCell->True],
Cell[1373759, 32635, 3497, 87, 294, "Input",ExpressionUUID->"cd336687-f058-48e7-b6aa-b52032ec05e9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377293, 32727, 219, 4, 34, "Subsection",ExpressionUUID->"6ffcc5bb-05f9-454b-bcd0-28618ba77e5b"],
Cell[1377515, 32733, 379, 9, 57, "Text",ExpressionUUID->"9be2fed4-a175-4525-bfaf-f20bbd643887"],
Cell[1377897, 32744, 27452, 602, 1554, "Input",ExpressionUUID->"d0220bb5-9ed0-4ee6-b047-f25fc7b7672b",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1405398, 33352, 235, 4, 55, "Section",ExpressionUUID->"768a87a2-95d3-4821-ba88-822ce71f4a30"],
Cell[CellGroupData[{
Cell[1405658, 33360, 159, 3, 34, "Subsection",ExpressionUUID->"6fb02cb4-3066-410c-90b1-f6a34acdbfca"],
Cell[CellGroupData[{
Cell[1405842, 33367, 33208, 739, 1869, "Input",ExpressionUUID->"5b85745d-b1d5-4476-8b87-8833f781951d",
 InitializationCell->True],
Cell[1439053, 34108, 4130, 64, 70, "Output",ExpressionUUID->"7640cd10-a01f-4296-a17b-8753712b8a63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1443220, 34177, 31860, 706, 1344, "Input",ExpressionUUID->"18e0497f-5567-4834-96f3-f90c2988bd36",
 InitializationCell->True],
Cell[1475083, 34885, 4149, 85, 70, "Output",ExpressionUUID->"d4944c83-ff1d-48cc-894f-2c45f63fa231"]
}, Open  ]],
Cell[1479247, 34973, 41656, 900, 1932, "Input",ExpressionUUID->"b6c9b10b-9006-4f8f-b17a-ccab898fb15d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1520940, 35878, 177, 3, 34, "Subsection",ExpressionUUID->"8d331f24-9a23-44a2-bbd7-400dda42b868"],
Cell[CellGroupData[{
Cell[1521142, 35885, 5520, 126, 252, "Input",ExpressionUUID->"5652f2c7-fab0-4601-af36-8d89124d44b9",
 InitializationCell->True],
Cell[1526665, 36013, 224161, 4658, 70, "Output",ExpressionUUID->"c4bda9c6-0921-45d5-b775-28bf2102cf4f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1750875, 40677, 179, 3, 34, "Subsection",ExpressionUUID->"b6b28c5e-b8c3-4cb7-a159-dc937e381bdb"],
Cell[1751057, 40682, 92777, 1954, 4431, "Input",ExpressionUUID->"d9363831-1512-488f-8027-9456fcb524f9",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1843871, 42641, 186, 3, 34, "Subsection",ExpressionUUID->"6daf3244-22c2-4186-80a0-19f45095d5e8"],
Cell[1844060, 42646, 27709, 619, 1596, "Input",ExpressionUUID->"97fad4e2-2063-49f1-b96c-12fc7afa6973"],
Cell[1871772, 43267, 41477, 902, 2268, "Input",ExpressionUUID->"58f4d0e0-50c4-4d78-96a2-d9b5a55ea483",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1913274, 44173, 221, 4, 41, "Input",ExpressionUUID->"0b11a82a-04e8-41f0-b258-774fd785cf0d"],
Cell[1913498, 44179, 286, 5, 63, "Output",ExpressionUUID->"13d02bae-cb11-4505-861a-f61c0f49c7a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1913821, 44189, 296, 7, 41, "Input",ExpressionUUID->"8b708601-d976-4725-84a7-9804e16d1173"],
Cell[1914120, 44198, 809, 28, 158, "Output",ExpressionUUID->"4e6afea0-803f-47e5-8e9f-9a167618d864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1914966, 44231, 140, 2, 41, "Input",ExpressionUUID->"89cfdba2-1654-4434-ac30-03bbdddb1627"],
Cell[1915109, 44235, 1152, 46, 430, "Output",ExpressionUUID->"0943bd4d-18ef-4388-bbf5-eb461dcd7178"]
}, Open  ]],
Cell[1916276, 44284, 1096, 29, 41, "Input",ExpressionUUID->"5648cfcf-3fb8-454a-8152-237f2e34555b"],
Cell[1917375, 44315, 243, 6, 41, "Input",ExpressionUUID->"b1af7c03-ec8d-4783-8a12-e0c420476d1c"],
Cell[1917621, 44323, 4521, 99, 273, "Input",ExpressionUUID->"d6f1963a-ecb3-4a4c-88be-dcc82abd2916",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1922179, 44427, 169, 3, 34, "Subsection",ExpressionUUID->"da9c5a5f-f7c5-432f-87e7-856767831a71"],
Cell[1922351, 44432, 4823, 112, 294, "Input",ExpressionUUID->"ea79e9ca-85e5-4aec-b51e-db36832a4778",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1927211, 44549, 276, 4, 34, "Subsection",ExpressionUUID->"250a5146-c23f-42ef-9857-f33b524c13d6"],
Cell[1927490, 44555, 2515, 57, 168, "Input",ExpressionUUID->"9978675a-aba6-476c-9d89-2d0c7ee9c15b",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1930042, 44617, 212, 4, 34, "Subsection",ExpressionUUID->"d20610f1-7a4d-499a-b4ac-931ae02934dc"],
Cell[1930257, 44623, 23179, 550, 1260, "Input",ExpressionUUID->"eb189d07-17f2-4018-915b-2a6aa600b30d",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1953485, 45179, 274, 4, 55, "Section",ExpressionUUID->"750ae947-bfcc-4223-ac90-c8e49f2a0fc1"],
Cell[CellGroupData[{
Cell[1953784, 45187, 241, 4, 34, "Subsection",ExpressionUUID->"5c3df864-7f1c-49dd-9e4a-cab39cc5d67d"],
Cell[1954028, 45193, 7757, 175, 735, "Input",ExpressionUUID->"46a14b6b-9b52-410e-aa59-497939f8f528",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1961822, 45373, 216, 4, 34, "Subsection",ExpressionUUID->"63539feb-6444-4474-9558-5f3cef8c9ecf"],
Cell[1962041, 45379, 4265, 92, 294, "Input",ExpressionUUID->"1426e729-4a0a-46ec-b8ab-869d9ffcce48",
 InitializationCell->True],
Cell[1966309, 45473, 3557, 83, 294, "Input",ExpressionUUID->"bda4f4e2-c4ac-46a6-8fb8-699dae02826e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1969903, 45561, 175, 3, 34, "Subsection",ExpressionUUID->"56fea337-6064-4231-a962-598b4190d63f"],
Cell[1970081, 45566, 1728, 45, 63, "Input",ExpressionUUID->"c829fcbb-0edd-42f0-a062-a0a1e560db98",
 InitializationCell->True],
Cell[1971812, 45613, 2108, 52, 210, "Input",ExpressionUUID->"7304ac1b-8c40-49d0-aadf-27284ba01b26",
 InitializationCell->True],
Cell[1973923, 45667, 3023, 72, 273, "Input",ExpressionUUID->"92453a9d-3b54-48a4-ac76-97532c5ff19c",
 InitializationCell->True],
Cell[1976949, 45741, 2771, 56, 126, "Input",ExpressionUUID->"5b201234-b218-4ce2-ae0f-cd252a2a4f6f",
 InitializationCell->True],
Cell[1979723, 45799, 1885, 47, 126, "Input",ExpressionUUID->"57fa5775-3f89-456f-b056-b88d282dbe82",
 InitializationCell->True],
Cell[1981611, 45848, 4430, 96, 210, "Input",ExpressionUUID->"d0e948f9-ac33-4720-a703-b253a80c10f7",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1986078, 45949, 337, 5, 34, "Subsection",ExpressionUUID->"778f1c73-8392-4b18-83cc-33c8cec1ccef"],
Cell[1986418, 45956, 1610, 36, 63, "Input",ExpressionUUID->"ec7684de-871c-4915-be8f-dbbd33eb7749",
 InitializationCell->True],
Cell[1988031, 45994, 1323, 31, 63, "Input",ExpressionUUID->"0f9a2648-3e5e-4ee7-a953-0dfdd2b583ba"],
Cell[1989357, 46027, 74202, 1487, 2730, "Input",ExpressionUUID->"08c32532-fbbe-49a1-a205-d5c76ea257c4",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[2063596, 47519, 256, 4, 34, "Subsection",ExpressionUUID->"62e0187b-61a7-4a64-af47-2ae0d1c99773"],
Cell[2063855, 47525, 2504, 58, 189, "Input",ExpressionUUID->"9024b2c8-77ae-440d-9339-790a1df6105c",
 InitializationCell->True],
Cell[2066362, 47585, 1882, 43, 273, "Input",ExpressionUUID->"a5675269-4188-4d98-b2d5-0d7cb9e5aa47",
 InitializationCell->True],
Cell[2068247, 47630, 1244, 30, 126, "Input",ExpressionUUID->"c8a40681-1d0f-4731-8917-6ee70908cea9",
 InitializationCell->True],
Cell[2069494, 47662, 14745, 306, 1022, "Input",ExpressionUUID->"7c5cfdf3-1d16-4adc-8da3-dcf3788a82e1",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2084288, 47974, 293, 5, 55, "Section",ExpressionUUID->"96a71c69-9dd0-4762-99d1-0ef4397f39b3"],
Cell[2084584, 47981, 21891, 483, 1218, "Input",ExpressionUUID->"8e9d544a-df33-4d5a-97d1-1a46fde87b87",
 InitializationCell->True],
Cell[2106478, 48466, 2974, 65, 147, "Input",ExpressionUUID->"72e9dcfa-18b5-4e24-891c-922c0f83cc7c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2109477, 48535, 226, 4, 41, "Input",ExpressionUUID->"e555fc00-ffcc-4c65-b1d0-5dabb6f07a9b"],
Cell[2109706, 48541, 344, 8, 29, "Print",ExpressionUUID->"f9b28820-4f85-48bc-af4c-6c6c82a74e13"],
Cell[2110053, 48551, 238, 4, 41, "Output",ExpressionUUID->"4aba3447-fec3-42c0-aeca-d5bf06998bb4"]
}, Open  ]],
Cell[2110306, 48558, 154, 3, 41, "Input",ExpressionUUID->"57c82b2e-1893-426f-96dc-0cc46c63b836"],
Cell[CellGroupData[{
Cell[2110485, 48565, 115, 1, 41, "Input",ExpressionUUID->"87806527-f913-4c44-9db5-8b484a458ea2"],
Cell[2110603, 48568, 207, 4, 41, "Output",ExpressionUUID->"d13acbf7-7066-4067-b7eb-abedbd13c403"]
}, Open  ]],
Cell[2110825, 48575, 2560, 64, 336, "Input",ExpressionUUID->"edf46a23-b38c-4a76-8fb2-7c27585a4be9",
 InitializationCell->True],
Cell[2113388, 48641, 28419, 615, 2100, "Input",ExpressionUUID->"caa0c708-10a8-4a4f-a2ef-095368905d8a",
 InitializationCell->True],
Cell[2141810, 49258, 2595, 59, 105, "Input",ExpressionUUID->"804126f5-46df-4e03-b1f2-c73405bbdaa3",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2144442, 49322, 159, 3, 69, "Section",ExpressionUUID->"879344ba-83a2-4298-b790-fa186bed6f26"],
Cell[2144604, 49327, 1344, 30, 84, "Input",ExpressionUUID->"58fc506a-df72-4e6d-bfd6-3edfef595a5b",
 InitializationCell->True],
Cell[2145951, 49359, 2467, 49, 210, "Input",ExpressionUUID->"363fdf7c-4081-484c-8464-b52e11be8129",
 InitializationCell->True],
Cell[2148421, 49410, 1223, 27, 126, "Input",ExpressionUUID->"014b10a8-4d81-4986-8d1b-4c9dd4b064b6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[2149681, 49442, 313, 5, 55, "Section",ExpressionUUID->"b0d4e4b1-3edc-4ca6-a6c6-b994fb5407d2"],
Cell[2149997, 49449, 24011, 502, 1407, "Input",ExpressionUUID->"9b7ef555-6ff1-4371-ad75-68b8f2b9b99f",
 InitializationCell->True],
Cell[2174011, 49953, 30672, 757, 1722, "Input",ExpressionUUID->"e742354a-465c-48c0-8344-1e35907ea730",
 InitializationCell->True],
Cell[2204686, 50712, 9382, 206, 462, "Input",ExpressionUUID->"a5e02793-8b78-4f31-ae04-ef940f7f2582",
 InitializationCell->True],
Cell[2214071, 50920, 150, 3, 41, "Input",ExpressionUUID->"bda747a0-5226-4d3f-afc7-3189d8ab7c68"],
Cell[2214224, 50925, 3255, 62, 273, "Input",ExpressionUUID->"47c01928-da56-417f-b4e6-7d5483b12a7a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2217516, 50992, 164, 3, 69, "Section",ExpressionUUID->"2e8058eb-2cb3-4356-85d6-d4e9bfb2e92f"],
Cell[2217683, 50997, 6407, 154, 609, "Input",ExpressionUUID->"4f69b097-caa6-42e2-bf19-8d666605b03f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2224115, 51155, 234, 4, 34, "Subsection",ExpressionUUID->"9e0f5799-b464-4ea5-934a-754512c5d86e"],
Cell[2224352, 51161, 2689, 62, 126, "Input",ExpressionUUID->"dd36343b-2310-456c-aa8e-a3dfef982b4f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2227066, 51227, 7122, 180, 420, "Input",ExpressionUUID->"996f1ae8-4e9f-4131-a4df-70d04224baa9",
 InitializationCell->True],
Cell[2234191, 51409, 1309, 26, 44, "Output",ExpressionUUID->"ee230918-c499-4ee9-bda0-d9a762f2e2c8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2235549, 51441, 175, 3, 34, "Subsection",ExpressionUUID->"b9c5fdbf-7b3a-431f-b6a7-50796f706403"],
Cell[2235727, 51446, 9164, 208, 945, "Input",ExpressionUUID->"eef19612-a127-4c68-bf8e-79f222d9d5cc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2244928, 51659, 660, 20, 34, "Subsection",ExpressionUUID->"5c3cb178-33bf-4818-9e5c-3bae257e9326"],
Cell[2245591, 51681, 4053, 98, 252, "Input",ExpressionUUID->"1b871996-a5c2-4736-bb62-ead3db791754",
 InitializationCell->True],
Cell[2249647, 51781, 9225, 228, 525, "Input",ExpressionUUID->"b4539733-2789-48c3-9e9d-688669a3d873",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2258909, 52014, 586, 19, 34, "Subsection",ExpressionUUID->"e610f12c-0432-4f4c-bc78-eca767d39aa8"],
Cell[2259498, 52035, 11804, 252, 1638, "Input",ExpressionUUID->"c61a39c1-a57e-474e-8c51-b22b2e04310c",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2271339, 52292, 643, 20, 34, "Subsection",ExpressionUUID->"851bd514-9eb6-46db-80b1-fd7b15d8becb"],
Cell[2271985, 52314, 27838, 547, 1701, "Input",ExpressionUUID->"0a9d3b39-c606-48d3-97c6-1f73c2d7f756",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2299872, 52867, 164, 3, 55, "Section",ExpressionUUID->"01eefdf4-ac30-453f-81eb-edaa3a76ccc1"],
Cell[2300039, 52872, 46857, 927, 3885, "Input",ExpressionUUID->"973fa97a-8cb0-44f1-ac91-8ca87b344251",
 InitializationCell->True],
Cell[2346899, 53801, 23488, 491, 1575, "Input",ExpressionUUID->"6db989f0-8377-4ae5-b9da-748f85effb7e",
 InitializationCell->True],
Cell[2370390, 54294, 3893, 99, 329, "Input",ExpressionUUID->"0e7cae26-54d7-4d70-adf1-1444f55646eb",
 InitializationCell->True],
Cell[2374286, 54395, 14179, 348, 1239, "Input",ExpressionUUID->"00e24f89-858b-4cd6-8fd6-9dec9f23b9ba",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2388502, 54748, 256, 4, 69, "Section",ExpressionUUID->"8eccf5b0-c0e6-4865-afa2-d1ab8a80725f"],
Cell[2388761, 54754, 1889, 61, 147, "Input",ExpressionUUID->"51493daf-1df9-454d-935f-c1eb6397a7d8",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

